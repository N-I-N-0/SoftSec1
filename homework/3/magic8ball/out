
0x0000000000084bd5: adc al, 0; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x0000000000084c05: adc al, 0; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x0000000000084c55: adc al, 0; mov rax, qword ptr [rdx + 0x368]; test rax, rax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x000000000006b7e1: adc al, 0x10; lea rax, [rip + 0x123f56]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b6da: adc al, 0x10; lea rax, [rip + 0x123fdd]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b733: adc al, 0x10; lea rax, [rip + 0x124004]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b789: adc al, 0x10; lea rax, [rip + 0x12402e]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b680: adc al, 0x10; lea rax, [rip + 0x1240b7]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006aad5: adc al, 0x10; lea rax, [rip + 0x124c62]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x00000000000e0028: adc al, 0x27; or eax, dword ptr [rax]; movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x0000000000082d3b: adc al, 0x48; mov eax, dword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000007522c: adc al, 0x91; add rdx, rcx; jmp rdx; 
0x00000000000ca7be: adc al, 0x96; add rdx, rsi; jmp rdx; 
0x00000000000f3c84: adc al, 0x97; add rdx, r15; jmp rdx; 
0x000000000003f5ed: adc al, 0x97; add rdx, rdi; cmp esi, 0x2f; jmp rdx; 
0x000000000009efa7: adc al, 0x97; add rdx, rdi; jmp rdx; 
0x00000000000d68c0: adc al, 0xbb; or eax, dword ptr [rax]; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x000000000005d654: adc al, 1; lea rax, [rip + 0x131943]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d524: adc al, 1; lea rax, [rip + 0x1319f3]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d41d: adc al, 1; lea rax, [rip + 0x131afa]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006af96: adc al, 6; lea rax, [rip + 0x124921]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005dde4: adc al, 6; lea rax, [rip + 0x131133]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d58e: adc al, 6; lea rax, [rip + 0x131909]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d6cb: adc al, 6; lea rax, [rip + 0x13194c]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b038: adc al, 7; lea rax, [rip + 0x12487f]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006af0f: adc al, 7; lea rax, [rip + 0x124928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d5ef: adc al, 7; lea rax, [rip + 0x131928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d4bd: adc al, 7; lea rax, [rip + 0x131a5a]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d0cd: adc al, 7; lea rax, [rip + 0x131fca]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000006af9c: adc al, byte ptr [r8]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006af15: adc al, byte ptr [r8]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006aadc: adc al, byte ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006af16: adc al, byte ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006d5af: adc al, byte ptr [rax]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x000000000006aeb4: adc al, byte ptr [rax]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006dd15: adc al, byte ptr [rax]; movsxd rax, dword ptr [rsi + rbx*4]; add rax, rsi; jmp rax; 
0x000000000006d1f2: adc al, byte ptr [rax]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000006b155: adc al, byte ptr [rax]; movzx eax, byte ptr [rsi + rax]; lea rsi, [rip - 0x935]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005f8f7: adc al, byte ptr [rax]; movzx edx, dl; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b78e: adc al, byte ptr cs:[rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006d5ae: adc al, byte ptr es:[rax]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x0000000000088f2b: adc al, ch; pop rdi; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000079577: adc bh, bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000146e14: adc bh, ch; jmp qword ptr [rsi + 0xf]; 
0x0000000000085a01: adc byte ptr [r13 + 0x481174c0], r8b; mov edx, dword ptr [rdi + 8]; mov rax, qword ptr [rdi]; mov rdi, rdx; jmp rax; 
0x0000000000082e4e: adc byte ptr [r15], cl; sbb dword ptr [rbp - 1], -1; jmp qword ptr [rsi + 0x2e]; 
0x000000000008c7d1: adc byte ptr [r8], al; lea r15, [rdi + 0x10]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000aec6a: adc byte ptr [rax + 0x29], cl; retf 0x8d4c; sbb eax, 0xe26db; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac75a: adc byte ptr [rax + 0x29], cl; retf 0x8d4c; sbb eax, 0xe4aa3; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a992a: adc byte ptr [rax + 0x29], cl; retf 0x8d4c; sbb eax, 0xe7813; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76fa: adc byte ptr [rax + 0x29], cl; retf 0x8d4c; sbb eax, 0xe9983; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a43aa: adc byte ptr [rax + 0x29], cl; retf 0x8d4c; sbb eax, 0xecb3b; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c5a: adc byte ptr [rax + 0x29], cl; retf 0x8d4c; sbb eax, 0xed1ff; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000008c7d7: adc byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x00000000000a437b: adc byte ptr [rax + 0xf], cl; mov esp, 0x1d8d4cd2; imul ecx, ebx, 0x6349000e; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000006b7e2: adc byte ptr [rax - 0x73], cl; add eax, 0x123f56; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b6db: adc byte ptr [rax - 0x73], cl; add eax, 0x123fdd; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b734: adc byte ptr [rax - 0x73], cl; add eax, 0x124004; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b78a: adc byte ptr [rax - 0x73], cl; add eax, 0x12402e; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b681: adc byte ptr [rax - 0x73], cl; add eax, 0x1240b7; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006aad6: adc byte ptr [rax - 0x73], cl; add eax, 0x124c62; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b1b5: adc byte ptr [rax - 0x73], cl; cmp eax, 0xfffff670; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006ac6d: adc byte ptr [rax - 0x73], cl; cmp eax, 0xfffffbb8; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006b0ff: adc byte ptr [rax - 0x73], cl; xor eax, 0xfffff726; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b095: adc byte ptr [rax - 0x73], cl; xor eax, 0xfffff790; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000832c7: adc byte ptr [rax - 0x75], cl; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000000027631: adc byte ptr [rax - 0x77], cl; fistp word ptr [rbx + 0x48]; ror eax, 0x11; xor rax, qword ptr fs:[0x30]; jmp rax; 
0x00000000000ef967: adc byte ptr [rax - 0x7d], cl; and al, 0x18; add dword ptr [rcx - 0x7d], ecx; jmp qword ptr [rax + 0x48]; 
0x00000000000ff5d2: adc byte ptr [rax], al; add cl, ch; mov gs, word ptr [rbp - 0xe]; jmp qword ptr [rsi + 0xf]; 
0x000000000008c7d2: adc byte ptr [rax], al; lea r15, [rdi + 0x10]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000850c9: adc byte ptr [rax], al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000085a02: adc byte ptr [rbp + 0x481174c0], al; mov edx, dword ptr [rdi + 8]; mov rax, qword ptr [rdi]; mov rdi, rdx; jmp rax; 
0x00000000000af7ed: adc byte ptr [rbp + rcx*4 + 0x1d], cl; imul ebx, dword ptr [rsi + rcx], 0; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a50ad: adc byte ptr [rbp + rcx*4 + 0x1d], cl; movabs r15, 0x8d49830c634b000e; or al, 0xb; jmp rcx; 
0x00000000000a996f: adc byte ptr [rbp + rcx*4 + 0x1d], cl; sal dword ptr [rdi + 0xe], 1; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7d8: adc byte ptr [rbp + rcx*4 + 0x1d], cl; sbb byte ptr [rsi + rcx], 0; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ea964: adc byte ptr [rcx + 0x63], cl; cmp byte ptr [r15 + 0x15], r14b; movzx ecx, byte ptr [r15 + 0x30]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x0000000000077ba2: adc byte ptr [rcx + rcx*4 - 0x1f], al; mov edx, ebp; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000082e4f: adc byte ptr [rdi], cl; sbb dword ptr [rbp - 1], -1; jmp qword ptr [rsi + 0x2e]; 
0x00000000000beb2c: adc byte ptr [rdx], ch; stc; jmp qword ptr [rsi + 0x3d]; 
0x00000000000a80ab: adc byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; fsub st(1), st(0); imul edi, edi, -1; jmp qword ptr [rsi + 0x66]; 
0x000000000006c1d0: adc ch, cl; mov ecx, 0x66fffff6; nop dword ptr cs:[rax + rax]; mov ecx, 1; xor ebp, ebp; jmp rax; 
0x0000000000027549: adc dword ptr [rax + rcx*2 + 0x33], esp; add al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; jmp rax; 
0x0000000000074c5f: adc dword ptr [rax], eax; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000752c2: adc dword ptr [rax], eax; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000007531c: adc dword ptr [rax], eax; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000074c05: adc dword ptr [rax], eax; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000005ddea: adc dword ptr [rbx], edx; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rdi; jmp rax; 
0x00000000000f3c7e: adc dword ptr [rdi], ecx; mov dh, 0xd2; movsxd rdx, dword ptr [r15 + rdx*4]; add rdx, r15; jmp rdx; 
0x0000000000029049: adc dword ptr [rdi], edx; add byte ptr [rcx], dh; div byte ptr [rcx]; jmp qword ptr [rsi + 0xf]; 
0x00000000000ac873: adc dword ptr [rdx + 0xe], ecx; add byte ptr [rbx + 0x63], cl; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7f3: adc dword ptr [rdx + 0xe], ecx; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000008d192: adc eax, 0x103a85; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000008c7cf: adc eax, 0x104338; lea r15, [rdi + 0x10]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000850c6: adc eax, 0x10b851; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000084c52: adc eax, 0x14d241; mov rax, qword ptr [rdx + 0x368]; test rax, rax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x00000000000277a6: adc eax, 0x153855; mov eax, eax; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000008375a: adc eax, 0x1f0fc35b; add al, ch; sti; sub edi, edx; jmp qword ptr [rsi + 0xf]; 
0x000000000016e6ee: adc eax, 0x40d; add rdx, r8; jmp rdx; 
0x0000000000035991: adc eax, 0x4634800; xchg ecx, eax; add rax, rcx; jmp rax; 
0x000000000013a71a: adc eax, 0x485c508b; lea esi, [rax + 0x48]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x00000000000ea96a: adc eax, 0x4fb60f41; xor byte ptr [rax + 0x63], cl; or al, 0x8e; add rcx, rsi; jmp rcx; 
0x0000000000142b22: adc eax, 0x52d5d; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000d6bca: adc eax, 0x74ff8548; sbb byte ptr [rax - 0x7b], cl; div byte ptr [rcx + rbx - 0x17]; imul byte ptr [rdx - 4]; jmp qword ptr [rsi + 0xf]; 
0x00000000000ebfca: adc eax, 0x74ff8548; sbb byte ptr [rax - 0x7b], cl; div byte ptr [rcx + rbx - 0x17]; not byte ptr [rsi]; sti; jmp qword ptr [rsi + 0xf]; 
0x00000000000f42c2: adc eax, 0x9f2cd; mov r15d, ecx; movsxd rax, dword ptr [rdx + r15*4]; add rax, rdx; jmp rax; 
0x00000000000ec9b1: adc eax, 0xa63aa; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000eca03: adc eax, 0xa65b0; mov edi, edi; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000e0027: adc eax, 0xb2714; movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x00000000000e00fe: adc eax, 0xb2715; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000e0120: adc eax, 0xb284f; movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x00000000000db0de: adc eax, 0xb74b9; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d9461: adc eax, 0xb8fc6; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d67c8: adc eax, 0xbbadf; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d68bf: adc eax, 0xbbb14; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000d6480: adc eax, 0xbbd6f; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d6350: adc eax, 0xbbdc3; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d5f14: adc eax, 0xbc1ab; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x0000000000039734: adc eax, 0xc0894500; movsxd rsi, dword ptr [rdi + r8*4]; add rsi, rdi; jmp rsi; 
0x0000000000037461: adc eax, 0xc0b60f00; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000ccada: adc eax, 0xc520d; mov eax, ecx; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000c873c: adc eax, 0xc914b; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000c7549: adc eax, 0xca106; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000b0a51: adc eax, 0xe0a8a; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000e00ff: adc eax, 0xf000b27; mov dh, 0xc0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000009a080: adc eax, 0xf6d3b; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000687bc: adc eax, 0xfffffc13; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdx; jmp rax; 
0x00000000000581b9: adc eax, dword ptr [eax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000005d0d4: adc eax, dword ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d595: adc eax, dword ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d424: adc eax, dword ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x0000000000057fd4: adc eax, dword ptr [rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000005a874: adc eax, dword ptr [rax]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005eec8: adc eax, dword ptr [rax]; movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000005f307: adc eax, dword ptr [rax]; movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x00000000000d02dd: adc ebp, ecx; lodsd eax, dword ptr [rsi]; cld; cld; jmp qword ptr [rsi + 0x2e]; 
0x00000000000f42bf: adc ecx, dword ptr [rax - 0x73]; adc eax, 0x9f2cd; mov r15d, ecx; movsxd rax, dword ptr [rdx + r15*4]; add rax, rdx; jmp rax; 
0x00000000000581b4: adc ecx, dword ptr [rax - 0x73]; or eax, 0x13672c; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000a9931: adc edi, dword ptr [rax + 0xe]; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000146d94: adc edi, ebp; jmp qword ptr [rsi + 0xf]; 
0x000000000010becb: adc edi, edi; jmp qword ptr [rsi - 0x70]; 
0x0000000000085114: adc edx, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000006b154: adc r8b, byte ptr [r8]; movzx eax, byte ptr [rsi + rax]; lea rsi, [rip - 0x935]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006aadb: adc r8b, byte ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005a873: adc r8d, dword ptr [r8]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b9e: add ah, byte ptr [rdi]; adc eax, 0xc0b60f00; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005a2c4: add al, 0; add byte ptr [rax + 0x63], cl; or al, 0x8a; add rcx, rdx; jmp rcx; 
0x00000000000d634b: add al, 0; add byte ptr [rax - 0x73], cl; adc eax, 0xbbdc3; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x000000000006d1ea: add al, 0; add byte ptr [rax - 0x73], cl; xor eax, 0x122828; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000be820: add al, 0; add byte ptr [rax], al; add cl, ch; xor r15d, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000016e6f0: add al, 0; add byte ptr [rcx + rax - 0x3e], cl; jmp rdx; 
0x000000000006ac6c: add al, 0x10; lea rdi, [rip - 0x448]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006b1b4: add al, 0x10; lea rdi, [rip - 0x990]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006b094: add al, 0x10; lea rsi, [rip - 0x870]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b0fe: add al, 0x10; lea rsi, [rip - 0x8da]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000008b2f6: add al, 0x11; add al, ch; jb 0x8b297; cli; jmp qword ptr [rsi - 0x70]; 
0x000000000002754d: add al, 0x25; xor byte ptr [rax], al; add byte ptr [rax], al; jmp rax; 
0x000000000006b738: add al, 0x40; adc al, byte ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000016e6e1: add al, 0x49; lea rcx, [rdi + rdx - 0x60]; and rdi, 0xfffffffffffffff0; lea rdx, [rip + 0x40d]; add rdx, r8; jmp rdx; 
0x0000000000057fd8: add al, 0x81; add rax, rcx; jmp rax; 
0x000000000005ca81: add al, 0x81; add rax, rsi; jmp rax; 
0x00000000000277af: add al, 0x82; add rax, rdx; jmp rax; 
0x00000000000e7be4: add al, 0x83; add rax, rbx; jmp rax; 
0x0000000000134cec: add al, 0x86; add rax, r14; jmp rax; 
0x000000000006ac77: add al, 0x86; add rax, rdi; jmp rax; 
0x0000000000037468: add al, 0x86; add rax, rsi; jmp rax; 
0x00000000000d9ab3: add al, 0x87; add rax, rdi; jmp rax; 
0x00000000000687c3: add al, 0x87; add rax, rdx; jmp rax; 
0x000000000005a878: add al, 0x87; add rax, rsi; jmp rax; 
0x000000000005d0d8: add al, 0x90; add rax, rcx; jmp rax; 
0x000000000005d599: add al, 0x90; add rax, rdi; jmp rax; 
0x000000000005d428: add al, 0x90; add rax, rsi; jmp rax; 
0x0000000000035995: add al, 0x91; add rax, rcx; jmp rax; 
0x000000000005f8fe: add al, 0x96; add rax, rsi; jmp rax; 
0x000000000005f1d2: add al, 0x96; mov r8, qword ptr [rbp - 0x660]; mov rcx, qword ptr [rbp - 0x668]; add rax, rsi; jmp rax; 
0x000000000006d5b3: add al, 0x99; add rax, rcx; jmp rax; 
0x00000000000d6357: add al, 0x9a; add rax, rdx; jmp rax; 
0x000000000006dd19: add al, 0x9e; add rax, rsi; jmp rax; 
0x000000000006d3c6: add al, 0x9e; mov r9, qword ptr [rbp - 0x600]; mov rcx, qword ptr [rbp - 0x608]; mov r8d, dword ptr [rbp - 0x610]; add rax, rsi; jmp rax; 
0x00000000000e0032: add al, 0xa2; add rax, rdx; jmp rax; 
0x00000000000d9468: add al, 0xaa; add rax, rdx; jmp rax; 
0x000000000013f8b4: add al, 0xb1; add rax, rcx; jmp rax; 
0x00000000000d5f1d: add al, 0xb2; add rax, rdx; jmp rax; 
0x00000000000b0a58: add al, 0xba; add rax, rdx; jmp rax; 
0x000000000007618f: add al, 0xfb; jmp qword ptr [rsi + 0x2e]; 
0x0000000000147c27: add al, 0xfd; jmp qword ptr [rsi + 0xf]; 
0x00000000000687b8: add al, 2; lea rdx, [rip - 0x3ed]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdx; jmp rax; 
0x000000000006aead: add al, 6; lea rsi, [rip + 0x124a8a]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006b159: add al, 6; lea rsi, [rip - 0x935]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005a86d: add al, 7; lea rdi, [rip + 0x1345aa]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005ca7d: add al, 7; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000003315e: add al, byte ptr [rax]; add byte ptr [rax + 0x63], cl; or al, 0xbe; add rcx, rsi; jmp rcx; 
0x00000000000d647b: add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; adc eax, 0xbbd6f; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000001403ef: add al, byte ptr [rax]; add byte ptr [rax], al; add rdi, 0x10; jmp rcx; 
0x0000000000142aef: add al, byte ptr [rax]; add byte ptr [rax], al; add rdi, 0x58; jmp rcx; 
0x00000000001421ef: add al, byte ptr [rax]; add byte ptr [rax], al; add rdi, 0x68; jmp rcx; 
0x000000000013f822: add al, byte ptr [rax]; add byte ptr [rax], al; add rdi, 0xc8; jmp rcx; 
0x000000000013c93e: add al, byte ptr [rax]; add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; jmp rcx; 
0x0000000000102936: add al, byte ptr [rax]; add byte ptr [rax], al; pop rbp; pop r12; jmp rax; 
0x00000000000e6e0f: add al, byte ptr [rax]; add cl, ch; xchg ecx, eax; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x000000000014a72c: add al, byte ptr [rcx - 0x7d]; mov dword ptr [rcx], 0xfffd3ee9; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e919: add al, ch; add dword ptr [rdx - 8], ebx; call qword ptr [rax - 0x1de417]; jmp qword ptr [rsi + 0x2e]; 
0x000000000008482f: add al, ch; cmp eax, dword ptr [rsi]; sti; jmp qword ptr [rsi + 0x66]; 
0x000000000008835e: add al, ch; fdiv qword ptr [rax - 1]; jmp qword ptr [rsi + 0x66]; 
0x000000000008dc90: add al, ch; fidiv dword ptr [rcx - 6]; jmp qword ptr [rsi + 0x2e]; 
0x000000000008815d: add al, ch; fnsave dword ptr [rdx - 1]; jmp qword ptr [rsi + 0x66]; 
0x0000000000133191: add al, ch; fstp dword ptr [rax + rsi*8]; jmp qword ptr [rsi + 0xf]; 
0x000000000007dbbf: add al, ch; imul eax, dword ptr [rax + rax - 0x1ba1700], -1; jmp qword ptr [rsi + 0xf]; 
0x0000000000081eff: add al, ch; imul ebp, dword ptr [rdi], -5; jmp qword ptr [rsi + 0x66]; 
0x00000000001336ff: add al, ch; imul edx, dword ptr [rdi], -0x10; jmp qword ptr [rsi + 0x2e]; 
0x000000000009412d: add al, ch; insd dword ptr [rdi], dx; xor bh, bh; jmp qword ptr [rsi + 0xf]; 
0x000000000005989d: add al, ch; int 0xb5; std; jmp qword ptr [rsi + 0x66]; 
0x00000000001085f8: add al, ch; jb 0x1085c4; bnd jmp qword ptr [rsi - 0x70]; 
0x000000000008b2f8: add al, ch; jb 0x8b297; cli; jmp qword ptr [rsi - 0x70]; 
0x00000000000f42ec: add al, ch; jle 0xf42fb; hlt; jmp qword ptr [rsi + 0xf]; 
0x00000000000d67ef: add al, ch; jnp 0xd67d9; cmc; jmp qword ptr [rsi + 0x2e]; 
0x00000000000d90b4: add al, ch; mov dh, 0xbd; cmc; jmp qword ptr [rsi + 0xf]; 
0x00000000000bd8ac: add al, ch; mov ds, word ptr [rbx]; cld; jmp qword ptr [rsi + 0x66]; 
0x0000000000122e60: add al, ch; or ah, byte ptr [rax]; int1; jmp qword ptr [rsi + 0x2e]; 
0x0000000000115c5e: add al, ch; or al, 0xf2; int1; jmp qword ptr [rsi + 0x2e]; 
0x00000000000e5b22: add al, ch; or spl, sil; jmp qword ptr [rsi + 0xf]; 
0x000000000010ef6c: add al, ch; out dx, al; cld; jmp qword ptr [rsi + 0xf]; 
0x00000000000fb41b: add al, ch; out dx, eax; std; jmp qword ptr [rsi + 0x45]; 
0x0000000000132d11: add al, ch; pop rcx; and eax, esi; jmp qword ptr [rsi + 0xf]; 
0x000000000007e910: add al, ch; pop rdx; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000050d04: add al, ch; push 0x78e90012; in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000000ba7a0: add al, ch; retf 0xf7a6; jmp qword ptr [rsi + 0x2e]; 
0x0000000000133221: add al, ch; sbb al, 0xf0; jmp qword ptr [rsi + 0xf]; 
0x00000000000d450c: add al, ch; scasd eax, dword ptr [rdi]; cli; jmp qword ptr [rsi + 0x66]; 
0x000000000008b83e: add al, ch; sub al, 0x96; cli; jmp qword ptr [rsi + 0x66]; 
0x000000000014fdc1: add al, ch; sub esi, esp; out dx, al; jmp qword ptr [rsi + 0xf]; 
0x00000000000fbaf3: add al, ch; test al, 0xf2; jmp qword ptr [rsi - 0x7d]; 
0x00000000000bdce4: add al, ch; xchg byte ptr [rcx - 9], dh; jmp qword ptr [rsi + 0xf]; 
0x000000000013b0e3: add al, ch; xchg edi, eax; xor eax, 0xd2e8fff0; iretd; std; jmp qword ptr [rsi - 0x70]; 
0x0000000000043ed4: add al, ch; xchg esi, eax; ud0; jmp qword ptr [rsi + 0xf]; 
0x00000000001333d1: add al, ch; cdq; sbb dh, al; jmp qword ptr [rsi + 0xf]; 
0x000000000008f140: add al, ch; cli; add bh, bh; jmp qword ptr [rsi + 0x2e]; 
0x000000000012b369: add al, ch; int1; scasd eax, dword ptr [rdi]; out dx, eax; jmp qword ptr [rsi + 0xf]; 
0x0000000000132da1: add al, ch; leave; and al, dh; jmp qword ptr [rsi + 0xf]; 
0x000000000014c1cc: add al, ch; sahf; mov esi, gs; jmp qword ptr [rsi + 0x66]; 
0x0000000000089ecc: add al, ch; sahf; scasd eax, dword ptr [rdi]; cli; jmp qword ptr [rsi + 0xf]; 
0x000000000008375f: add al, ch; sti; sub edi, edx; jmp qword ptr [rsi + 0xf]; 
0x0000000000069047: add ax, word ptr [rax]; add byte ptr [rax - 0x90043], al; jmp qword ptr [rax]; 
0x00000000000be81d: add bh, al; add al, 0; add byte ptr [rax], al; add cl, ch; xor r15d, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000006c29f: add bh, al; and al, 0x28; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000005ddff: add bh, al; and al, 0x30; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000006b21f: add bh, al; and al, 0x30; and byte ptr [rax], al; add byte ptr [rax], al; jmp rax; 
0x000000000006c2ef: add bh, al; and al, 0x40; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000005de3f: add bh, al; and al, 0x50; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000005dd9f: add bh, al; and al, 8; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000005ddaf: add bh, al; and al, 8; add dword ptr [rax], eax; add byte ptr [rax], al; mov r10d, 1; jmp rax; 
0x000000000005d45c: add bh, al; and al, 8; add dword ptr [rax], eax; add byte ptr [rax], al; xor r10d, r10d; jmp rax; 
0x000000000008f143: add bh, bh; jmp qword ptr [rsi + 0x2e]; 
0x000000000016c66f: add bh, ch; jmp qword ptr [rsi + 0x66]; 
0x0000000000147c22: add bl, ch; mov bl, 0xe8; xchg esi, eax; add al, 0xfd; jmp qword ptr [rsi + 0xf]; 
0x0000000000077e4c: add bl, ch; mov cs, word ptr [rax - 0x77]; vpavgw xmm5, xmm2, xmm1; cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000146d8f: add bl, ch; mov dh, 0xe8; sub dword ptr [rbx], edx; std; jmp qword ptr [rsi + 0xf]; 
0x000000000014bd69: add bl, ch; mov eax, 0xfcc34fe8; jmp qword ptr [rsi + 0x66]; 
0x0000000000142679: add bl, ch; mov eax, 0xfd5a3fe8; jmp qword ptr [rsi + 0x66]; 
0x000000000014162a: add bl, ch; mov eax, 0xfd6a8ee8; jmp qword ptr [rsi + 0x66]; 
0x000000000013b222: add bl, ch; mov ebx, 0xfdce96e8; jmp qword ptr [rsi + 0xf]; 
0x000000000017aa1b: add bl, ch; mov ecx, 0xfb4e6de8; jmp qword ptr [rsi + 0x2e]; 
0x000000000013dd89: add bl, ch; mov edi, 0xfda32fe8; jmp qword ptr [rsi + 0x66]; 
0x000000000013d4ff: add bl, ch; mov esi, 0xfdabb9e8; jmp qword ptr [rsi + 0xf]; 
0x000000000013d59a: add bl, ch; shr eax, 0x1e; stosd dword ptr [rdi], eax; std; jmp qword ptr [rsi + 0x66]; 
0x0000000000048b4e: add byte ptr [rax + 0x31d18948], dl; shr cl, cl; fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000007531d: add byte ptr [rax + 0x63], cl; adc al, 0x91; add rdx, rcx; jmp rdx; 
0x0000000000057fd5: add byte ptr [rax + 0x63], cl; add al, 0x81; add rax, rcx; jmp rax; 
0x00000000000850ca: add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x000000000006aeb5: add byte ptr [rax + 0x63], cl; add al, 0x86; add rax, rdi; jmp rax; 
0x00000000000db6eb: add byte ptr [rax + 0x63], cl; add al, 0x86; add rax, rsi; jmp rax; 
0x00000000000df257: add byte ptr [rax + 0x63], cl; add al, 0x87; add rax, rdi; jmp rax; 
0x000000000005a875: add byte ptr [rax + 0x63], cl; add al, 0x87; add rax, rsi; jmp rax; 
0x000000000005d0d5: add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rcx; jmp rax; 
0x000000000005d596: add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rdi; jmp rax; 
0x000000000005d425: add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rsi; jmp rax; 
0x0000000000035992: add byte ptr [rax + 0x63], cl; add al, 0x91; add rax, rcx; jmp rax; 
0x000000000006d5b0: add byte ptr [rax + 0x63], cl; add al, 0x99; add rax, rcx; jmp rax; 
0x00000000000d6354: add byte ptr [rax + 0x63], cl; add al, 0x9a; add rax, rdx; jmp rax; 
0x000000000006dd16: add byte ptr [rax + 0x63], cl; add al, 0x9e; add rax, rsi; jmp rax; 
0x00000000000d9465: add byte ptr [rax + 0x63], cl; add al, 0xaa; add rax, rdx; jmp rax; 
0x00000000000b0a55: add byte ptr [rax + 0x63], cl; add al, 0xba; add rax, rdx; jmp rax; 
0x000000000005a2c6: add byte ptr [rax + 0x63], cl; or al, 0x8a; add rcx, rdx; jmp rcx; 
0x000000000006d1f3: add byte ptr [rax + 0x63], cl; or al, 0x8e; add rcx, rsi; jmp rcx; 
0x0000000000033160: add byte ptr [rax + 0x63], cl; or al, 0xbe; add rcx, rsi; jmp rcx; 
0x000000000008d13e: add byte ptr [rax + 0x7701fe83], dl; or ebp, ecx; idiv dil; jmp qword ptr [rsi + 0xf]; 
0x00000000000535b4: add byte ptr [rax - 0x14343], al; jmp qword ptr [rsi + 0xf]; 
0x000000000014e95e: add byte ptr [rax - 0x1c2417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e94e: add byte ptr [rax - 0x1c9417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e93e: add byte ptr [rax - 0x1cd417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e96e: add byte ptr [rax - 0x1d7417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e92e: add byte ptr [rax - 0x1e7417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000009ea2e: add byte ptr [rax - 0x2a48417], dl; jmp qword ptr [rsi + 0x2e]; 
0x00000000000b2960: add byte ptr [rax - 0x36517], al; jmp qword ptr [rsi + 0xf]; 
0x00000000000b2957: add byte ptr [rax - 0x48], cl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x36517], al; jmp qword ptr [rsi + 0xf]; 
0x0000000000145dbe: add byte ptr [rax - 0x5f417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000005d355: add byte ptr [rax - 0x68], cl; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d51f: add byte ptr [rax - 0x68], cl; movzx edx, byte ptr [rcx + rax]; lea rax, [rip + 0x1319f3]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d5ea: add byte ptr [rax - 0x68], cl; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x131928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x0000000000091a4e: add byte ptr [rax - 0x700417], dl; jmp qword ptr [rsi + 0x2e]; 
0x00000000000277a3: add byte ptr [rax - 0x73], cl; adc eax, 0x153855; mov eax, eax; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000142b1f: add byte ptr [rax - 0x73], cl; adc eax, 0x52d5d; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000eca00: add byte ptr [rax - 0x73], cl; adc eax, 0xa65b0; mov edi, edi; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000e00fb: add byte ptr [rax - 0x73], cl; adc eax, 0xb2715; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000db0db: add byte ptr [rax - 0x73], cl; adc eax, 0xb74b9; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d945e: add byte ptr [rax - 0x73], cl; adc eax, 0xb8fc6; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d647d: add byte ptr [rax - 0x73], cl; adc eax, 0xbbd6f; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d634d: add byte ptr [rax - 0x73], cl; adc eax, 0xbbdc3; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d5f11: add byte ptr [rax - 0x73], cl; adc eax, 0xbc1ab; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000c7546: add byte ptr [rax - 0x73], cl; adc eax, 0xca106; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000b0a4e: add byte ptr [rax - 0x73], cl; adc eax, 0xe0a8a; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x000000000006c26f: add byte ptr [rax - 0x73], cl; add eax, 0xffffe5b6; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000005deaf: add byte ptr [rax - 0x73], cl; add eax, 0xffffe706; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000003972e: add byte ptr [rax - 0x73], cl; cmp eax, 0x150faa; mov r8d, r8d; movsxd rsi, dword ptr [rdi + r8*4]; add rsi, rdi; jmp rsi; 
0x0000000000049be4: add byte ptr [rax - 0x73], cl; imul eax, dword ptr [rdx], 0xfffd50e9; jmp qword ptr [rsi - 0x70]; 
0x0000000000075316: add byte ptr [rax - 0x73], cl; or eax, 0x11b442; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000006d5a9: add byte ptr [rax - 0x73], cl; or eax, 0x122677; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x000000000005f301: add byte ptr [rax - 0x73], cl; or eax, 0x1300ff; movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x0000000000057fce: add byte ptr [rax - 0x73], cl; or eax, 0x1368aa; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000e826e: add byte ptr [rax - 0x73], cl; or eax, 0xaa81e; mov r10d, r13d; movsxd rax, dword ptr [rcx + r10*4]; add rax, rcx; jmp rax; 
0x000000000006dd0f: add byte ptr [rax - 0x73], cl; xor eax, 0x121fc1; movsxd rax, dword ptr [rsi + rbx*4]; add rax, rsi; jmp rax; 
0x000000000006d1ec: add byte ptr [rax - 0x73], cl; xor eax, 0x122828; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000005f8f1: add byte ptr [rax - 0x73], cl; xor eax, 0x12fbbf; movzx edx, dl; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005eec2: add byte ptr [rax - 0x73], cl; xor eax, 0x130332; movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000012c91a: add byte ptr [rax - 0x73], cl; xor eax, 0x67502; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000012c8c1: add byte ptr [rax - 0x73], cl; xor eax, 0x67547; add rax, rsi; jmp rax; 
0x0000000000084c4f: add byte ptr [rax - 0x75], cl; adc eax, 0x14d241; mov rax, qword ptr [rdx + 0x368]; test rax, rax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x0000000000084bff: add byte ptr [rax - 0x75], cl; add eax, 0x14d291; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x0000000000084bcf: add byte ptr [rax - 0x75], cl; add eax, 0x14d2c1; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x000000000014f6cf: add byte ptr [rax - 0x75], cl; add eax, 0x827c1; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x000000000014f73a: add byte ptr [rax - 0x75], cl; cmp al, 0x24; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000014f599: add byte ptr [rax - 0x75], cl; pop r8; add rsp, 0x40; pop rbx; jmp rax; 
0x000000000014f706: add byte ptr [rax - 0x77], cl; dec byte ptr [rax - 0x75]; cmp al, 0x24; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000007c684: add byte ptr [rax - 0x77], cl; fistp word ptr [rbx + 0x48]; mov eax, dword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000123eab: add byte ptr [rax - 0x77], cl; fistp word ptr [rbx - 0x17]; stosd dword ptr [rdi], eax; and al, 0xf0; jmp qword ptr [rsi + 0x66]; 
0x000000000010e3bc: add byte ptr [rax - 0x77], cl; fucompi st(0); cmp ecx, dword ptr [rcx - 9]; inc dword ptr [rbx - 0x7af00008]; cmp ch, 0xff; jmp qword ptr [rsi - 0x70]; 
0x00000000000fbaef: add byte ptr [rax - 0x77], cl; pop rbp; add al, ch; test al, 0xf2; jmp qword ptr [rsi - 0x7d]; 
0x00000000000b57ff: add byte ptr [rax - 0x77], cl; sal dword ptr [rcx], 1; shr cl, cl; fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x00000000000ba7af: add byte ptr [rax - 0x77], cl; sal dword ptr [rcx], 1; shr cl, cl; push rsi; fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x00000000000f7790: add byte ptr [rax - 0x77], cl; test byte ptr [rax + rbx*4], ah; add dword ptr [rax], eax; add byte ptr [rcx], dh; sal bh, 0xc2; jmp rsi; 
0x0000000000100a6c: add byte ptr [rax - 0x77], cl; vpmulhw xmm4, xmm2, xmmword ptr [rbx - 0xe]; jmp qword ptr [rsi + 0x2e]; 
0x00000000001033af: add byte ptr [rax - 0x7b], cl; push qword ptr [rbx + rcx - 0x17]; push rsi; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x00000000000762f3: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx + 0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x00000000000763b3: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + rcx + 0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x0000000000098c84: add byte ptr [rax - 0x7d], cl; jmp qword ptr [rax]; 
0x000000000006904a: add byte ptr [rax - 0x90043], al; jmp qword ptr [rax]; 
0x000000000014e98e: add byte ptr [rax - 0xc8417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e97e: add byte ptr [rax - 0xd5417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000006c29b: add byte ptr [rax], 0; add byte ptr [rax], al; mov dword ptr [rsp + 0x28], 1; jmp rax; 
0x000000000006c1eb: add byte ptr [rax], 0; add byte ptr [rax], al; mov r9d, 1; jmp rax; 
0x000000000013f820: add byte ptr [rax], al; add al, byte ptr [rax]; add byte ptr [rax], al; add rdi, 0xc8; jmp rcx; 
0x000000000014e917: add byte ptr [rax], al; add al, ch; add dword ptr [rdx - 8], ebx; call qword ptr [rax - 0x1de417]; jmp qword ptr [rsi + 0x2e]; 
0x000000000009412b: add byte ptr [rax], al; add al, ch; insd dword ptr [rdi], dx; xor bh, bh; jmp qword ptr [rsi + 0xf]; 
0x000000000010ef6a: add byte ptr [rax], al; add al, ch; out dx, al; cld; jmp qword ptr [rsi + 0xf]; 
0x00000000000fb419: add byte ptr [rax], al; add al, ch; out dx, eax; std; jmp qword ptr [rsi + 0x45]; 
0x000000000012b367: add byte ptr [rax], al; add al, ch; int1; scasd eax, dword ptr [rdi]; out dx, eax; jmp qword ptr [rsi + 0xf]; 
0x000000000006c29d: add byte ptr [rax], al; add bh, al; and al, 0x28; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000005ddfd: add byte ptr [rax], al; add bh, al; and al, 0x30; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000006b21d: add byte ptr [rax], al; add bh, al; and al, 0x30; and byte ptr [rax], al; add byte ptr [rax], al; jmp rax; 
0x000000000005de3d: add byte ptr [rax], al; add bh, al; and al, 0x50; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x0000000000147c20: add byte ptr [rax], al; add bl, ch; mov bl, 0xe8; xchg esi, eax; add al, 0xfd; jmp qword ptr [rsi + 0xf]; 
0x0000000000146d8d: add byte ptr [rax], al; add bl, ch; mov dh, 0xe8; sub dword ptr [rbx], edx; std; jmp qword ptr [rsi + 0xf]; 
0x0000000000142677: add byte ptr [rax], al; add bl, ch; mov eax, 0xfd5a3fe8; jmp qword ptr [rsi + 0x66]; 
0x000000000013b220: add byte ptr [rax], al; add bl, ch; mov ebx, 0xfdce96e8; jmp qword ptr [rsi + 0xf]; 
0x000000000013dd87: add byte ptr [rax], al; add bl, ch; mov edi, 0xfda32fe8; jmp qword ptr [rsi + 0x66]; 
0x000000000013d4fd: add byte ptr [rax], al; add bl, ch; mov esi, 0xfdabb9e8; jmp qword ptr [rsi + 0xf]; 
0x000000000013d598: add byte ptr [rax], al; add bl, ch; shr eax, 0x1e; stosd dword ptr [rdi], eax; std; jmp qword ptr [rsi + 0x66]; 
0x0000000000048b4c: add byte ptr [rax], al; add byte ptr [rax + 0x31d18948], dl; shr cl, cl; fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000008d13c: add byte ptr [rax], al; add byte ptr [rax + 0x7701fe83], dl; or ebp, ecx; idiv dil; jmp qword ptr [rsi + 0xf]; 
0x000000000014e95c: add byte ptr [rax], al; add byte ptr [rax - 0x1c2417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e94c: add byte ptr [rax], al; add byte ptr [rax - 0x1c9417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e93c: add byte ptr [rax], al; add byte ptr [rax - 0x1cd417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e96c: add byte ptr [rax], al; add byte ptr [rax - 0x1d7417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e92c: add byte ptr [rax], al; add byte ptr [rax - 0x1e7417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000009ea2c: add byte ptr [rax], al; add byte ptr [rax - 0x2a48417], dl; jmp qword ptr [rsi + 0x2e]; 
0x00000000000b295e: add byte ptr [rax], al; add byte ptr [rax - 0x36517], al; jmp qword ptr [rsi + 0xf]; 
0x0000000000145dbc: add byte ptr [rax], al; add byte ptr [rax - 0x5f417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000005d353: add byte ptr [rax], al; add byte ptr [rax - 0x68], cl; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x0000000000091a4c: add byte ptr [rax], al; add byte ptr [rax - 0x700417], dl; jmp qword ptr [rsi + 0x2e]; 
0x00000000000b0a4c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; adc eax, 0xe0a8a; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x000000000006c26d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0xffffe5b6; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x0000000000049be2: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; imul eax, dword ptr [rdx], 0xfffd50e9; jmp qword ptr [rsi - 0x70]; 
0x0000000000075314: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; or eax, 0x11b442; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000057fcc: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; or eax, 0x1368aa; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000007c682: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; fistp word ptr [rbx + 0x48]; mov eax, dword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x00000000000fbaed: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; pop rbp; add al, ch; test al, 0xf2; jmp qword ptr [rsi - 0x7d]; 
0x00000000000b57fd: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; sal dword ptr [rcx], 1; shr cl, cl; fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x00000000001033ad: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbx + rcx - 0x17]; push rsi; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x00000000000762f1: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx + 0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x00000000000763b1: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + rcx + 0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x0000000000098c82: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; jmp qword ptr [rax]; 
0x000000000014e98c: add byte ptr [rax], al; add byte ptr [rax - 0xc8417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e97c: add byte ptr [rax], al; add byte ptr [rax - 0xd5417], dl; jmp qword ptr [rsi + 0x2e]; 
0x0000000000048b4a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x31d18948], dl; shr cl, cl; fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000008d13a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x7701fe83], dl; or ebp, ecx; idiv dil; jmp qword ptr [rsi + 0xf]; 
0x000000000014e95a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x1c2417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e94a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x1c9417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e93a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x1cd417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e96a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x1d7417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e92a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x1e7417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000009ea2a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x2a48417], dl; jmp qword ptr [rsi + 0x2e]; 
0x00000000000b295c: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x36517], al; jmp qword ptr [rsi + 0xf]; 
0x0000000000145dba: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x5f417], dl; jmp qword ptr [rsi + 0x2e]; 
0x0000000000091a4a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x700417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000006c26b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0xffffe5b6; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000014e98a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0xc8417], dl; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e97a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0xd5417], dl; jmp qword ptr [rsi + 0x2e]; 
0x00000000000b295a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x36517], al; jmp qword ptr [rsi + 0xf]; 
0x000000000006c1db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 1], bh; xor ebp, ebp; jmp rax; 
0x000000000007e0bb: add byte ptr [rax], al; add byte ptr [rax], al; add cl, ch; fstp xword ptr [rax - 1]; jmp qword ptr [rsi + 0x2e]; 
0x000000000005c6ec: add byte ptr [rax], al; add byte ptr [rax], al; add rax, rcx; mov byte ptr [rsp + 0x34], 0x20; jmp rax; 
0x000000000006a91c: add byte ptr [rax], al; add byte ptr [rax], al; add rax, rsi; mov dword ptr [rsp + 0x30], 0x20; jmp rax; 
0x000000000006c26c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip - 0x1a4a]; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000006c29c: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rsp + 0x28], 1; jmp rax; 
0x000000000005ddfc: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rsp + 0x30], 1; jmp rax; 
0x000000000005de3c: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rsp + 0x50], 1; jmp rax; 
0x000000000006c1dc: add byte ptr [rax], al; add byte ptr [rax], al; mov ecx, 1; xor ebp, ebp; jmp rax; 
0x000000000006c1ec: add byte ptr [rax], al; add byte ptr [rax], al; mov r9d, 1; jmp rax; 
0x000000000006c1fc: add byte ptr [rax], al; add byte ptr [rax], al; mov r9d, 1; mov r10d, 1; jmp rax; 
0x0000000000147a5c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x48]; 
0x0000000000111f01: add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; jmp qword ptr [rsi + 0xf]; 
0x0000000000102937: add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; jmp rax; 
0x00000000000854b9: add byte ptr [rax], al; add byte ptr [rbp + 0x4d], dh; add rsp, 0x30; pop rbx; jmp rax; 
0x00000000000851e0: add byte ptr [rax], al; add byte ptr [rbp + 0x51], dh; mov rax, qword ptr [rax + 0x38]; add rsp, 0x38; jmp rax; 
0x000000000008537a: add byte ptr [rax], al; add byte ptr [rbp + 0x59], dh; add rsp, 0x30; pop rbx; jmp rax; 
0x000000000008556b: add byte ptr [rax], al; add byte ptr [rbp + 0x74], dh; add rsp, 0x38; pop rbx; pop rbp; jmp rax; 
0x000000000008564b: add byte ptr [rax], al; add byte ptr [rbp + 0x79], dh; add rsp, 0x38; pop rbx; pop rbp; jmp rax; 
0x00000000000bf9d2: add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x65], cl; or cl, ch; movsd dword ptr [rdi], dword ptr [rsi]; idiv edi; jmp qword ptr [rsi - 0x70]; 
0x000000000004f0b3: add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x70], cl; jmp qword ptr [rsi + 0xf]; 
0x00000000000275fe: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; jmp rax; 
0x000000000008510e: add byte ptr [rax], al; add byte ptr [rbx - 0x17], bl; mov dword ptr [rcx], edx; cli; jmp qword ptr [rsi + 0xf]; 
0x00000000000f01c8: add byte ptr [rax], al; add byte ptr [rbx - 0x6f773], cl; jmp qword ptr [rsi + 0xf]; 
0x00000000000850be: add byte ptr [rax], al; add byte ptr [rbx - 0x72b7f7bd], cl; adc eax, 0x10b851; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000005b68b: add byte ptr [rax], al; add byte ptr [rbx - 0x7a39fe20], al; pop rax; idiv edi; jmp qword ptr [rax]; 
0x000000000003f5e6: add byte ptr [rax], al; add byte ptr [rcx + 0x146348c2], cl; xchg edi, eax; add rdx, rdi; cmp esi, 0x2f; jmp rdx; 
0x00000000000275ac: add byte ptr [rax], al; add byte ptr [rcx + 0x5c], al; pop r13; pop r14; jmp rax; 
0x000000000006c1dd: add byte ptr [rax], al; add byte ptr [rcx + 1], bh; xor ebp, ebp; jmp rax; 
0x000000000005ddb5: add byte ptr [rax], al; add byte ptr [rcx - 0x46], al; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000006c1ed: add byte ptr [rax], al; add byte ptr [rcx - 0x47], al; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000006c1fd: add byte ptr [rax], al; add byte ptr [rcx - 0x47], al; add dword ptr [rax], eax; add byte ptr [rax], al; mov r10d, 1; jmp rax; 
0x000000000010b633: add byte ptr [rax], al; add byte ptr [rcx - 0xf7a3821], cl; idiv edi; jmp qword ptr [rdi + 0x6d]; 
0x000000000006c1e2: add byte ptr [rax], al; add byte ptr [rcx], dh; in eax, dx; jmp rax; 
0x00000000000daf9e: add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0x28; mov bl, 0xf4; jmp qword ptr [rsi + 0xf]; 
0x00000000000d932e: add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0xd8; int 0xf4; jmp qword ptr [rsi + 0xf]; 
0x0000000000050e9b: add byte ptr [rax], al; add byte ptr [rcx], dh; test byte ptr [rcx + rbp - 0x28], 0xe9; pop rax; out 0xff, eax; jmp qword ptr [rsi + 0xf]; 
0x00000000000ec9aa: add byte ptr [rax], al; add byte ptr [rdi + 0x15], dh; lea rdx, [rip + 0xa63aa]; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000f29ce: add byte ptr [rax], al; add byte ptr [rdi + rcx + 0x44], al; call 0xdabc2; jmp qword ptr [rsi + 0xf]; 
0x000000000014f72f: add byte ptr [rax], al; add byte ptr [rsp + rbx + 0x48], dh; mov eax, dword ptr [rip + 0x8275d]; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000016e68b: add byte ptr [rax], al; add cl, al; loope 0x16e697; add rcx, r9; jmp rcx; 
0x0000000000137d02: add byte ptr [rax], al; add cl, ch; cmpsb byte ptr [rsi], byte ptr [rdi]; fdivr st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000007e0bd: add byte ptr [rax], al; add cl, ch; fstp xword ptr [rax - 1]; jmp qword ptr [rsi + 0x2e]; 
0x0000000000047456: add byte ptr [rax], al; add cl, ch; idiv bh; jmp qword ptr [rsi - 0x70]; 
0x00000000000278a2: add byte ptr [rax], al; add cl, ch; imul edi, edi, -1; jmp qword ptr [rsi + 0xf]; 
0x00000000000c6dca: add byte ptr [rax], al; add cl, ch; imul edi, esp, -1; jmp qword ptr [rsi + 0xf]; 
0x000000000013a082: add byte ptr [rax], al; add cl, ch; mov ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000000bdf22: add byte ptr [rax], al; add cl, ch; mov dh, 0xef; cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000138389: add byte ptr [rax], al; add cl, ch; outsd dx, dword ptr [rsi]; sar edi, 1; jmp qword ptr [rsi + 0x66]; 
0x0000000000137ce9: add byte ptr [rax], al; add cl, ch; psubusb mm7, mm7; jmp qword ptr [rsi + 0x66]; 
0x000000000016004f: add byte ptr [rax], al; add cl, ch; sar esp, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000138bb2: add byte ptr [rax], al; add cl, ch; test cl, -1; jmp qword ptr [rsi + 0xf]; 
0x000000000005d99e: add byte ptr [rax], al; add cl, ch; xor ah, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x00000000000be822: add byte ptr [rax], al; add cl, ch; xor r15d, edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000135d29: add byte ptr [rax], al; add cl, ch; iretd; idiv edi; jmp qword ptr [rsi + 0x66]; 
0x000000000005c6ee: add byte ptr [rax], al; add rax, rcx; mov byte ptr [rsp + 0x34], 0x20; jmp rax; 
0x000000000006a91e: add byte ptr [rax], al; add rax, rsi; mov dword ptr [rsp + 0x30], 0x20; jmp rax; 
0x00000000001403f1: add byte ptr [rax], al; add rdi, 0x10; jmp rcx; 
0x0000000000142af1: add byte ptr [rax], al; add rdi, 0x58; jmp rcx; 
0x00000000001421f1: add byte ptr [rax], al; add rdi, 0x68; jmp rcx; 
0x000000000013f824: add byte ptr [rax], al; add rdi, 0xc8; jmp rcx; 
0x000000000016e6f1: add byte ptr [rax], al; add rdx, r8; jmp rdx; 
0x0000000000141512: add byte ptr [rax], al; add rsi, 0x38; jmp qword ptr [rax + 0x18]; 
0x000000000013c940: add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; jmp rcx; 
0x000000000016e6c2: add byte ptr [rax], al; and ecx, 0xf; shl ecx, 6; add rcx, r9; jmp rcx; 
0x0000000000146e3e: add byte ptr [rax], al; cmp eax, 1; jne 0x146e31; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax]; 
0x00000000000ec9ab: add byte ptr [rax], al; ja 0xec9c4; lea rdx, [rip + 0xa63aa]; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x000000000014f730: add byte ptr [rax], al; je 0x14f750; mov rax, qword ptr [rip + 0x8275d]; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x0000000000027551: add byte ptr [rax], al; jmp rax; 
0x000000000013f82b: add byte ptr [rax], al; jmp rcx; 
0x000000000014f592: add byte ptr [rax], al; jne 0x14f6c7; mov rax, qword ptr [rbx + 0x58]; add rsp, 0x40; pop rbx; jmp rax; 
0x00000000000851e1: add byte ptr [rax], al; jne 0x85236; mov rax, qword ptr [rax + 0x38]; add rsp, 0x38; jmp rax; 
0x000000000008537b: add byte ptr [rax], al; jne 0x853d8; add rsp, 0x30; pop rbx; jmp rax; 
0x00000000000854ba: add byte ptr [rax], al; jne 0x8550b; add rsp, 0x30; pop rbx; jmp rax; 
0x000000000008556c: add byte ptr [rax], al; jne 0x855e4; add rsp, 0x38; pop rbx; pop rbp; jmp rax; 
0x000000000008564c: add byte ptr [rax], al; jne 0x856c9; add rsp, 0x38; pop rbx; pop rbp; jmp rax; 
0x00000000000aed3e: add byte ptr [rax], al; lea r11, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7ee: add byte ptr [rax], al; lea r11, [rip + 0xe4a11]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a448e: add byte ptr [rax], al; lea r11, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000016e685: add byte ptr [rax], al; lea r9, [rip + 0x72]; shl ecx, 6; add rcx, r9; jmp rcx; 
0x000000000005deae: add byte ptr [rax], al; lea rax, [rip - 0x18fa]; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000006c26e: add byte ptr [rax], al; lea rax, [rip - 0x1a4a]; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x0000000000075315: add byte ptr [rax], al; lea rcx, [rip + 0x11b442]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000006d5a8: add byte ptr [rax], al; lea rcx, [rip + 0x122677]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x000000000005f300: add byte ptr [rax], al; lea rcx, [rip + 0x1300ff]; movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x0000000000057fcd: add byte ptr [rax], al; lea rcx, [rip + 0x1368aa]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000e826d: add byte ptr [rax], al; lea rcx, [rip + 0xaa81e]; mov r10d, r13d; movsxd rax, dword ptr [rcx + r10*4]; add rax, rcx; jmp rax; 
0x000000000003972d: add byte ptr [rax], al; lea rdi, [rip + 0x150faa]; mov r8d, r8d; movsxd rsi, dword ptr [rdi + r8*4]; add rsi, rdi; jmp rsi; 
0x00000000000277a2: add byte ptr [rax], al; lea rdx, [rip + 0x153855]; mov eax, eax; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000142b1e: add byte ptr [rax], al; lea rdx, [rip + 0x52d5d]; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000ec9ff: add byte ptr [rax], al; lea rdx, [rip + 0xa65b0]; mov edi, edi; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000e00fa: add byte ptr [rax], al; lea rdx, [rip + 0xb2715]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000db0da: add byte ptr [rax], al; lea rdx, [rip + 0xb74b9]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d945d: add byte ptr [rax], al; lea rdx, [rip + 0xb8fc6]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d647c: add byte ptr [rax], al; lea rdx, [rip + 0xbbd6f]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d634c: add byte ptr [rax], al; lea rdx, [rip + 0xbbdc3]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d5f10: add byte ptr [rax], al; lea rdx, [rip + 0xbc1ab]; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000c7545: add byte ptr [rax], al; lea rdx, [rip + 0xca106]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000b0a4d: add byte ptr [rax], al; lea rdx, [rip + 0xe0a8a]; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x000000000006dd0e: add byte ptr [rax], al; lea rsi, [rip + 0x121fc1]; movsxd rax, dword ptr [rsi + rbx*4]; add rax, rsi; jmp rax; 
0x000000000006d1eb: add byte ptr [rax], al; lea rsi, [rip + 0x122828]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000005f8f0: add byte ptr [rax], al; lea rsi, [rip + 0x12fbbf]; movzx edx, dl; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005eec1: add byte ptr [rax], al; lea rsi, [rip + 0x130332]; movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000012c919: add byte ptr [rax], al; lea rsi, [rip + 0x67502]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006c29e: add byte ptr [rax], al; mov dword ptr [rsp + 0x28], 1; jmp rax; 
0x000000000006b21e: add byte ptr [rax], al; mov dword ptr [rsp + 0x30], 0x20; jmp rax; 
0x000000000005ddfe: add byte ptr [rax], al; mov dword ptr [rsp + 0x30], 1; jmp rax; 
0x000000000006c2ee: add byte ptr [rax], al; mov dword ptr [rsp + 0x40], 1; jmp rax; 
0x000000000005de3e: add byte ptr [rax], al; mov dword ptr [rsp + 0x50], 1; jmp rax; 
0x000000000005dd9e: add byte ptr [rax], al; mov dword ptr [rsp + 8], 1; jmp rax; 
0x000000000005ddae: add byte ptr [rax], al; mov dword ptr [rsp + 8], 1; mov r10d, 1; jmp rax; 
0x000000000005d45b: add byte ptr [rax], al; mov dword ptr [rsp + 8], 1; xor r10d, r10d; jmp rax; 
0x00000000000850bf: add byte ptr [rax], al; mov eax, dword ptr [rbx + 8]; lea rdx, [rip + 0x10b851]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000006c25e: add byte ptr [rax], al; mov ebp, 1; jmp rax; 
0x000000000006c1de: add byte ptr [rax], al; mov ecx, 1; xor ebp, ebp; jmp rax; 
0x000000000003f5e7: add byte ptr [rax], al; mov edx, eax; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; cmp esi, 0x2f; jmp rdx; 
0x000000000005ddb6: add byte ptr [rax], al; mov r10d, 1; jmp rax; 
0x000000000005dd86: add byte ptr [rax], al; mov r13d, 1; jmp rax; 
0x000000000005de2e: add byte ptr [rax], al; mov r15d, 1; jmp rax; 
0x000000000006c2d6: add byte ptr [rax], al; mov r8d, 1; jmp rax; 
0x000000000006c1ee: add byte ptr [rax], al; mov r9d, 1; jmp rax; 
0x000000000006c1fe: add byte ptr [rax], al; mov r9d, 1; mov r10d, 1; jmp rax; 
0x000000000006b7f6: add byte ptr [rax], al; mov r9d, 1; xor r10d, r10d; jmp rax; 
0x000000000007c68e: add byte ptr [rax], al; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000014f598: add byte ptr [rax], al; mov rax, qword ptr [rbx + 0x58]; add rsp, 0x40; pop rbx; jmp rax; 
0x0000000000147a5e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x48]; 
0x0000000000146e4e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 8]; 
0x0000000000084bfe: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x14d291]; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x0000000000084bce: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x14d2c1]; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x000000000007c683: add byte ptr [rax], al; mov rdi, rbx; pop rbx; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000084c4e: add byte ptr [rax], al; mov rdx, qword ptr [rip + 0x14d241]; mov rax, qword ptr [rdx + 0x368]; test rax, rax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x000000000005a2c5: add byte ptr [rax], al; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x000000000003315f: add byte ptr [rax], al; movsxd rcx, dword ptr [rsi + rdi*4]; add rcx, rsi; jmp rcx; 
0x000000000006aea9: add byte ptr [rax], al; movzx eax, byte ptr [rsi + rax]; lea rsi, [rip + 0x124a8a]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000417a2: add byte ptr [rax], al; movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000aed38: add byte ptr [rax], al; nop word ptr [rax + rax]; lea r11, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4488: add byte ptr [rax], al; nop word ptr [rax + rax]; lea r11, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000275ad: add byte ptr [rax], al; pop r12; pop r13; pop r14; jmp rax; 
0x000000000013c98f: add byte ptr [rax], al; pop rbp; jmp rcx; 
0x0000000000102938: add byte ptr [rax], al; pop rbp; pop r12; jmp rax; 
0x00000000000275ff: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000000016e68c: add byte ptr [rax], al; shl ecx, 6; add rcx, r9; jmp rcx; 
0x000000000014f6dc: add byte ptr [rax], al; test rax, rax; je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x00000000000762f2: add byte ptr [rax], al; test rax, rax; je 0x76302; mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x00000000000763b2: add byte ptr [rax], al; test rax, rax; je 0x763c8; mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x0000000000084bdc: add byte ptr [rax], al; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x0000000000084c0c: add byte ptr [rax], al; test rax, rax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x0000000000084c5c: add byte ptr [rax], al; test rax, rax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x000000000006c1e3: add byte ptr [rax], al; xor ebp, ebp; jmp rax; 
0x000000000005d463: add byte ptr [rax], al; xor r10d, r10d; jmp rax; 
0x000000000005d354: add byte ptr [rax], al; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x0000000000146e3d: add byte ptr [rax], r8b; cmp eax, 1; jne 0x146e31; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax]; 
0x00000000000aed3d: add byte ptr [rax], r8b; lea r11, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a448d: add byte ptr [rax], r8b; lea r11, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000005dead: add byte ptr [rax], r8b; lea rax, [rip - 0x18fa]; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000006c2ed: add byte ptr [rax], r8b; mov dword ptr [rsp + 0x40], 1; jmp rax; 
0x000000000005dd9d: add byte ptr [rax], r8b; mov dword ptr [rsp + 8], 1; jmp rax; 
0x000000000005ddad: add byte ptr [rax], r8b; mov dword ptr [rsp + 8], 1; mov r10d, 1; jmp rax; 
0x000000000006c25d: add byte ptr [rax], r8b; mov ebp, 1; jmp rax; 
0x000000000005dd85: add byte ptr [rax], r8b; mov r13d, 1; jmp rax; 
0x000000000005de2d: add byte ptr [rax], r8b; mov r15d, 1; jmp rax; 
0x000000000006c2d5: add byte ptr [rax], r8b; mov r8d, 1; jmp rax; 
0x000000000006b7f5: add byte ptr [rax], r8b; mov r9d, 1; xor r10d, r10d; jmp rax; 
0x0000000000146e4d: add byte ptr [rax], r8b; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 8]; 
0x0000000000084bcd: add byte ptr [rax], r8b; mov rax, qword ptr [rip + 0x14d2c1]; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x0000000000111f03: add byte ptr [rbp + 0x31], al; jmp qword ptr [rsi + 0xf]; 
0x0000000000146eb7: add byte ptr [rbp + 0x40], dh; mov rax, qword ptr [rdi + 8]; mov rax, qword ptr [rax + 8]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000102939: add byte ptr [rbp + 0x41], bl; pop rsp; jmp rax; 
0x000000000008590c: add byte ptr [rbp + 0x480f74f6], al; mov edx, dword ptr [rdi + 8]; mov rax, qword ptr [rdi]; mov rdi, rdx; jmp rax; 
0x00000000000854bb: add byte ptr [rbp + 0x4d], dh; add rsp, 0x30; pop rbx; jmp rax; 
0x00000000000851e2: add byte ptr [rbp + 0x51], dh; mov rax, qword ptr [rax + 0x38]; add rsp, 0x38; jmp rax; 
0x000000000008537c: add byte ptr [rbp + 0x59], dh; add rsp, 0x30; pop rbx; jmp rax; 
0x000000000008556d: add byte ptr [rbp + 0x74], dh; add rsp, 0x38; pop rbx; pop rbp; jmp rax; 
0x000000000008564d: add byte ptr [rbp + 0x79], dh; add rsp, 0x38; pop rbx; pop rbp; jmp rax; 
0x00000000000e002b: add byte ptr [rbp + 0xf], al; mov dh, 0xe4; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x000000000006c25f: add byte ptr [rbp + 1], bh; jmp rax; 
0x00000000000ac7ef: add byte ptr [rbp + rcx*4 + 0x1d], cl; adc dword ptr [rdx + 0xe], ecx; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a448f: add byte ptr [rbp + rcx*4 + 0x1d], cl; pop rcx; retf 0xe; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000bf9d4: add byte ptr [rbp + rcx*4 + 0x65], cl; or cl, ch; movsd dword ptr [rdi], dword ptr [rsi]; idiv edi; jmp qword ptr [rsi - 0x70]; 
0x000000000004f0b5: add byte ptr [rbp + rcx*4 + 0x70], cl; jmp qword ptr [rsi + 0xf]; 
0x000000000008c7d3: add byte ptr [rbp + rcx*4 + 0x7f], cl; adc byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x000000000016e686: add byte ptr [rbp + rcx*4 + 0xd], cl; jb 0x16e68c; add byte ptr [rax], al; shl ecx, 6; add rcx, r9; jmp rcx; 
0x0000000000040f68: add byte ptr [rbp - 0x16f48a40], al; loope 0x40f70; jmp qword ptr [rsi + 0xf]; 
0x0000000000134ce4: add byte ptr [rbp - 0x17], dh; movzx eax, byte ptr [rdx]; movsxd rax, dword ptr [r14 + rax*4]; add rax, r14; jmp rax; 
0x000000000008d18a: add byte ptr [rbx + 0x487743f8], al; lea rdx, [rip + 0x103a85]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000027600: add byte ptr [rbx + 0x5d], bl; pop r12; jmp rax; 
0x00000000000a44c9: add byte ptr [rbx + 0x63], cl; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000040f66: add byte ptr [rbx + 0x75c08500], cl; or ebp, ecx; loope 0x40f70; jmp qword ptr [rsi + 0xf]; 
0x00000000000d6f9f: add byte ptr [rbx + rcx*4 - 0x4b], cl; sar al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000146e3f: add byte ptr [rbx - 0x138afe08], al; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax]; 
0x0000000000085110: add byte ptr [rbx - 0x17], bl; mov dword ptr [rcx], edx; cli; jmp qword ptr [rsi + 0xf]; 
0x000000000017a97b: add byte ptr [rbx - 0x17], bl; pop rsi; mov bh, 0xf0; jmp qword ptr [rsi + 0xf]; 
0x00000000000d8653: add byte ptr [rbx - 0x4e74b], cl; jmp qword ptr [rsi - 0x77]; 
0x00000000001140bd: add byte ptr [rbx - 0x5a4417c8], cl; bnd jmp qword ptr [rsi + 0x66]; 
0x00000000000f01ca: add byte ptr [rbx - 0x6f773], cl; jmp qword ptr [rsi + 0xf]; 
0x00000000000850c0: add byte ptr [rbx - 0x72b7f7bd], cl; adc eax, 0x10b851; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000005acb7: add byte ptr [rbx - 0x7a39fe20], al; pop rax; idiv edi; jmp qword ptr [rax]; 
0x0000000000140411: add byte ptr [rbx - 0x7b4817c5], cl; sti; jmp qword ptr [rsi - 0x7d]; 
0x000000000005f306: add byte ptr [rbx], dl; add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000013c25b: add byte ptr [rcx + 0x146348c2], cl; xchg ecx, eax; add rdx, rcx; jmp rdx; 
0x000000000003f5e8: add byte ptr [rcx + 0x146348c2], cl; xchg edi, eax; add rdx, rdi; cmp esi, 0x2f; jmp rdx; 
0x00000000000ccb08: add byte ptr [rcx + 0x146348c2], cl; xchg esi, eax; add rdx, rsi; jmp rdx; 
0x000000000009efa2: add byte ptr [rcx + 0x146348d2], cl; xchg edi, eax; add rdx, rdi; jmp rdx; 
0x000000000013f8af: add byte ptr [rcx + 0x46348f6], cl; mov cl, 0x48; add eax, ecx; jmp rax; 
0x00000000000d5f18: add byte ptr [rcx + 0x46348f6], cl; mov dl, 0x48; add eax, edx; jmp rax; 
0x00000000000f48aa: add byte ptr [rcx + 0x4c8b4cc8], cl; and al, 0x58; mov r10d, dword ptr [rsp + 0x60]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000275ae: add byte ptr [rcx + 0x5c], al; pop r13; pop r14; jmp rax; 
0x00000000000a3ba8: add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000007f7e3: add byte ptr [rcx + 0xf], al; mov dh, 0x45; add cl, ch; sar dh, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000006c1df: add byte ptr [rcx + 1], bh; xor ebp, ebp; jmp rax; 
0x00000000000f6d7a: add byte ptr [rcx + rax - 0x18], cl; jmp rax; 
0x000000000016e6f2: add byte ptr [rcx + rax - 0x3e], cl; jmp rdx; 
0x000000000005de2f: add byte ptr [rcx - 0x41], al; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000005dd87: add byte ptr [rcx - 0x43], al; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000005ddb7: add byte ptr [rcx - 0x46], al; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000006c1ef: add byte ptr [rcx - 0x47], al; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000006c1ff: add byte ptr [rcx - 0x47], al; add dword ptr [rax], eax; add byte ptr [rax], al; mov r10d, 1; jmp rax; 
0x000000000006b7f7: add byte ptr [rcx - 0x47], al; add dword ptr [rax], eax; add byte ptr [rax], al; xor r10d, r10d; jmp rax; 
0x000000000006c2d7: add byte ptr [rcx - 0x48], al; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x00000000000f42c6: add byte ptr [rcx - 0x77], al; iretd; movsxd rax, dword ptr [rdx + r15*4]; add rax, rdx; jmp rax; 
0x000000000005adca: add byte ptr [rcx - 0x7d], al; out dx, al; add dword ptr [rax - 0x8a743], eax; jmp qword ptr [rax]; 
0x00000000000c3eb6: add byte ptr [rcx - 0x7f], al; jmp qword ptr [rax]; 
0x000000000010b635: add byte ptr [rcx - 0xf7a3821], cl; idiv edi; jmp qword ptr [rdi + 0x6d]; 
0x000000000002904b: add byte ptr [rcx], dh; div byte ptr [rcx]; jmp qword ptr [rsi + 0xf]; 
0x000000000006c1e4: add byte ptr [rcx], dh; in eax, dx; jmp rax; 
0x00000000000f7798: add byte ptr [rcx], dh; sal bh, 0xc2; jmp rsi; 
0x00000000000dafa0: add byte ptr [rcx], dh; shr al, 0x28; mov bl, 0xf4; jmp qword ptr [rsi + 0xf]; 
0x00000000000d9330: add byte ptr [rcx], dh; shr al, 0xd8; int 0xf4; jmp qword ptr [rsi + 0xf]; 
0x000000000004077c: add byte ptr [rcx], dh; shr al, cl; insb byte ptr [rdi], dx; fdiv st(7), st(0); jmp qword ptr [rsi + 0x2e]; 
0x0000000000050e9d: add byte ptr [rcx], dh; test byte ptr [rcx + rbp - 0x28], 0xe9; pop rax; out 0xff, eax; jmp qword ptr [rsi + 0xf]; 
0x00000000000ec9ac: add byte ptr [rdi + 0x15], dh; lea rdx, [rip + 0xa63aa]; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000f29d0: add byte ptr [rdi + rcx + 0x44], al; call 0xdabc2; jmp qword ptr [rsi + 0xf]; 
0x0000000000088f24: add byte ptr [rdi], cl; add eax, 0x247c8d48; adc al, ch; pop rdi; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000074c06: add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000d9aad: add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000c754d: add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000037462: add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000417a3: add byte ptr [rdi], cl; mov dh, 0xc9; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000ca78d: add byte ptr [rdi], cl; mov dh, 0xd1; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x00000000000ca7b8: add byte ptr [rdi], cl; mov dh, 0xd1; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x000000000005f308: add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005f8f8: add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x00000000000f3f3b: add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x00000000000f560a: add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x000000000014f593: add byte ptr [rdi], cl; test dword ptr [rip + 0x48000001], ebp; mov eax, dword ptr [rbx + 0x58]; add rsp, 0x40; pop rbx; jmp rax; 
0x000000000002e199: add byte ptr [rip + 0x58e90000], al; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x000000000014f731: add byte ptr [rsp + rbx + 0x48], dh; mov eax, dword ptr [rip + 0x8275d]; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000016e68d: add cl, al; loope 0x16e697; add rcx, r9; jmp rcx; 
0x00000000000687b9: add cl, byte ptr [rax - 0x73]; adc eax, 0xfffffc13; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdx; jmp rax; 
0x0000000000134ce9: add cl, byte ptr [rcx + 0x63]; add al, 0x86; add rax, r14; jmp rax; 
0x0000000000137d04: add cl, ch; cmpsb byte ptr [rsi], byte ptr [rdi]; fdivr st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000004eda1: add cl, ch; fdiv dword ptr [rdi - 3]; jmp qword ptr [rsi + 0xf]; 
0x000000000007e0bf: add cl, ch; fstp xword ptr [rax - 1]; jmp qword ptr [rsi + 0x2e]; 
0x0000000000047458: add cl, ch; idiv bh; jmp qword ptr [rsi - 0x70]; 
0x00000000000c0df2: add cl, ch; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x00000000000f73ef: add cl, ch; imul ebp, edi, -0xe; jmp qword ptr [rsi + 0x2e]; 
0x00000000000278a4: add cl, ch; imul edi, edi, -1; jmp qword ptr [rsi + 0xf]; 
0x00000000000c6dcc: add cl, ch; imul edi, esp, -1; jmp qword ptr [rsi + 0xf]; 
0x00000000000466e1: add cl, ch; js 0x466e3; std; jmp qword ptr [rsi + 0xf]; 
0x000000000013a084: add cl, ch; mov ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000000bdf24: add cl, ch; mov dh, 0xef; cli; jmp qword ptr [rsi + 0xf]; 
0x00000000000ff5d4: add cl, ch; mov gs, word ptr [rbp - 0xe]; jmp qword ptr [rsi + 0xf]; 
0x000000000013838b: add cl, ch; outsd dx, dword ptr [rsi]; sar edi, 1; jmp qword ptr [rsi + 0x66]; 
0x0000000000070acc: add cl, ch; paddd mm7, mm7; jmp qword ptr [rsi + 0xf]; 
0x000000000002e19c: add cl, ch; pop rax; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000137ceb: add cl, ch; psubusb mm7, mm7; jmp qword ptr [rsi + 0x66]; 
0x0000000000178d68: add cl, ch; retf 0xfff8; jmp qword ptr [rsi - 0x70]; 
0x000000000007f7e8: add cl, ch; sar dh, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000006a99c: add cl, ch; sar esi, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000160051: add cl, ch; sar esp, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000138bb4: add cl, ch; test cl, -1; jmp qword ptr [rsi + 0xf]; 
0x00000000000e6e11: add cl, ch; xchg ecx, eax; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x000000000005d9a0: add cl, ch; xor ah, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x00000000000be824: add cl, ch; xor r15d, edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000135d2b: add cl, ch; iretd; idiv edi; jmp qword ptr [rsi + 0x66]; 
0x000000000006c398: add cl, ch; xlatb; in eax, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000116f44: add cl, dh; jmp qword ptr [rsi + 0xf]; 
0x000000000012c91e: add dh, byte ptr [rbp + 6]; add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d655: add dword ptr [rax - 0x73], ecx; add eax, 0x131943; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d525: add dword ptr [rax - 0x73], ecx; add eax, 0x1319f3; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d41e: add dword ptr [rax - 0x73], ecx; add eax, 0x131afa; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x0000000000049af4: add dword ptr [rax - 0x73], ecx; imul eax, dword ptr [rdx], 0xfffe40e9; jmp qword ptr [rsi - 0x70]; 
0x000000000005adce: add dword ptr [rax - 0x8a743], eax; jmp qword ptr [rax]; 
0x00000000000693b3: add dword ptr [rax - 0x90043], eax; jmp qword ptr [rax]; 
0x0000000000141628: add dword ptr [rax], eax; add bl, ch; mov eax, 0xfd6a8ee8; jmp qword ptr [rsi + 0x66]; 
0x000000000014f597: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; pop r8; add rsp, 0x40; pop rbx; jmp rax; 
0x000000000005dd8a: add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000006b21c: add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rsp + 0x30], 0x20; jmp rax; 
0x000000000005ddb4: add dword ptr [rax], eax; add byte ptr [rax], al; mov r10d, 1; jmp rax; 
0x000000000006c1e1: add dword ptr [rax], eax; add byte ptr [rax], al; xor ebp, ebp; jmp rax; 
0x000000000005d461: add dword ptr [rax], eax; add byte ptr [rax], al; xor r10d, r10d; jmp rax; 
0x00000000000f7796: add dword ptr [rax], eax; add byte ptr [rcx], dh; sal bh, 0xc2; jmp rsi; 
0x0000000000146e42: add dword ptr [rbp - 0x14], esi; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax]; 
0x00000000000f6d75: add dword ptr [rcx + 0x63], ecx; test dword ptr [rax], r8d; add rax, r13; jmp rax; 
0x00000000000ef96d: add dword ptr [rcx - 0x7d], ecx; jmp qword ptr [rax + 0x48]; 
0x000000000014e91b: add dword ptr [rdx - 8], ebx; call qword ptr [rax - 0x1de417]; jmp qword ptr [rsi + 0x2e]; 
0x000000000013c259: add dword ptr [rip + 0x48c28900], 0x48911463; add edx, ecx; jmp rdx; 
0x00000000000af7eb: add eax, 0x10; lea r11, [rip + 0xe1c6b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a50ab: add eax, 0x10; lea r11, [rip + 0xebf4b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000006b7e5: add eax, 0x123f56; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b6de: add eax, 0x123fdd; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b737: add eax, 0x124004; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b78d: add eax, 0x12402e; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b684: add eax, 0x1240b7; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b03c: add eax, 0x12487f; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006af9a: add eax, 0x124921; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006af13: add eax, 0x124928; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006aad9: add eax, 0x124c62; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005dde8: add eax, 0x131133; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d592: add eax, 0x131909; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d5f3: add eax, 0x131928; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d658: add eax, 0x131943; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d6cf: add eax, 0x13194c; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d528: add eax, 0x1319f3; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d4c1: add eax, 0x131a5a; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d421: add eax, 0x131afa; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d0d1: add eax, 0x131fca; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x0000000000084c02: add eax, 0x14d291; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x0000000000084bd2: add eax, 0x14d2c1; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x0000000000088f26: add eax, 0x247c8d48; adc al, ch; pop rdi; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000016e6de: add eax, 0x49048d44; lea rcx, [rdi + rdx - 0x60]; and rdi, 0xfffffffffffffff0; lea rdx, [rip + 0x40d]; add rdx, r8; jmp rdx; 
0x000000000002e19a: add eax, 0x58e90000; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x000000000012c8bd: add eax, 0x6754e; lea rsi, [rip + 0x67547]; add rax, rsi; jmp rax; 
0x000000000017a0eb: add eax, 0x77fee900; clc; jmp qword ptr [rsi + 0xf]; 
0x000000000014f736: add eax, 0x8275d; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000014f702: add eax, 0x82791; mov rsi, rdi; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000014f6d2: add eax, 0x827c1; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x000000000013c252: add eax, 0x8d486277; or eax, 0x581e8; mov edx, eax; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000135d28: add eax, 0xe9000000; iretd; idiv edi; jmp qword ptr [rsi + 0x66]; 
0x000000000017a7c4: add eax, 0xeabb96e8; jmp qword ptr [rsi + 0xf]; 
0x0000000000135dd7: add eax, 0xebfffff7; mov ecx, 0xfe22dee8; jmp qword ptr [rsi + 0x66]; 
0x0000000000136a28: add eax, 0xeef932e8; jmp qword ptr [rsi + 0xf]; 
0x00000000001342d8: add eax, 0xef2082e8; jmp qword ptr [rsi + 0xf]; 
0x000000000012b344: add eax, 0xefb016e8; jmp qword ptr [rsi + 0xf]; 
0x000000000012ad18: add eax, 0xefb642e8; jmp qword ptr [rsi + 0xf]; 
0x0000000000125578: add eax, 0xf00de2e8; jmp qword ptr [rsi + 0xf]; 
0x000000000009f03e: add eax, 0xf1ded; mov edi, edx; movsxd rdi, dword ptr [r8 + rdi*4]; add rdi, r8; jmp rdi; 
0x00000000000f1e08: add eax, 0xf34552e8; jmp qword ptr [rsi + 0xf]; 
0x00000000000e7b22: add eax, 0xf3e838e8; jmp qword ptr [rsi + 0xf]; 
0x00000000000e7a6b: add eax, 0xf3e8efe8; jmp qword ptr [rsi + 0xf]; 
0x00000000000e76af: add eax, 0xf3ecabe8; jmp qword ptr [rsi + 0xf]; 
0x00000000000e755b: add eax, 0xf3edffe8; jmp qword ptr [rsi + 0xf]; 
0x00000000000e73c2: add eax, 0xf3ef98e8; jmp qword ptr [rsi + 0xf]; 
0x00000000000d4493: add eax, 0xf51ec7e8; jmp qword ptr [rsi + 0xf]; 
0x000000000006c272: add eax, 0xffffe5b6; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000005deb2: add eax, 0xffffe706; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x00000000000e5b20: add eax, dword ptr [rax]; add al, ch; or spl, sil; jmp qword ptr [rsi + 0xf]; 
0x00000000000db0d9: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; adc eax, 0xb74b9; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d945c: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; adc eax, 0xb8fc6; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x000000000006dd0d: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; xor eax, 0x121fc1; movsxd rax, dword ptr [rsi + rbx*4]; add rax, rsi; jmp rax; 
0x0000000000069048: add eax, dword ptr [rax]; add byte ptr [rax - 0x90043], al; jmp qword ptr [rax]; 
0x0000000000035986: add eax, dword ptr [rbx + 0x27770afa]; lea rcx, [rip + 0x1545cd]; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x00000000000f6d7c: add eax, ebp; jmp rax; 
0x00000000000e7be7: add eax, ebx; jmp rax; 
0x0000000000035998: add eax, ecx; jmp rax; 
0x000000000005c6f1: add eax, ecx; mov byte ptr [rsp + 0x34], 0x20; jmp rax; 
0x000000000005d59c: add eax, edi; jmp rax; 
0x00000000000277b2: add eax, edx; jmp rax; 
0x000000000003746b: add eax, esi; jmp rax; 
0x000000000006a921: add eax, esi; mov dword ptr [rsp + 0x30], 0x20; jmp rax; 
0x0000000000132d0e: add ebp, dword ptr [rbp + 6]; add al, ch; pop rcx; and eax, esi; jmp qword ptr [rsi + 0xf]; 
0x00000000000f73db: add ebp, ecx; xchg edi, ebp; bnd jmp qword ptr [rsi + 0x2e]; 
0x000000000006bbdc: add ecx, ebp; cmp cl, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000009dbbc: add ecx, ebp; sar ebp, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000000eaf6e: add ecx, ecx; jmp rcx; 
0x000000000005a2cc: add ecx, edx; jmp rcx; 
0x0000000000033166: add ecx, esi; jmp rcx; 
0x00000000000ac735: add edi, 0x10; bsf rdx, rdx; lea r11, [rip + 0xe4ac5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9905: add edi, 0x10; bsf rdx, rdx; lea r11, [rip + 0xe7835]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76d5: add edi, 0x10; bsf rdx, rdx; lea r11, [rip + 0xe99a5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c35: add edi, 0x10; bsf rdx, rdx; lea r11, [rip + 0xed221]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000001403cd: add edi, 0x10; jmp rcx; 
0x00000000000af7d6: add edi, 0x10; lea r11, [rip + 0xe1c80]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac79d: add edi, 0x10; lea r11, [rip + 0xe4a61]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a996d: add edi, 0x10; lea r11, [rip + 0xe77d1]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a773d: add edi, 0x10; lea r11, [rip + 0xe9941]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a5096: add edi, 0x10; lea r11, [rip + 0xebf60]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a5077: add edi, 0x10; lea r11, [rip + 0xebf7f]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c9d: add edi, 0x10; lea r11, [rip + 0xed1bd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7d2: add edi, 0x20; lea r11, [rip + 0xe4a2c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7772: add edi, 0x20; lea r11, [rip + 0xe990c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3cd2: add edi, 0x20; lea r11, [rip + 0xed188]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000013c98b: add edi, 0x23b0; pop rbp; jmp rcx; 
0x00000000000ac690: add edi, 0x30; lea r11, [rip + 0xe4b6e]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a763f: add edi, 0x30; lea r11, [rip + 0xe9a3f]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3b9f: add edi, 0x30; lea r11, [rip + 0xed2bb]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000142af4: add edi, 0x58; jmp rcx; 
0x00000000001421f4: add edi, 0x68; jmp rcx; 
0x000000000013f827: add edi, 0xc8; jmp rcx; 
0x000000000009f04a: add edi, eax; jmp rdi; 
0x00000000000aedfe: add edi, ecx; add rsi, rcx; lea r11, [rip + 0xe25c6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8ae: add edi, ecx; add rsi, rcx; lea r11, [rip + 0xe49ce]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a454e: add edi, ecx; add rsi, rcx; lea r11, [rip + 0xeca16]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000009eed5: add edi, ecx; jmp rdi; 
0x0000000000127d92: add edi, edi; jmp qword ptr [rsi + 0x2e]; 
0x0000000000127f3f: add edi, edi; jmp qword ptr [rsi + 0x66]; 
0x000000000007678e: add edi, edi; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000137cd4: add edi, esi; jmp qword ptr [rsi + 0xf]; 
0x00000000000aec68: add edx, 0x10; sub rdx, rcx; lea r11, [rip + 0xe26db]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac758: add edx, 0x10; sub rdx, rcx; lea r11, [rip + 0xe4aa3]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9928: add edx, 0x10; sub rdx, rcx; lea r11, [rip + 0xe7813]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76f8: add edx, 0x10; sub rdx, rcx; lea r11, [rip + 0xe9983]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a43a8: add edx, 0x10; sub rdx, rcx; lea r11, [rip + 0xecb3b]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c58: add edx, 0x10; sub rdx, rcx; lea r11, [rip + 0xed1ff]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000005eec7: add edx, dword ptr [rbx]; add byte ptr [rdi], cl; mov dh, 0xc9; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000016e6f4: add edx, eax; jmp rdx; 
0x000000000007522f: add edx, ecx; jmp rdx; 
0x000000000003f5f0: add edx, edi; cmp esi, 0x2f; jmp rdx; 
0x000000000009efaa: add edx, edi; jmp rdx; 
0x00000000000ca7c1: add edx, esi; jmp rdx; 
0x00000000000ac799: add esi, 0x10; add rdi, 0x10; lea r11, [rip + 0xe4a61]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9969: add esi, 0x10; add rdi, 0x10; lea r11, [rip + 0xe77d1]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7739: add esi, 0x10; add rdi, 0x10; lea r11, [rip + 0xe9941]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c99: add esi, 0x10; add rdi, 0x10; lea r11, [rip + 0xed1bd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7ce: add esi, 0x20; add rdi, 0x20; lea r11, [rip + 0xe4a2c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a776e: add esi, 0x20; add rdi, 0x20; lea r11, [rip + 0xe990c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3cce: add esi, 0x20; add rdi, 0x20; lea r11, [rip + 0xed188]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac68c: add esi, 0x30; add rdi, 0x30; lea r11, [rip + 0xe4b6e]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a763b: add esi, 0x30; add rdi, 0x30; lea r11, [rip + 0xe9a3f]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3b9b: add esi, 0x30; add rdi, 0x30; lea r11, [rip + 0xed2bb]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000141515: add esi, 0x38; jmp qword ptr [rax + 0x18]; 
0x000000000013b5f5: add esi, dword ptr [rcx]; sar bh, 0x53; sbb bl, ch; mov esi, 0xfdcabee8; jmp qword ptr [rsi + 0x66]; 
0x0000000000068c72: add esi, eax; test edi, edi; idiv bh; jmp qword ptr [rax]; 
0x00000000000aec11: add esi, ecx; bsf rdx, rdx; lea r11, [rip + 0xe2732]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac711: add esi, ecx; bsf rdx, rdx; lea r11, [rip + 0xe4aea]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac6f4: add esi, ecx; bsf rdx, rdx; lea r11, [rip + 0xe4b07]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a98c4: add esi, ecx; bsf rdx, rdx; lea r11, [rip + 0xe7877]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76b1: add esi, ecx; bsf rdx, rdx; lea r11, [rip + 0xe99ca]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7694: add esi, ecx; bsf rdx, rdx; lea r11, [rip + 0xe99e7]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4351: add esi, ecx; bsf rdx, rdx; lea r11, [rip + 0xecb92]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c11: add esi, ecx; bsf rdx, rdx; lea r11, [rip + 0xed246]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3bf4: add esi, ecx; bsf rdx, rdx; lea r11, [rip + 0xed263]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000116be3: add esi, ecx; jmp qword ptr [rsi + 0x2e]; 
0x00000000000aee4a: add esi, ecx; lea r11, [rip + 0xe257d]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee2a: add esi, ecx; lea r11, [rip + 0xe259d]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee01: add esi, ecx; lea r11, [rip + 0xe25c6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8fa: add esi, ecx; lea r11, [rip + 0xe4985]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8da: add esi, ecx; lea r11, [rip + 0xe49a5]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8b1: add esi, ecx; lea r11, [rip + 0xe49ce]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a459a: add esi, ecx; lea r11, [rip + 0xec9cd]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a457a: add esi, ecx; lea r11, [rip + 0xec9ed]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4551: add esi, ecx; lea r11, [rip + 0xeca16]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000003973e: add esi, edi; jmp rsi; 
0x00000000000bd8a9: add esi, edi; or eax, 0x1b8ee800; cld; jmp qword ptr [rsi + 0x66]; 
0x0000000000082d41: add esp, 0x10; pop rbx; jmp rax; 
0x00000000000832cd: add esp, 0x20; pop rbx; jmp rax; 
0x0000000000084cd4: add esp, 0x20; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000000834df: add esp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x0000000000085380: add esp, 0x30; pop rbx; jmp rax; 
0x00000000000851ea: add esp, 0x38; jmp rax; 
0x0000000000085571: add esp, 0x38; pop rbx; pop rbp; jmp rax; 
0x000000000014f59f: add esp, 0x40; pop rbx; jmp rax; 
0x000000000013c089: add esp, 8; mov rdi, rbp; pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x000000000007a63e: add esp, 8; mov rdi, rbx; pop rbx; pop rbp; jmp rax; 
0x000000000014fe2c: add esp, 8; pop rbx; pop rbp; jmp rax; 
0x000000000013c943: add esp, 8; pop rbx; pop rbp; jmp rcx; 
0x000000000005de23: add qword ptr [rax], rax; add byte ptr [rax], al; jmp rax; 
0x00000000000af7ea: add r8, 0x10; lea r11, [rip + 0xe1c6b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a50aa: add r8, 0x10; lea r11, [rip + 0xebf4b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000007f7e7: add r9b, r13b; sar dh, 0xff; jmp qword ptr [rsi - 0x70]; 
0x00000000000f6d7b: add rax, r13; jmp rax; 
0x0000000000134cee: add rax, r14; jmp rax; 
0x00000000000e7be6: add rax, rbx; jmp rax; 
0x0000000000035997: add rax, rcx; jmp rax; 
0x000000000005c6f0: add rax, rcx; mov byte ptr [rsp + 0x34], 0x20; jmp rax; 
0x000000000005d59b: add rax, rdi; jmp rax; 
0x00000000000277b1: add rax, rdx; jmp rax; 
0x000000000003746a: add rax, rsi; jmp rax; 
0x000000000006a920: add rax, rsi; mov dword ptr [rsp + 0x30], 0x20; jmp rax; 
0x00000000000eaf6d: add rcx, r9; jmp rcx; 
0x000000000005a2cb: add rcx, rdx; jmp rcx; 
0x0000000000033165: add rcx, rsi; jmp rcx; 
0x00000000000ac734: add rdi, 0x10; bsf rdx, rdx; lea r11, [rip + 0xe4ac5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9904: add rdi, 0x10; bsf rdx, rdx; lea r11, [rip + 0xe7835]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76d4: add rdi, 0x10; bsf rdx, rdx; lea r11, [rip + 0xe99a5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c34: add rdi, 0x10; bsf rdx, rdx; lea r11, [rip + 0xed221]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000001403cc: add rdi, 0x10; jmp rcx; 
0x00000000000af7d5: add rdi, 0x10; lea r11, [rip + 0xe1c80]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac79c: add rdi, 0x10; lea r11, [rip + 0xe4a61]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a996c: add rdi, 0x10; lea r11, [rip + 0xe77d1]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a773c: add rdi, 0x10; lea r11, [rip + 0xe9941]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a5095: add rdi, 0x10; lea r11, [rip + 0xebf60]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a5076: add rdi, 0x10; lea r11, [rip + 0xebf7f]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c9c: add rdi, 0x10; lea r11, [rip + 0xed1bd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7d1: add rdi, 0x20; lea r11, [rip + 0xe4a2c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7771: add rdi, 0x20; lea r11, [rip + 0xe990c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3cd1: add rdi, 0x20; lea r11, [rip + 0xed188]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000013c98a: add rdi, 0x23b0; pop rbp; jmp rcx; 
0x00000000000ac68f: add rdi, 0x30; lea r11, [rip + 0xe4b6e]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a763e: add rdi, 0x30; lea r11, [rip + 0xe9a3f]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3b9e: add rdi, 0x30; lea r11, [rip + 0xed2bb]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000142af3: add rdi, 0x58; jmp rcx; 
0x00000000001421f3: add rdi, 0x68; jmp rcx; 
0x000000000013f826: add rdi, 0xc8; jmp rcx; 
0x000000000009f049: add rdi, r8; jmp rdi; 
0x000000000009eed4: add rdi, r9; jmp rdi; 
0x00000000000aedfd: add rdi, rcx; add rsi, rcx; lea r11, [rip + 0xe25c6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8ad: add rdi, rcx; add rsi, rcx; lea r11, [rip + 0xe49ce]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a454d: add rdi, rcx; add rsi, rcx; lea r11, [rip + 0xeca16]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec67: add rdx, 0x10; sub rdx, rcx; lea r11, [rip + 0xe26db]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac757: add rdx, 0x10; sub rdx, rcx; lea r11, [rip + 0xe4aa3]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9927: add rdx, 0x10; sub rdx, rcx; lea r11, [rip + 0xe7813]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76f7: add rdx, 0x10; sub rdx, rcx; lea r11, [rip + 0xe9983]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a43a7: add rdx, 0x10; sub rdx, rcx; lea r11, [rip + 0xecb3b]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c57: add rdx, 0x10; sub rdx, rcx; lea r11, [rip + 0xed1ff]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000f3c86: add rdx, r15; jmp rdx; 
0x000000000016e6f3: add rdx, r8; jmp rdx; 
0x000000000007522e: add rdx, rcx; jmp rdx; 
0x000000000003f5ef: add rdx, rdi; cmp esi, 0x2f; jmp rdx; 
0x000000000009efa9: add rdx, rdi; jmp rdx; 
0x00000000000ca7c0: add rdx, rsi; jmp rdx; 
0x00000000000ac798: add rsi, 0x10; add rdi, 0x10; lea r11, [rip + 0xe4a61]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9968: add rsi, 0x10; add rdi, 0x10; lea r11, [rip + 0xe77d1]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7738: add rsi, 0x10; add rdi, 0x10; lea r11, [rip + 0xe9941]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c98: add rsi, 0x10; add rdi, 0x10; lea r11, [rip + 0xed1bd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7cd: add rsi, 0x20; add rdi, 0x20; lea r11, [rip + 0xe4a2c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a776d: add rsi, 0x20; add rdi, 0x20; lea r11, [rip + 0xe990c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3ccd: add rsi, 0x20; add rdi, 0x20; lea r11, [rip + 0xed188]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac68b: add rsi, 0x30; add rdi, 0x30; lea r11, [rip + 0xe4b6e]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a763a: add rsi, 0x30; add rdi, 0x30; lea r11, [rip + 0xe9a3f]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3b9a: add rsi, 0x30; add rdi, 0x30; lea r11, [rip + 0xed2bb]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000141514: add rsi, 0x38; jmp qword ptr [rax + 0x18]; 
0x00000000000aec10: add rsi, rcx; bsf rdx, rdx; lea r11, [rip + 0xe2732]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac710: add rsi, rcx; bsf rdx, rdx; lea r11, [rip + 0xe4aea]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac6f3: add rsi, rcx; bsf rdx, rdx; lea r11, [rip + 0xe4b07]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a98c3: add rsi, rcx; bsf rdx, rdx; lea r11, [rip + 0xe7877]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76b0: add rsi, rcx; bsf rdx, rdx; lea r11, [rip + 0xe99ca]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7693: add rsi, rcx; bsf rdx, rdx; lea r11, [rip + 0xe99e7]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4350: add rsi, rcx; bsf rdx, rdx; lea r11, [rip + 0xecb92]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c10: add rsi, rcx; bsf rdx, rdx; lea r11, [rip + 0xed246]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3bf3: add rsi, rcx; bsf rdx, rdx; lea r11, [rip + 0xed263]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee49: add rsi, rcx; lea r11, [rip + 0xe257d]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee29: add rsi, rcx; lea r11, [rip + 0xe259d]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee00: add rsi, rcx; lea r11, [rip + 0xe25c6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8f9: add rsi, rcx; lea r11, [rip + 0xe4985]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8d9: add rsi, rcx; lea r11, [rip + 0xe49a5]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8b0: add rsi, rcx; lea r11, [rip + 0xe49ce]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4599: add rsi, rcx; lea r11, [rip + 0xec9cd]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4579: add rsi, rcx; lea r11, [rip + 0xec9ed]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4550: add rsi, rcx; lea r11, [rip + 0xeca16]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000003973d: add rsi, rdi; jmp rsi; 
0x0000000000082d40: add rsp, 0x10; pop rbx; jmp rax; 
0x00000000000832cc: add rsp, 0x20; pop rbx; jmp rax; 
0x0000000000084cd3: add rsp, 0x20; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000000834de: add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000000008537f: add rsp, 0x30; pop rbx; jmp rax; 
0x00000000000851e9: add rsp, 0x38; jmp rax; 
0x0000000000085570: add rsp, 0x38; pop rbx; pop rbp; jmp rax; 
0x000000000014f59e: add rsp, 0x40; pop rbx; jmp rax; 
0x000000000013c088: add rsp, 8; mov rdi, rbp; pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x000000000007a63d: add rsp, 8; mov rdi, rbx; pop rbx; pop rbp; jmp rax; 
0x000000000014fe2b: add rsp, 8; pop rbx; pop rbp; jmp rax; 
0x000000000013c942: add rsp, 8; pop rbx; pop rbp; jmp rcx; 
0x0000000000141d9a: and ah, byte ptr [rbx - 3]; jmp qword ptr [rsi - 0x70]; 
0x000000000007c68b: and al, 0; add byte ptr [rax], al; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x00000000000832f8: and al, 0x10; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000008482d: and al, 0x11; add al, ch; cmp eax, dword ptr [rsi]; sti; jmp qword ptr [rsi + 0x66]; 
0x00000000000ef96b: and al, 0x18; add dword ptr [rcx - 0x7d], ecx; jmp qword ptr [rax + 0x48]; 
0x00000000000832f3: and al, 0x18; mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000005de17: and al, 0x20; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000006c2a2: and al, 0x28; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000005de02: and al, 0x30; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000006a925: and al, 0x30; and byte ptr [rax], al; add byte ptr [rax], al; jmp rax; 
0x000000000005de12: and al, 0x34; and bh, al; and al, 0x20; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x00000000000e6e0d: and al, 0x38; add al, byte ptr [rax]; add cl, ch; xchg ecx, eax; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x000000000005deb9: and al, 0x38; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000006a91a: and al, 0x40; add byte ptr [rax], al; add byte ptr [rax], al; add rax, rsi; mov dword ptr [rsp + 0x30], 0x20; jmp rax; 
0x000000000006c2f2: and al, 0x40; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000005c6ea: and al, 0x48; add byte ptr [rax], al; add byte ptr [rax], al; add rax, rcx; mov byte ptr [rsp + 0x34], 0x20; jmp rax; 
0x000000000005de22: and al, 0x48; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x0000000000082d68: and al, 0x48; add esp, 0x10; pop rbx; jmp rax; 
0x000000000014f70d: and al, 0x48; mov eax, dword ptr [rax + 0x320]; jmp rax; 
0x000000000005de42: and al, 0x50; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x00000000000f48b0: and al, 0x58; mov r10d, dword ptr [rsp + 0x60]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000f48b5: and al, 0x60; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000006c2e2: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x00000000000daf9c: and al, 0x98; add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0x28; mov bl, 0xf4; jmp qword ptr [rsi + 0xf]; 
0x00000000000d932c: and al, 0x98; add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0xd8; int 0xf4; jmp qword ptr [rsi + 0xf]; 
0x00000000000f7794: and al, 0x98; add dword ptr [rax], eax; add byte ptr [rcx], dh; sal bh, 0xc2; jmp rsi; 
0x0000000000082d63: and al, 0xc; mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000141626: and al, 0xc8; add dword ptr [rax], eax; add bl, ch; mov eax, 0xfd6a8ee8; jmp qword ptr [rsi + 0x66]; 
0x00000000001456d8: and al, 0xe8; movabs byte ptr [0x29dbe8cfebfff8e6], al; std; jmp qword ptr [rsi + 0x66]; 
0x00000000000f3e60: and al, 0xe9; push rsi; idiv bh; jmp qword ptr [rsi + 0x2e]; 
0x0000000000123eb2: and al, 0xf0; jmp qword ptr [rsi + 0x66]; 
0x0000000000135c0b: and al, 0xfe; jmp qword ptr [rsi - 0x70]; 
0x000000000005dda2: and al, 8; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000005ddb2: and al, 8; add dword ptr [rax], eax; add byte ptr [rax], al; mov r10d, 1; jmp rax; 
0x000000000005d45f: and al, 8; add dword ptr [rax], eax; add byte ptr [rax], al; xor r10d, r10d; jmp rax; 
0x00000000000832fd: and al, 8; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000000e7bd9: and al, 8; movzx eax, byte ptr [rax + 8]; mov rdx, rax; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x0000000000132da4: and al, dh; jmp qword ptr [rsi + 0xf]; 
0x000000000005de14: and bh, al; and al, 0x20; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x00000000001342db: and bh, ch; jmp qword ptr [rsi + 0xf]; 
0x0000000000135ddf: and bh, dh; jmp qword ptr [rsi + 0x66]; 
0x000000000005a868: and byte ptr [rax - 0x68], cl; movzx eax, byte ptr [rdi + rax]; lea rdi, [rip + 0x1345aa]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d64f: and byte ptr [rax - 0x68], cl; movzx edx, byte ptr [rcx + rax]; lea rax, [rip + 0x131943]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d0c8: and byte ptr [rax - 0x68], cl; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x131fca]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d589: and byte ptr [rax - 0x68], cl; movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x131909]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d6c6: and byte ptr [rax - 0x68], cl; movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x13194c]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x0000000000027541: and byte ptr [rax - 0x77], cl; fistp word ptr [rbx + 0x48]; ror eax, 0x11; xor rax, qword ptr fs:[0x30]; jmp rax; 
0x000000000014f710: and byte ptr [rax], 3; add byte ptr [rax], al; jmp rax; 
0x000000000006a927: and byte ptr [rax], al; add byte ptr [rax], al; jmp rax; 
0x0000000000084cd6: and byte ptr [rbx + 0x5d], bl; pop r12; jmp rax; 
0x000000000003be71: and byte ptr [rbx + rcx*4 + 0x7f], cl; sub byte ptr [rcx - 0x3b76b310], cl; mov rbp, r9; jmp rdx; 
0x000000000014f711: and byte ptr [rbx], al; add byte ptr [rax], al; jmp rax; 
0x0000000000074b52: and byte ptr [rcx + rbp], bh; ja 0x74b88; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000141622: and byte ptr [rcx - 0x77], al; test byte ptr [rax + rcx*8], ah; add dword ptr [rax], eax; add bl, ch; mov eax, 0xfd6a8ee8; jmp qword ptr [rsi + 0x66]; 
0x0000000000075223: and byte ptr [rcx - 0x7d], al; cli; sub dword ptr [rdi + 0xe], esi; movsxd rdx, dword ptr [rcx + r10*4]; add rdx, rcx; jmp rdx; 
0x000000000004077a: and byte ptr [rcx], bl; add byte ptr [rcx], dh; shr al, cl; insb byte ptr [rdi], dx; fdiv st(7), st(0); jmp qword ptr [rsi + 0x2e]; 
0x000000000005e6fe: and byte ptr [rdi], cl; test dword ptr [rdi - 0x1600000c], ebp; in al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000016c66b: and byte ptr [rdx - 0x5f], 0xc5; add bh, ch; jmp qword ptr [rsi + 0x66]; 
0x000000000007c67d: and cl, byte ptr [rax - 0x75]; and dword ptr [rax + 0x48000000], 0xffffff89; fistp word ptr [rbx + 0x48]; mov eax, dword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000122e63: and cl, dh; jmp qword ptr [rsi + 0x2e]; 
0x00000000000768a3: and dh, bh; cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000038043: and dl, byte ptr [rip - 0x3f49f100]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000007c680: and dword ptr [rax + 0x48000000], 0xffffff89; fistp word ptr [rbx + 0x48]; mov eax, dword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000006af9b: and dword ptr [rcx + 0x12], ecx; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rdi; jmp rax; 
0x00000000000f5074: and dword ptr [rdi + 0x19], esi; movzx eax, al; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x0000000000038200: and dword ptr [rip - 0x3f49f100], edx; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000851de: and eax, 0x28; jne 0x85236; mov rax, qword ptr [rax + 0x38]; add rsp, 0x38; jmp rax; 
0x0000000000085378: and eax, 0x28; jne 0x853d8; add rsp, 0x30; pop rbx; jmp rax; 
0x00000000000854b7: and eax, 0x28; jne 0x8550b; add rsp, 0x30; pop rbx; jmp rax; 
0x000000000002754e: and eax, 0x30; jmp rax; 
0x00000000000275aa: and eax, 0x30; pop r12; pop r13; pop r14; jmp rax; 
0x00000000000275fc: and eax, 0x30; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000000762ef: and eax, 0x30; test rax, rax; je 0x76302; mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x00000000000763af: and eax, 0x30; test rax, rax; je 0x763c8; mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x00000000000aede2: and eax, 0x634b000e; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000001363b7: and eax, 0xebfffff1; mov ecx, 0xfe1cfee8; jmp qword ptr [rsi + 0x66]; 
0x0000000000029a7c: and eax, 0xfffee6e9; jmp qword ptr [rsi + 0xf]; 
0x00000000000d634a: and eax, dword ptr [rax + rax]; add byte ptr [rax - 0x73], cl; adc eax, 0xbbdc3; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x0000000000132d14: and eax, esi; jmp qword ptr [rsi + 0xf]; 
0x000000000016e6c4: and ecx, 0xf; shl ecx, 6; add rcx, r9; jmp rcx; 
0x00000000000db6e4: and ecx, dword ptr [rax - 0x73]; xor eax, 0xb6f30; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000016e6e9: and edi, 0xfffffff0; lea rdx, [rip + 0x40d]; add rdx, r8; jmp rdx; 
0x0000000000037af1: and esp, dword ptr [rsi]; adc eax, 0xc0b60f00; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000016e6e8: and rdi, 0xfffffffffffffff0; lea rdx, [rip + 0x40d]; add rdx, r8; jmp rdx; 
0x00000000000f73df: bnd jmp qword ptr [rsi + 0x2e]; 
0x00000000000fbd2b: bnd jmp qword ptr [rsi + 0x44]; 
0x00000000001013cf: bnd jmp qword ptr [rsi + 0x66]; 
0x00000000000ff5d8: bnd jmp qword ptr [rsi + 0xf]; 
0x00000000001085fc: bnd jmp qword ptr [rsi - 0x70]; 
0x000000000011ea82: bnd jmp qword ptr [rsi - 0x77]; 
0x00000000000fb9c3: bnd jmp qword ptr [rsi - 0x7d]; 
0x00000000000ca7c2: bnd jmp rdx; 
0x00000000000aec3d: bsf edx, edx; lea r11, [rip + 0xe2709]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec14: bsf edx, edx; lea r11, [rip + 0xe2732]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac771: bsf edx, edx; lea r11, [rip + 0xe4a8d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac739: bsf edx, edx; lea r11, [rip + 0xe4ac5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac714: bsf edx, edx; lea r11, [rip + 0xe4aea]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac6f7: bsf edx, edx; lea r11, [rip + 0xe4b07]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9909: bsf edx, edx; lea r11, [rip + 0xe7835]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a98c7: bsf edx, edx; lea r11, [rip + 0xe7877]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7711: bsf edx, edx; lea r11, [rip + 0xe996d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76d9: bsf edx, edx; lea r11, [rip + 0xe99a5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76b4: bsf edx, edx; lea r11, [rip + 0xe99ca]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7697: bsf edx, edx; lea r11, [rip + 0xe99e7]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a437d: bsf edx, edx; lea r11, [rip + 0xecb69]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4354: bsf edx, edx; lea r11, [rip + 0xecb92]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c71: bsf edx, edx; lea r11, [rip + 0xed1e9]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c39: bsf edx, edx; lea r11, [rip + 0xed221]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c14: bsf edx, edx; lea r11, [rip + 0xed246]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3bf7: bsf edx, edx; lea r11, [rip + 0xed263]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec3c: bsf rdx, rdx; lea r11, [rip + 0xe2709]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec13: bsf rdx, rdx; lea r11, [rip + 0xe2732]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac770: bsf rdx, rdx; lea r11, [rip + 0xe4a8d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac738: bsf rdx, rdx; lea r11, [rip + 0xe4ac5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac713: bsf rdx, rdx; lea r11, [rip + 0xe4aea]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac6f6: bsf rdx, rdx; lea r11, [rip + 0xe4b07]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9908: bsf rdx, rdx; lea r11, [rip + 0xe7835]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a98c6: bsf rdx, rdx; lea r11, [rip + 0xe7877]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7710: bsf rdx, rdx; lea r11, [rip + 0xe996d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76d8: bsf rdx, rdx; lea r11, [rip + 0xe99a5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76b3: bsf rdx, rdx; lea r11, [rip + 0xe99ca]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7696: bsf rdx, rdx; lea r11, [rip + 0xe99e7]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a437c: bsf rdx, rdx; lea r11, [rip + 0xecb69]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4353: bsf rdx, rdx; lea r11, [rip + 0xecb92]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c70: bsf rdx, rdx; lea r11, [rip + 0xed1e9]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c38: bsf rdx, rdx; lea r11, [rip + 0xed221]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c13: bsf rdx, rdx; lea r11, [rip + 0xed246]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3bf6: bsf rdx, rdx; lea r11, [rip + 0xed263]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000102933: call 0x12e793; add byte ptr [rax], al; pop rbp; pop r12; jmp rax; 
0x00000000001029c3: call 0x12e823; add byte ptr [rax], al; pop rbp; pop r12; jmp rax; 
0x00000000000b1470: call 0x5c4c71d0; jmp rax; 
0x0000000000102969: call 0x5c5186c9; jmp rax; 
0x00000000001029f9: call 0x5c518759; jmp rax; 
0x0000000000081b30: call 0x771e5797; sub cl, byte ptr [rdi]; mov dh, 0xc0; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000074b51: call 0x77308776; xor dword ptr [rdi], ecx; mov dh, 0xc0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000f29d4: call 0xdabc2; jmp qword ptr [rsi + 0xf]; 
0x0000000000037aeb: call 0xffffffff8d4c7aee; xor eax, 0x152623; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b27: call 0xffffffff8d4c7b2a; xor eax, 0x15266b; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b63: call 0xffffffff8d4c7b66; xor eax, 0x1526b3; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000a437a: call 0xffffffffbc198b8f; ror byte ptr [rbp + rcx*4 + 0x1d], cl; imul ecx, ebx, 0x6349000e; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000068d02: call 0xffffffffc7068cfd; test edi, edi; idiv bh; jmp qword ptr [rax]; 
0x00000000000a45ba: call 0xffffffffd28f8dcf; jne 0xa4521; lea r11, [rip + 0xec9a4]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac91a: call 0xffffffffd290112f; jne 0xac881; lea r11, [rip + 0xe495c]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000014e91e: call qword ptr [rax - 0x1de417]; jmp qword ptr [rsi + 0x2e]; 
0x000000000008b83c: call qword ptr [rax]; add al, ch; sub al, 0x96; cli; jmp qword ptr [rsi + 0x66]; 
0x0000000000160e2a: cmovp ecx, dword ptr [rcx - 0x1607f8ac]; sar esp, 0xff; jmp qword ptr [rsi + 0x66]; 
0x0000000000117e52: cmp ah, byte ptr [rsi - 0xa]; jmp qword ptr [rsi + 0x2e]; 
0x0000000000081b32: cmp al, 0x16; ja 0x81b60; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000f5073: cmp al, 0x21; ja 0xf5090; movzx eax, al; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x0000000000082d67: cmp al, 0x24; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000014f70c: cmp al, 0x24; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x0000000000074b53: cmp al, 0x29; ja 0x74b88; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000145680: cmp al, 0x2a; std; jmp qword ptr [rsi + 0x66]; 
0x0000000000144180: cmp al, 0x3f; std; jmp qword ptr [rsi + 0x66]; 
0x00000000000581b2: cmp al, 0x77; adc ecx, dword ptr [rax - 0x73]; or eax, 0x13672c; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000016e6c0: cmp al, 0xa; add byte ptr [rax], al; and ecx, 0xf; shl ecx, 6; add rcx, r9; jmp rcx; 
0x000000000009f047: cmp al, 0xb8; add rdi, r8; jmp rdi; 
0x000000000009eed2: cmp al, 0xb9; add rdi, r9; jmp rdi; 
0x00000000000df24d: cmp al, 7; ja 0xdf2a0; lea rdi, [rip + 0xb34c8]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x000000000003192f: cmp al, ch; sub ecx, dword ptr [rdx - 1]; jmp qword ptr [rsi + 0x41]; 
0x00000000000e9cba: cmp bh, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000153146: cmp bh, ah; jmp qword ptr [rsi + 0x66]; 
0x0000000000144630: cmp bh, ch; jmp qword ptr [rsi + 0x66]; 
0x0000000000178992: cmp bl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x00000000000ea967: cmp byte ptr [r15 + 0x15], r14b; movzx ecx, byte ptr [r15 + 0x30]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000008c7d0: cmp byte ptr [rbx + 0x10], al; add byte ptr [rbp + rcx*4 + 0x7f], cl; adc byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x0000000000085573: cmp byte ptr [rbx + 0x5d], bl; jmp rax; 
0x00000000000ea968: cmp byte ptr [rdi + 0x15], dh; movzx ecx, byte ptr [r15 + 0x30]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000010e3ca: cmp ch, 0xff; jmp qword ptr [rsi - 0x70]; 
0x00000000001447ee: cmp ch, bh; jmp qword ptr [rsi + 0x66]; 
0x0000000000141ddb: cmp ch, bh; jmp qword ptr [rsi - 0x70]; 
0x000000000006bbde: cmp cl, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000001460b3: cmp dh, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000000e279a: cmp dh, 0xff; jmp qword ptr [rsi - 0x70]; 
0x00000000001313eb: cmp dh, al; jmp qword ptr [rsi - 0x70]; 
0x0000000000134824: cmp dh, bh; jmp qword ptr [rsi + 0xf]; 
0x00000000000f3c7a: cmp dl, 0x1d; ja 0xf3c90; movzx edx, dl; movsxd rdx, dword ptr [r15 + rdx*4]; add rdx, r15; jmp rdx; 
0x000000000008d194: cmp dl, byte ptr [rax]; add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x000000000005a2c3: cmp dword ptr [rax + rax], eax; add byte ptr [rax + 0x63], cl; or al, 0x8a; add rcx, rdx; jmp rcx; 
0x0000000000141b83: cmp dword ptr [rbp - 3], esp; jmp qword ptr [rsi + 0xf]; 
0x000000000012c8b1: cmp dword ptr [rcx + 6], 0; jne 0x12c7e6; movsxd rax, dword ptr [rip + 0x6754e]; lea rsi, [rip + 0x67547]; add rax, rsi; jmp rax; 
0x0000000000134ce2: cmp dword ptr [rdi], 0; jne 0x134cd0; movzx eax, byte ptr [rdx]; movsxd rax, dword ptr [r14 + rax*4]; add rax, r14; jmp rax; 
0x0000000000038403: cmp dword ptr [rdx], esp; adc eax, 0xc0b60f00; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b152: cmp eax, 0x1247e9; movzx eax, byte ptr [rsi + rax]; lea rsi, [rip - 0x935]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005a871: cmp eax, 0x1345aa; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000039731: cmp eax, 0x150faa; mov r8d, r8d; movsxd rsi, dword ptr [rdi + r8*4]; add rsi, rdi; jmp rsi; 
0x0000000000074c55: cmp eax, 0x37; ja 0x74cd0; lea rcx, [rip + 0x11b8bb]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000db6e0: cmp eax, 0x3b; ja 0xdb708; lea rsi, [rip + 0xb6f30]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000008d18b: cmp eax, 0x43; ja 0x8d1d8; lea rdx, [rip + 0x103a85]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000135d24: cmp eax, 0x5bf0006; add byte ptr [rax], al; add cl, ch; iretd; idiv edi; jmp qword ptr [rsi + 0x66]; 
0x00000000000df253: cmp eax, 0xb34c8; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000d9aa9: cmp eax, 0xb89fe; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000ca789: cmp eax, 0xc7186; movzx edx, cl; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x000000000009ef9e: cmp eax, 0xf1e69; mov edx, edx; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x000000000006b1b8: cmp eax, 0xfffff670; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006af8f: cmp eax, 0xfffff899; movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x124921]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006ac70: cmp eax, 0xfffffbb8; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000146e40: cmp eax, 1; jne 0x146e31; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax]; 
0x000000000009a079: cmp eax, 9; ja 0x9a0e0; lea rdx, [rip + 0xf6d3b]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000003dfb6: cmp eax, dword ptr [rsi*2 + 0x58b48ec]; jmp qword ptr [rdx + 0x19]; 
0x0000000000084831: cmp eax, dword ptr [rsi]; sti; jmp qword ptr [rsi + 0x66]; 
0x00000000000832c4: cmp eax, eax; jae 0x832d8; mov rax, qword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000009a081: cmp ebp, dword ptr [rbp + 0xf]; add byte ptr [rax + 0x63], cl; add al, 0x82; add rax, rdx; jmp rax; 
0x0000000000140413: cmp ebp, eax; mov bh, 0x84; sti; jmp qword ptr [rsi - 0x7d]; 
0x00000000000337b8: cmp ebp, eax; movabs byte ptr [0xe95bdf8948ffff2b], al; cdq; sub edi, edi; jmp qword ptr [rsi + 0xf]; 
0x00000000000d67bd: cmp ebx, 0x4a; ja 0xd6720; lea rdx, [rip + 0xbbadf]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x000000000006d1e4: cmp ecx, 0x2e; ja 0x6d678; lea rsi, [rip + 0x122828]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000752b8: cmp ecx, 0x2e; ja 0x752dc; lea rsi, [rip + 0x11b3e0]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000005a2be: cmp ecx, 7; ja 0x5a700; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x00000000000681ee: cmp ecx, 7; ja 0x68650; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x000000000010e3c1: cmp ecx, dword ptr [rcx - 9]; inc dword ptr [rbx - 0x7af00008]; cmp ch, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000082d38: cmp ecx, eax; jae 0x82d50; mov rax, qword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000141a71: cmp ecx, edi; dec dword ptr [rcx - 0x1437b]; jmp qword ptr [rsi + 0xf]; 
0x0000000000075225: cmp edx, 0x29; ja 0x75238; movsxd rdx, dword ptr [rcx + r10*4]; add rdx, rcx; jmp rdx; 
0x0000000000035987: cmp edx, 0xa; ja 0x359b3; lea rcx, [rip + 0x1545cd]; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x00000000000a5191: cmp edx, eax; jb 0xa4490; lea r11, [rip + 0xebdd0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4526: cmp edx, eax; jb 0xa4490; lea r11, [rip + 0xeca3b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a450c: cmp edx, eax; jb 0xa4490; lea r11, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44ef: cmp edx, eax; jb 0xa4490; lea r11, [rip + 0xeca76]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44bf: cmp edx, eax; jb 0xa4490; lea r11, [rip + 0xecaa6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac886: cmp edx, eax; jb 0xac7f0; lea r11, [rip + 0xe49f3]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac86c: cmp edx, eax; jb 0xac7f0; lea r11, [rip + 0xe4a11]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac84f: cmp edx, eax; jb 0xac7f0; lea r11, [rip + 0xe4a2e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac81f: cmp edx, eax; jb 0xac7f0; lea r11, [rip + 0xe4a5e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af8d1: cmp edx, eax; jb 0xaed40; lea r11, [rip + 0xe1af0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedd6: cmp edx, eax; jb 0xaed40; lea r11, [rip + 0xe25eb]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedbc: cmp edx, eax; jb 0xaed40; lea r11, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed9f: cmp edx, eax; jb 0xaed40; lea r11, [rip + 0xe2626]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed6f: cmp edx, eax; jb 0xaed40; lea r11, [rip + 0xe2656]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000130fdf: cmp esi, -1; jmp qword ptr [rsi + 0x66]; 
0x00000000001758c3: cmp esi, -1; jmp qword ptr [rsi + 0xf]; 
0x000000000003f5f2: cmp esi, 0x2f; jmp rdx; 
0x00000000000db6e2: cmp esi, dword ptr [rdi + 0x23]; lea rsi, [rip + 0xb6f30]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000d9aa4: cmp esi, dword ptr [rdi + 0x29]; lea rdi, [rip + 0xb89fe]; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000ffac1: cmp esi, dword ptr [rdx]; clc; jmp qword ptr [rsi + 0x66]; 
0x000000000005146e: cmp esi, edi; jmp qword ptr [rsi + 0x66]; 
0x00000000000f1d9f: cmp esi, esp; jmp qword ptr [rsi + 0xf]; 
0x0000000000134ce1: cmp qword ptr [r15], 0; jne 0x134cd0; movzx eax, byte ptr [rdx]; movsxd rax, dword ptr [r14 + rax*4]; add rax, r14; jmp rax; 
0x0000000000075224: cmp r10d, 0x29; ja 0x75238; movsxd rdx, dword ptr [rcx + r10*4]; add rdx, rcx; jmp rdx; 
0x00000000000832c3: cmp r8, rax; jae 0x832d8; mov rax, qword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000000082d37: cmp rcx, rax; jae 0x82d50; mov rax, qword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000000a5190: cmp rdx, r8; jb 0xa4490; lea r11, [rip + 0xebdd0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4525: cmp rdx, r8; jb 0xa4490; lea r11, [rip + 0xeca3b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a450b: cmp rdx, r8; jb 0xa4490; lea r11, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44ee: cmp rdx, r8; jb 0xa4490; lea r11, [rip + 0xeca76]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44be: cmp rdx, r8; jb 0xa4490; lea r11, [rip + 0xecaa6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac885: cmp rdx, r8; jb 0xac7f0; lea r11, [rip + 0xe49f3]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac86b: cmp rdx, r8; jb 0xac7f0; lea r11, [rip + 0xe4a11]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac84e: cmp rdx, r8; jb 0xac7f0; lea r11, [rip + 0xe4a2e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac81e: cmp rdx, r8; jb 0xac7f0; lea r11, [rip + 0xe4a5e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af8d0: cmp rdx, r8; jb 0xaed40; lea r11, [rip + 0xe1af0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedd5: cmp rdx, r8; jb 0xaed40; lea r11, [rip + 0xe25eb]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedbb: cmp rdx, r8; jb 0xaed40; lea r11, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed9e: cmp rdx, r8; jb 0xaed40; lea r11, [rip + 0xe2626]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed6e: cmp rdx, r8; jb 0xaed40; lea r11, [rip + 0xe2656]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000012c8b0: cmp word ptr [rcx + 6], 0; jne 0x12c7e6; movsxd rax, dword ptr [rip + 0x6754e]; lea rsi, [rip + 0x67547]; add rax, rsi; jmp rax; 
0x0000000000137d06: cmpsb byte ptr [rsi], byte ptr [rdi]; fdivr st(7); jmp qword ptr [rsi + 0xf]; 
0x00000000000a44c6: cmpsb byte ptr [rsi], byte ptr [rdi]; retf 0xe; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000009b836: cmpsb byte ptr [rsi], byte ptr [rdi]; stosb byte ptr [rdi], al; clc; jmp qword ptr [rsi + 0xf]; 
0x0000000000153145: cmpsd dword ptr [rsi], dword ptr [rdi]; cmp bh, ah; jmp qword ptr [rsi + 0x66]; 
0x0000000000152745: cmpsd dword ptr [rsi], dword ptr [rdi]; cld; jmp qword ptr [rsi + 0x66]; 
0x000000000016d142: dec byte ptr [rax + 0x6f]; pop rcx; jmp qword ptr [rdx - 0x2f]; 
0x000000000014f709: dec byte ptr [rax - 0x75]; cmp al, 0x24; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x00000000000d9aaa: dec byte ptr [rcx - 0x49f0fff5]; ror byte ptr [rax + 0x63], 4; xchg dword ptr [rax + 1], ecx; clc; jmp rax; 
0x000000000006ac74: dec dword ptr [rax + 0x63]; add al, 0x86; add rax, rdi; jmp rax; 
0x00000000000687c0: dec dword ptr [rax + 0x63]; add al, 0x87; add rax, rdx; jmp rax; 
0x000000000006b09c: dec dword ptr [rax + 0x63]; add al, 0x87; add rax, rsi; jmp rax; 
0x000000000005f1cf: dec dword ptr [rax + 0x63]; add al, 0x96; mov r8, qword ptr [rbp - 0x660]; mov rcx, qword ptr [rbp - 0x668]; add rax, rsi; jmp rax; 
0x00000000000eca09: dec dword ptr [rax + 0x63]; add al, 0xba; add rax, rdx; jmp rax; 
0x000000000012c8ba: dec dword ptr [rax + 0x63]; add eax, 0x6754e; lea rsi, [rip + 0x67547]; add rax, rsi; jmp rax; 
0x00000000000f01c2: dec dword ptr [rax - 0x39]; sub byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx - 0x6f773], cl; jmp qword ptr [rsi + 0xf]; 
0x000000000005ca78: dec dword ptr [rax - 0x68]; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d418: dec dword ptr [rax - 0x68]; movzx edx, byte ptr [rcx + rax]; lea rax, [rip + 0x131afa]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d4b8: dec dword ptr [rax - 0x68]; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x131a5a]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005dddf: dec dword ptr [rax - 0x68]; movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x131133]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x00000000000e011d: dec dword ptr [rax - 0x73]; adc eax, 0xb284f; movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x00000000000d67c5: dec dword ptr [rax - 0x73]; adc eax, 0xbbadf; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000c8739: dec dword ptr [rax - 0x73]; adc eax, 0xc914b; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000c5cf9: dec dword ptr [rax - 0x73]; push rcx; jmp qword ptr [rsi - 0x70]; 
0x00000000000383a5: dec dword ptr [rax - 0x73]; xor eax, 0x15218b; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000381fb: dec dword ptr [rax - 0x73]; xor eax, 0x1521a9; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000383da: dec dword ptr [rax - 0x73]; xor eax, 0x1521da; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038230: dec dword ptr [rax - 0x73]; xor eax, 0x1521f8; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000383ff: dec dword ptr [rax - 0x73]; xor eax, 0x152239; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038255: dec dword ptr [rax - 0x73]; xor eax, 0x152257; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000003803e: dec dword ptr [rax - 0x73]; xor eax, 0x1522e2; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037aed: dec dword ptr [rax - 0x73]; xor eax, 0x152623; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000379df: dec dword ptr [rax - 0x73]; xor eax, 0x152629; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b29: dec dword ptr [rax - 0x73]; xor eax, 0x15266b; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b65: dec dword ptr [rax - 0x73]; xor eax, 0x1526b3; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b9a: dec dword ptr [rax - 0x73]; xor eax, 0x152702; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000003745b: dec dword ptr [rax - 0x73]; xor eax, 0x152b29; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005f1da: dec dword ptr [rax - 0x75]; lea ebx, [rax + 0x48fffff9]; add eax, esi; jmp rax; 
0x0000000000082e47: dec dword ptr [rax - 0x75]; or byte ptr [r8 + 0x3b], cl; adc byte ptr [r15], cl; sbb dword ptr [rbp - 1], -1; jmp qword ptr [rsi + 0x2e]; 
0x0000000000082d5c: dec dword ptr [rax - 0x75]; sbb byte ptr [r11 + 0x480c2474], cl; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000012858e: dec dword ptr [rax - 0x77]; fidiv dword ptr [rcx]; test byte ptr [rcx + rcx*4 - 0x19], -0x18; fucomp st(7); jmp qword ptr [rsi + 0xf]; 
0x00000000000de608: dec dword ptr [rax - 0x77]; fistp word ptr [rbx - 0x17]; jge 0xde605; jmp qword ptr [rsi + 0x66]; 
0x00000000000337bd: dec dword ptr [rax - 0x77]; fistp word ptr [rbx - 0x17]; cdq; sub edi, edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000075b89: dec dword ptr [rax - 0x77]; vpaddb xmm1, xmm2, xmmword ptr [rcx]; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000077f79: dec dword ptr [rax - 0x77]; vpaddsb xmm5, xmm2, xmm0; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000076a19: dec dword ptr [rax - 0x77]; vpsubusw xmm7, xmm2, xmm4; cli; jmp qword ptr [rsi + 0x2e]; 
0x00000000000786d9: dec dword ptr [rax - 0x77]; vsubpd xmm4, xmm2, xmm2; cli; jmp qword ptr [rsi + 0x2e]; 
0x00000000000ad0a8: dec dword ptr [rbp + rcx*4 + 0x1d]; fadd dword ptr [rcx + 0xe]; add byte ptr [rbx + 0x63], cl; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee74: dec dword ptr [rbp + rcx*4 + 0x1d]; push rsp; and eax, 0x634b000e; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a5198: dec dword ptr [rbp + rcx*4 + 0x1d]; sar byte ptr [rbp + 0x634b000e], 1; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000145791: dec dword ptr [rbx + 0x3137e83b]; sti; jmp qword ptr [rsi - 0x7d]; 
0x00000000000f3e5c: dec dword ptr [rbx + rcx*4 + 0xc]; and al, 0xe9; push rsi; idiv bh; jmp qword ptr [rsi + 0x2e]; 
0x0000000000141a73: dec dword ptr [rcx - 0x1437b]; jmp qword ptr [rsi + 0xf]; 
0x00000000000d6df3: dec dword ptr [rcx - 0x7076b]; jmp qword ptr [rsi + 0xf]; 
0x00000000000ef8e1: dec dword ptr [rcx - 0x7d]; jmp qword ptr [rax]; 
0x00000000000d864c: dec dword ptr [rdi]; mov bh, 0x15; xchg edx, eax; jp 0xd865f; add byte ptr [rbx - 0x4e74b], cl; jmp qword ptr [rsi - 0x77]; 
0x000000000005c0a1: dec dword ptr [rdi]; mov bh, 0x9d; pop rsp; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x000000000006a313: dec dword ptr [rdi]; mov bh, 0xb5; idiv rdi; jmp qword ptr [rsi - 0x77]; 
0x00000000000eaf64: dec dword ptr [rdi]; mov dh, 0x4a; or byte ptr [rcx + 0x63], cl; or al, 0x89; add rcx, r9; jmp rcx; 
0x0000000000117a14: div al; jmp qword ptr [rsi + 0xf]; 
0x00000000000d6bd2: div byte ptr [rcx + rbx - 0x17]; imul byte ptr [rdx - 4]; jmp qword ptr [rsi + 0xf]; 
0x00000000000ebfd2: div byte ptr [rcx + rbx - 0x17]; not byte ptr [rsi]; sti; jmp qword ptr [rsi + 0xf]; 
0x000000000002904d: div byte ptr [rcx]; jmp qword ptr [rsi + 0xf]; 
0x000000000008590e: div byte ptr [rdi + rcx + 0x48]; mov edx, dword ptr [rdi + 8]; mov rax, qword ptr [rdi]; mov rdi, rdx; jmp rax; 
0x00000000000ad0ac: fadd dword ptr [rcx + 0xe]; add byte ptr [rbx + 0x63], cl; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000077d73: fbstp tbyte ptr [rcx]; rcr byte ptr [rbx + 0x5d], cl; pop r12; pop r13; jmp rax; 
0x000000000008dc8e: fcom qword ptr [rax]; add al, ch; fidiv dword ptr [rcx - 6]; jmp qword ptr [rsi + 0x2e]; 
0x000000000004eda3: fdiv dword ptr [rdi - 3]; jmp qword ptr [rsi + 0xf]; 
0x0000000000088360: fdiv qword ptr [rax - 1]; jmp qword ptr [rsi + 0x66]; 
0x0000000000040781: fdiv st(7), st(0); jmp qword ptr [rsi + 0x2e]; 
0x00000000000460d7: fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x0000000000127ca4: fdivr st(0), st(0); jmp qword ptr [rsi + 0xf]; 
0x000000000007924f: fdivr st(2); jmp qword ptr [rsi + 0x2e]; 
0x0000000000148ce0: fdivr st(3), st(0); cld; jmp qword ptr [rsi + 0x2e]; 
0x000000000013a831: fdivr st(5); jmp qword ptr [rsi + 0x66]; 
0x0000000000137cee: fdivr st(7); jmp qword ptr [rsi + 0x66]; 
0x0000000000137d07: fdivr st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000010b637: ffreep st(7); test eax, esi; idiv edi; jmp qword ptr [rdi + 0x6d]; 
0x00000000000f3c79: fiadd word ptr [rax + 0x11771dfa]; movzx edx, dl; movsxd rdx, dword ptr [r15 + rdx*4]; add rdx, r15; jmp rdx; 
0x00000000000466de: ficomp word ptr [rcx]; or eax, 0xfe78e900; std; jmp qword ptr [rsi + 0xf]; 
0x000000000008dc92: fidiv dword ptr [rcx - 6]; jmp qword ptr [rsi + 0x2e]; 
0x0000000000128591: fidiv dword ptr [rcx]; test byte ptr [rcx + rcx*4 - 0x19], -0x18; fucomp st(7); jmp qword ptr [rsi + 0xf]; 
0x0000000000075ee3: fild dword ptr [rsi]; sti; jmp qword ptr [rsi + 0xf]; 
0x00000000000db6de: fild word ptr [r11 + 0x23773bf8]; lea rsi, [rip + 0xb6f30]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000db6df: fild word ptr [rbx + 0x23773bf8]; lea rsi, [rip + 0xb6f30]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000001140bb: fimul word ptr [rbx]; add byte ptr [rbx - 0x5a4417c8], cl; bnd jmp qword ptr [rsi + 0x66]; 
0x00000000000d67c9: fistp qword ptr [rdx + 0x6348000b]; add al, 0x9a; add rax, rdx; jmp rax; 
0x000000000007c687: fistp word ptr [rbx + 0x48]; mov eax, dword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000027544: fistp word ptr [rbx + 0x48]; ror eax, 0x11; xor rax, qword ptr fs:[0x30]; jmp rax; 
0x000000000007a643: fistp word ptr [rbx + 0x5d]; jmp rax; 
0x000000000007a1df: fistp word ptr [rbx + 0x5d]; pop r12; jmp rax; 
0x00000000000809ab: fistp word ptr [rbx + 0x5d]; pop r12; pop r13; jmp rax; 
0x00000000000de60b: fistp word ptr [rbx - 0x17]; jge 0xde605; jmp qword ptr [rsi + 0x66]; 
0x0000000000123eae: fistp word ptr [rbx - 0x17]; stosd dword ptr [rdi], eax; and al, 0xf0; jmp qword ptr [rsi + 0x66]; 
0x00000000000337c0: fistp word ptr [rbx - 0x17]; cdq; sub edi, edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000102930: fisttp word ptr [rax - 0x77]; call 0x12e793; add byte ptr [rax], al; pop rbp; pop r12; jmp rax; 
0x00000000001029c0: fisttp word ptr [rax - 0x77]; call 0x12e823; add byte ptr [rax], al; pop rbp; pop r12; jmp rax; 
0x0000000000102966: fisttp word ptr [rax - 0x77]; call 0x5c5186c9; jmp rax; 
0x00000000001029f6: fisttp word ptr [rax - 0x77]; call 0x5c518759; jmp rax; 
0x00000000000383de: fisub dword ptr [rcx]; adc eax, 0xc0b60f00; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000001456e1: fld xword ptr [rcx]; std; jmp qword ptr [rsi + 0x66]; 
0x00000000000d9334: fmul st(5); hlt; jmp qword ptr [rsi + 0xf]; 
0x000000000008815f: fnsave dword ptr [rdx - 1]; jmp qword ptr [rsi + 0x66]; 
0x00000000001400e3: fnstcw word ptr [rdi - 3]; jmp qword ptr [rsi + 0xf]; 
0x000000000006b6df: fnstsw word ptr [rdi]; adc al, byte ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x0000000000133193: fstp dword ptr [rax + rsi*8]; jmp qword ptr [rsi + 0xf]; 
0x000000000007e0c1: fstp xword ptr [rax - 1]; jmp qword ptr [rsi + 0x2e]; 
0x000000000014d53c: fsub st(0), st(0); jle 0x14d4eb; cld; jmp qword ptr [rsi + 0x66]; 
0x00000000001390cc: fsub st(0), st(0); out dx, al; out dx, eax; std; jmp qword ptr [rsi + 0x66]; 
0x00000000000a80af: fsub st(1), st(0); imul edi, edi, -1; jmp qword ptr [rsi + 0x66]; 
0x0000000000137197: fsub st(7), st(0); jmp qword ptr [rsi + 0xf]; 
0x0000000000143e2e: fsubp st(0); mov word ptr [rdx - 3], es; jmp qword ptr [rsi + 0x66]; 
0x0000000000143d9e: fsubp st(0); sbb al, 0x43; std; jmp qword ptr [rsi + 0x66]; 
0x0000000000050ea2: fsubr st(1); pop rax; out 0xff, eax; jmp qword ptr [rsi + 0xf]; 
0x000000000012858c: fucomi st(7); dec dword ptr [rax - 0x77]; fidiv dword ptr [rcx]; test byte ptr [rcx + rcx*4 - 0x19], -0x18; fucomp st(7); jmp qword ptr [rsi + 0xf]; 
0x0000000000128599: fucomp st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000014417e: fucompi st(0); cmp al, 0x3f; std; jmp qword ptr [rsi + 0x66]; 
0x000000000010e3bf: fucompi st(0); cmp ecx, dword ptr [rcx - 9]; inc dword ptr [rbx - 0x7af00008]; cmp ch, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000014cfd9: fucompi st(0); sub dword ptr [rax + rdi*8 - 1], 0xdae8c7eb; mov al, 0xfc; jmp qword ptr [rsi + 0x2e]; 
0x000000000006b1ba: idiv bh; dec dword ptr [rax + 0x63]; add al, 0x86; add rax, rdi; jmp rax; 
0x000000000006b15f: idiv bh; dec dword ptr [rax + 0x63]; add al, 0x87; add rax, rsi; jmp rax; 
0x00000000000545e2: idiv bh; inc dword ptr [rax - 0x14343]; jmp qword ptr [rdi + 0xf]; 
0x000000000005460b: idiv bh; inc edi; test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x0000000000068d03: idiv bh; inc esi; test edi, edi; idiv bh; jmp qword ptr [rax]; 
0x0000000000068c76: idiv bh; jmp qword ptr [rax]; 
0x0000000000060753: idiv bh; jmp qword ptr [rsi + 0x2e]; 
0x00000000000e6f88: idiv bh; jmp qword ptr [rsi + 0x41]; 
0x000000000008d131: idiv bh; jmp qword ptr [rsi + 0x66]; 
0x0000000000056367: idiv bh; jmp qword ptr [rsi + 0xf]; 
0x00000000000449cb: idiv bh; jmp qword ptr [rsi - 0x70]; 
0x000000000008d146: idiv dil; jmp qword ptr [rsi + 0xf]; 
0x000000000013892f: idiv ebp; jmp qword ptr [rsi + 0x66]; 
0x000000000006b09a: idiv edi; dec dword ptr [rax + 0x63]; add al, 0x87; add rax, rsi; jmp rax; 
0x000000000005acbe: idiv edi; jmp qword ptr [rax]; 
0x000000000010b63b: idiv edi; jmp qword ptr [rdi + 0x6d]; 
0x00000000000dbfd3: idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000005508a: idiv edi; jmp qword ptr [rsi + 0x44]; 
0x00000000000c1f8e: idiv edi; jmp qword ptr [rsi + 0x66]; 
0x000000000002e19f: idiv edi; jmp qword ptr [rsi + 0xf]; 
0x00000000000612db: idiv edi; jmp qword ptr [rsi - 0x70]; 
0x000000000005c0a6: idiv edi; jmp qword ptr [rsi - 0x77]; 
0x000000000006a317: idiv rdi; jmp qword ptr [rsi - 0x77]; 
0x00000000000d6bd6: imul byte ptr [rdx - 4]; jmp qword ptr [rsi + 0xf]; 
0x000000000009b834: imul cl; cmpsb byte ptr [rsi], byte ptr [rdi]; stosb byte ptr [rdi], al; clc; jmp qword ptr [rsi + 0xf]; 
0x000000000008d164: imul cl; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x000000000007dbc1: imul eax, dword ptr [rax + rax - 0x1ba1700], -1; jmp qword ptr [rsi + 0xf]; 
0x0000000000049be7: imul eax, dword ptr [rdx], 0xfffd50e9; jmp qword ptr [rsi - 0x70]; 
0x0000000000049af7: imul eax, dword ptr [rdx], 0xfffe40e9; jmp qword ptr [rsi - 0x70]; 
0x0000000000081f01: imul ebp, dword ptr [rdi], -5; jmp qword ptr [rsi + 0x66]; 
0x00000000000f73f1: imul ebp, edi, -0xe; jmp qword ptr [rsi + 0x2e]; 
0x000000000017a0e9: imul ebx, dword ptr [rcx - 0x116fffb], 0x77; clc; jmp qword ptr [rsi + 0xf]; 
0x00000000000af7f1: imul ebx, dword ptr [rsi + rcx], 0; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000009ef9f: imul ebx, dword ptr [rsi], 0xd289000f; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x00000000000a4383: imul ecx, ebx, 0x6349000e; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000016042a: imul edi, ebp, -1; jmp qword ptr [rsi - 0x70]; 
0x0000000000115152: imul edi, ebx, -1; jmp qword ptr [rsi + 0x2e]; 
0x000000000016a981: imul edi, edi, -1; jmp qword ptr [rdx - 0x1f]; 
0x000000000009b6c2: imul edi, edi, -1; jmp qword ptr [rsi + 0x2e]; 
0x00000000000a80b1: imul edi, edi, -1; jmp qword ptr [rsi + 0x66]; 
0x00000000000278a6: imul edi, edi, -1; jmp qword ptr [rsi + 0xf]; 
0x00000000000f3952: imul edi, esp, -1; jmp qword ptr [rsi + 0x2e]; 
0x00000000000c6dce: imul edi, esp, -1; jmp qword ptr [rsi + 0xf]; 
0x0000000000133701: imul edx, dword ptr [rdi], -0x10; jmp qword ptr [rsi + 0x2e]; 
0x00000000000ad081: imul esi, esi, -1; jmp qword ptr [rsi + 0xf]; 
0x0000000000037b2d: imul esp, dword ptr [rsi], 0x15; add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000014e951: imul esp, ebx, -1; jmp qword ptr [rsi + 0x2e]; 
0x00000000000f3f38: in al, 0xf5; or dword ptr [rax], eax; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000139c3f: in al, 0xfd; jmp qword ptr [rsi + 0x66]; 
0x0000000000129c9f: in al, 0xfe; jmp qword ptr [rsi + 0x66]; 
0x0000000000046977: in al, 0xfe; jmp qword ptr [rsi + 0xf]; 
0x000000000005e1a3: in al, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x000000000005e707: in al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000027eeb: in al, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000146e44: in al, dx; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax]; 
0x0000000000149421: in al, dx; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000077b12: in al, dx; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000100a71: in eax, 0x63; bnd jmp qword ptr [rsi + 0x2e]; 
0x00000000000c68a0: in eax, 0xf6; jmp qword ptr [rsi + 0x2e]; 
0x000000000006c274: in eax, 0xff; inc edi; and al, 0x38; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x0000000000050d0c: in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000006c39b: in eax, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000009dbbb: in eax, dx; add ecx, ebp; sar ebp, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000006c1e6: in eax, dx; jmp rax; 
0x000000000005dd92: in eax, dx; mov r14d, 1; jmp rax; 
0x000000000006b730: in eax, dx; movzx edx, byte ptr [rax + rdx]; lea rax, [rip + 0x124004]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000009f03f: in eax, dx; sbb eax, 0xd789000f; movsxd rdi, dword ptr [r8 + rdi*4]; add rdi, r8; jmp rdi; 
0x00000000000545e4: inc dword ptr [rax - 0x14343]; jmp qword ptr [rdi + 0xf]; 
0x0000000000054cbc: inc dword ptr [rax - 0x14343]; jmp qword ptr [rdi - 0x75]; 
0x00000000000535aa: inc dword ptr [rax - 0x80]; jmp qword ptr [rbp + 0xf]; 
0x000000000005b50c: inc dword ptr [rax - 0x8a743]; jmp qword ptr [rax]; 
0x000000000005f305: inc dword ptr [rax]; adc eax, dword ptr [rax]; movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x00000000000fd5bc: inc dword ptr [rbx + 0xf66fee2]; outsb dx, byte ptr [rsi]; ror byte ptr [rbx - 0x1e7ef7b9], 0xb4; jg 0xfd5cb; jmp qword ptr [rsi + 0xf]; 
0x000000000010e3c4: inc dword ptr [rbx - 0x7af00008]; cmp ch, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000054ccb: inc dword ptr [rbx - 0x9b43]; jmp qword ptr [rsi + 0xf]; 
0x000000000014767f: inc dword ptr [rcx + 0x5d]; xor eax, eax; pop r14; jmp rcx; 
0x000000000016da1a: inc dword ptr [rcx - 0xff3e]; jmp qword ptr [rdx - 0x1f]; 
0x000000000005b689: inc dword ptr [rcx]; add byte ptr [rax], al; add byte ptr [rbx - 0x7a39fe20], al; pop rax; idiv edi; jmp qword ptr [rax]; 
0x000000000005deb6: inc edi; and al, 0x38; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x000000000005460d: inc edi; test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x0000000000068d05: inc esi; test edi, edi; idiv bh; jmp qword ptr [rax]; 
0x0000000000040780: insb byte ptr [rdi], dx; fdiv st(7), st(0); jmp qword ptr [rsi + 0x2e]; 
0x000000000004fb13: insb byte ptr [rdi], dx; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x000000000017aa18: insb byte ptr [rdi], dx; or al, 6; add bl, ch; mov ecx, 0xfb4e6de8; jmp qword ptr [rsi + 0x2e]; 
0x000000000014e850: insb byte ptr [rdi], dx; cwde; cld; jmp qword ptr [rsi + 0x2e]; 
0x00000000000ff5d7: insd dword ptr [rdi], dx; bnd jmp qword ptr [rsi + 0xf]; 
0x000000000009a082: insd dword ptr [rdi], dx; str word ptr [rax + 0x63]; add al, 0x82; add rax, rdx; jmp rax; 
0x000000000009412f: insd dword ptr [rdi], dx; xor bh, bh; jmp qword ptr [rsi + 0xf]; 
0x000000000014cf57: insd dword ptr [rdi], dx; clc; jmp qword ptr [rsi + 0xf]; 
0x000000000017aa1f: insd dword ptr [rdi], dx; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000003598f: int 0x45; adc eax, 0x4634800; xchg ecx, eax; add rax, rcx; jmp rax; 
0x00000000000aed72: int 0x4c; lea ebx, [rip + 0xe2656]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac822: int 0x4c; lea ebx, [rip + 0xe4a5e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44c2: int 0x4c; lea ebx, [rip + 0xecaa6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000005989f: int 0xb5; std; jmp qword ptr [rsi + 0x66]; 
0x0000000000069993: int 0xc6; test edi, edi; idiv bh; jmp qword ptr [rax]; 
0x00000000000f42c3: int 0xf2; or dword ptr [rax], eax; mov r15d, ecx; movsxd rax, dword ptr [rdx + r15*4]; add rax, rdx; jmp rax; 
0x00000000000d9335: int 0xf4; jmp qword ptr [rsi + 0xf]; 
0x00000000000ca5c7: int 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000007668e: int 0xff; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000118020: ja 0x118042; mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000013c253: ja 0x13c2b7; lea rcx, [rip + 0x581e8]; mov edx, eax; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000013f8a7: ja 0x13f8c0; lea rcx, [rip + 0x55bd0]; mov esi, esi; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x0000000000142267: ja 0x142280; lea rcx, [rip + 0x535d4]; mov esi, esi; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000017a0ef: ja 0x17a0e9; jmp qword ptr [rsi + 0xf]; 
0x00000000000383a0: ja 0x2639a; lea rsi, [rip + 0x15218b]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000383d5: ja 0x2639a; lea rsi, [rip + 0x1521da]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000383fa: ja 0x2639a; lea rsi, [rip + 0x152239]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038039: ja 0x2639a; lea rsi, [rip + 0x1522e2]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000379da: ja 0x2639a; lea rsi, [rip + 0x152629]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b24: ja 0x2639a; lea rsi, [rip + 0x15266b]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b60: ja 0x2639a; lea rsi, [rip + 0x1526b3]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037456: ja 0x2639a; lea rsi, [rip + 0x152b29]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000003315b: ja 0x33377; movsxd rcx, dword ptr [rsi + rdi*4]; add rcx, rsi; jmp rcx; 
0x000000000003598a: ja 0x359b3; lea rcx, [rip + 0x1545cd]; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000003be70: ja 0x3be92; mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000003bed0: ja 0x3bef2; mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000004179e: ja 0x42712; movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000004eda4: ja 0x4eda3; jmp qword ptr [rsi + 0xf]; 
0x00000000000581b3: ja 0x581c8; lea rcx, [rip + 0x13672c]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000005a2c1: ja 0x5a700; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x00000000000681f1: ja 0x68650; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x000000000006d5ad: ja 0x6d5d5; adc al, byte ptr [rax]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x000000000006d1e7: ja 0x6d678; lea rsi, [rip + 0x122828]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000006d5a4: ja 0x6dd58; lea rcx, [rip + 0x122677]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x0000000000074b55: ja 0x74b88; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000074bfe: ja 0x74c26; lea rcx, [rip + 0x11b859]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000074c58: ja 0x74cd0; lea rcx, [rip + 0x11b8bb]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000075228: ja 0x75238; movsxd rdx, dword ptr [rcx + r10*4]; add rdx, rcx; jmp rdx; 
0x00000000000752bb: ja 0x752dc; lea rsi, [rip + 0x11b3e0]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x0000000000081b34: ja 0x81b60; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000008c7cb: ja 0x8c840; lea rdx, [rip + 0x104338]; lea r15, [rdi + 0x10]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000008d18e: ja 0x8d1d8; lea rdx, [rip + 0x103a85]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000009a07c: ja 0x9a0e0; lea rdx, [rip + 0xf6d3b]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000009eec5: ja 0x9eee3; lea r9, [rip + 0xf1f1a]; mov edi, ecx; movsxd rdi, dword ptr [r9 + rdi*4]; add rdi, r9; jmp rdi; 
0x000000000009ef9a: ja 0x9efb8; lea rdi, [rip + 0xf1e69]; mov edx, edx; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x000000000009f03a: ja 0x9f053; lea r8, [rip + 0xf1ded]; mov edi, edx; movsxd rdi, dword ptr [r8 + rdi*4]; add rdi, r8; jmp rdi; 
0x00000000000a9948: ja 0xa9958; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9974: ja 0xa9984; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a99a9: ja 0xa99b9; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000c8734: ja 0xc783d; lea rdx, [rip + 0xc914b]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000ca7b0: ja 0xca7d0; lea rsi, [rip + 0xc7347]; movzx edx, cl; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x00000000000ca785: ja 0xca7d3; lea rdi, [rip + 0xc7186]; movzx edx, cl; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x00000000000ccad6: ja 0xccb2b; lea rdx, [rip + 0xc520d]; mov eax, ecx; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000d67c0: ja 0xd6720; lea rdx, [rip + 0xbbadf]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d6478: ja 0xd6720; lea rdx, [rip + 0xbbd6f]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d68bb: ja 0xd68ee; lea rdx, [rip + 0xbbb14]; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000d9aa5: ja 0xd9ad0; lea rdi, [rip + 0xb89fe]; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000db6e3: ja 0xdb708; lea rsi, [rip + 0xb6f30]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000df24f: ja 0xdf2a0; lea rdi, [rip + 0xb34c8]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000e0023: ja 0xe0088; lea rdx, [rip + 0xb2714]; movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x00000000000e0118: ja 0xe0088; lea rdx, [rip + 0xb284f]; movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x00000000000ea969: ja 0xea980; movzx ecx, byte ptr [r15 + 0x30]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000ec9ad: ja 0xec9c4; lea rdx, [rip + 0xa63aa]; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000f3c7d: ja 0xf3c90; movzx edx, dl; movsxd rdx, dword ptr [r15 + rdx*4]; add rdx, r15; jmp rdx; 
0x00000000000f3f33: ja 0xf3f50; lea rcx, [rip + 0x9f5e4]; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x00000000000f42be: ja 0xf42d3; lea rdx, [rip + 0x9f2cd]; mov r15d, ecx; movsxd rax, dword ptr [rdx + r15*4]; add rax, rdx; jmp rax; 
0x00000000000f5075: ja 0xf5090; movzx eax, al; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x00000000000f6d72: ja 0xf6df0; mov eax, dword ptr [rcx]; movsxd rax, dword ptr [r13 + rax*4]; add rax, r13; jmp rax; 
0x000000000012ca9c: jae 0x12caa4; add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000082d3a: jae 0x82d50; mov rax, qword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000000832c6: jae 0x832d8; mov rax, qword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000000834d8: jae 0x834f0; mov rax, qword ptr [rbx + 0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000000008c7cc: jae 0x8c816; lea edx, [rip + 0x104338]; lea r15, [rdi + 0x10]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000ca7b6: jae 0xca7c4; add byte ptr [rdi], cl; mov dh, 0xd1; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x00000000001085fa: jb 0x1085c4; bnd jmp qword ptr [rsi - 0x70]; 
0x0000000000139f4a: jb 0x139f2d; std; jmp qword ptr [rsi - 0x70]; 
0x0000000000140e11: jb 0x140e10; jmp qword ptr [rsi + 0x66]; 
0x000000000016e68a: jb 0x16e68c; add byte ptr [rax], al; shl ecx, 6; add rcx, r9; jmp rcx; 
0x000000000007b71a: jb 0x7b6c7; cli; jmp qword ptr [rsi + 0x49]; 
0x0000000000088160: jb 0x88161; jmp qword ptr [rsi + 0x66]; 
0x00000000000881c2: jb 0x881c3; jmp qword ptr [rsi + 0x66]; 
0x000000000008b2fa: jb 0x8b297; cli; jmp qword ptr [rsi - 0x70]; 
0x00000000000a5193: jb 0xa4490; lea r11, [rip + 0xebdd0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4528: jb 0xa4490; lea r11, [rip + 0xeca3b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a450e: jb 0xa4490; lea r11, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44f1: jb 0xa4490; lea r11, [rip + 0xeca76]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44c1: jb 0xa4490; lea r11, [rip + 0xecaa6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac888: jb 0xac7f0; lea r11, [rip + 0xe49f3]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac86e: jb 0xac7f0; lea r11, [rip + 0xe4a11]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac851: jb 0xac7f0; lea r11, [rip + 0xe4a2e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac821: jb 0xac7f0; lea r11, [rip + 0xe4a5e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af8d3: jb 0xaed40; lea r11, [rip + 0xe1af0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedd8: jb 0xaed40; lea r11, [rip + 0xe25eb]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedbe: jb 0xaed40; lea r11, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aeda1: jb 0xaed40; lea r11, [rip + 0xe2626]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed71: jb 0xaed40; lea r11, [rip + 0xe2656]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000bd86a: jb 0xbd7f4; cld; jmp qword ptr [rsi - 0x70]; 
0x0000000000100a6a: jbe 0x100a6d; add byte ptr [rax - 0x77], cl; vpmulhw xmm4, xmm2, xmmword ptr [rbx - 0xe]; jmp qword ptr [rsi + 0x2e]; 
0x000000000012c7a1: jbe 0x12c7a9; add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000074c59: jbe 0x74ca3; lea ecx, [rip + 0x11b8bb]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000013a719: je 0x13a730; mov edx, dword ptr [rax + 0x5c]; lea rsi, [rax + 0x48]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x000000000014f6e1: je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x000000000014f732: je 0x14f750; mov rax, qword ptr [rip + 0x8275d]; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000016e612: je 0x16e62a; jmp qword ptr [rsi - 0x77]; 
0x00000000000762f7: je 0x76302; mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x00000000000763b7: je 0x763c8; mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x0000000000082d62: je 0x82d88; or al, 0x48; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000084be1: je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x0000000000084c11: je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x0000000000084c61: je 0x84c70; jmp qword ptr [rax + 8]; 
0x000000000008556f: je 0x855b9; add esp, 0x38; pop rbx; pop rbp; jmp rax; 
0x000000000008590f: je 0x85920; mov rdx, qword ptr [rdi + 8]; mov rax, qword ptr [rdi]; mov rdi, rdx; jmp rax; 
0x0000000000085a05: je 0x85a18; mov rdx, qword ptr [rdi + 8]; mov rax, qword ptr [rdi]; mov rdi, rdx; jmp rax; 
0x000000000009dbb6: je 0x9dbdc; sub byte ptr [rax - 0x7d], cl; in eax, dx; add ecx, ebp; sar ebp, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000000db0e0: je 0xdb0ed; add byte ptr [rax + 0x63], cl; add al, 0xaa; add rax, rdx; jmp rax; 
0x0000000000118024: jg 0x11804e; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000013db3d: jg 0x13dae4; std; jmp qword ptr [rsi + 0x66]; 
0x00000000001400e4: jg 0x1400e3; jmp qword ptr [rsi + 0xf]; 
0x00000000001403c2: jg 0x140404; mov rcx, rsi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x0000000000145742: jg 0x145784; mov rcx, rsi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x0000000000145de2: jg 0x145e2c; mov rcx, rsi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x0000000000164b5b: jg 0x164bdc; jmp qword ptr [rdx - 0x1f]; 
0x0000000000165025: jg 0x1650a6; jmp qword ptr [rdx - 0x1f]; 
0x000000000016675b: jg 0x1667dc; jmp qword ptr [rdx - 0x1f]; 
0x000000000016756b: jg 0x1675ec; jmp qword ptr [rdx - 0x1f]; 
0x0000000000168a25: jg 0x168aa6; jmp qword ptr [rdx - 0x1f]; 
0x00000000001698a5: jg 0x169926; jmp qword ptr [rdx - 0x1f]; 
0x000000000003be74: jg 0x3be9e; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000003bed4: jg 0x3befe; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000006b03d: jg 0x6b087; adc al, byte ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x0000000000082f60: jg 0x82f4a; cli; xor edi, edx; jmp qword ptr [rsi + 0xf]; 
0x000000000008c7d6: jg 0x8c7e8; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000a5074: jg 0xa507d; add rdi, 0x10; lea r11, [rip + 0xebf7f]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a5093: jg 0xa509c; add rdi, 0x10; lea r11, [rip + 0xebf60]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7d3: jg 0xaf7dc; add rdi, 0x10; lea r11, [rip + 0xe1c80]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000beeb4: jg 0xbeeac; jmp qword ptr [rsi + 0xf]; 
0x00000000000fb9dd: jg 0xfb988; bnd jmp qword ptr [rsi - 0x7d]; 
0x00000000000fd5ca: jg 0xfd5cb; jmp qword ptr [rsi + 0xf]; 
0x000000000014513f: jge 0x145170; std; jmp qword ptr [rsi + 0x66]; 
0x00000000000de606: jge 0xde5fc; dec dword ptr [rax - 0x77]; fistp word ptr [rbx - 0x17]; jge 0xde605; jmp qword ptr [rsi + 0x66]; 
0x00000000000de60f: jge 0xde605; jmp qword ptr [rsi + 0x66]; 
0x000000000005a2bc: jl 0x5a300; cmp ecx, 7; ja 0x5a700; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x00000000000681ec: jl 0x68230; cmp ecx, 7; ja 0x68650; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x000000000007f051: jl 0x7f04d; jmp qword ptr [rsi + 0x2e]; 
0x0000000000088f29: jl 0x88f4f; adc al, ch; pop rdi; sti; jmp qword ptr [rsi + 0xf]; 
0x00000000000f6d73: jl 0xf6d00; add dword ptr [rcx + 0x63], ecx; test dword ptr [rax], r8d; add rax, r13; jmp rax; 
0x000000000013021b: jle 0x13021b; jmp qword ptr [rsi - 0x70]; 
0x000000000013843e: jle 0x13843c; std; jmp qword ptr [rsi + 0x66]; 
0x0000000000139c3e: jle 0x139c24; std; jmp qword ptr [rsi + 0x66]; 
0x0000000000146922: jle 0x146923; jmp qword ptr [rsi + 0x66]; 
0x000000000014d53e: jle 0x14d4eb; cld; jmp qword ptr [rsi + 0x66]; 
0x0000000000074587: jle 0x74587; jmp qword ptr [rsi + 0xf]; 
0x000000000007ee1f: jle 0x7ee1b; jmp qword ptr [rsi + 0x2e]; 
0x00000000000f42ee: jle 0xf42fb; hlt; jmp qword ptr [rsi + 0xf]; 
0x000000000012c8b5: jne 0x12c7e6; movsxd rax, dword ptr [rip + 0x6754e]; lea rsi, [rip + 0x67547]; add rax, rsi; jmp rax; 
0x000000000012c8bf: jne 0x12c8c7; add byte ptr [rax - 0x73], cl; xor eax, 0x67547; add rax, rsi; jmp rax; 
0x000000000012c91f: jne 0x12c927; add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000134ce5: jne 0x134cd0; movzx eax, byte ptr [rdx]; movsxd rax, dword ptr [r14 + rax*4]; add rax, r14; jmp rax; 
0x0000000000146e43: jne 0x146e31; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax]; 
0x0000000000146eb8: jne 0x146efa; mov rax, qword ptr [rdi + 8]; mov rax, qword ptr [rax + 8]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000014f594: jne 0x14f6c7; mov rax, qword ptr [rbx + 0x58]; add rsp, 0x40; pop rbx; jmp rax; 
0x00000000000851e3: jne 0x85236; mov rax, qword ptr [rax + 0x38]; add rsp, 0x38; jmp rax; 
0x000000000008537d: jne 0x853d8; add rsp, 0x30; pop rbx; jmp rax; 
0x00000000000854bc: jne 0x8550b; add rsp, 0x30; pop rbx; jmp rax; 
0x000000000008556e: jne 0x855e4; add rsp, 0x38; pop rbx; pop rbp; jmp rax; 
0x000000000008564e: jne 0x856c9; add rsp, 0x38; pop rbx; pop rbp; jmp rax; 
0x00000000000a4573: jne 0xa44e0; add rsi, rcx; lea r11, [rip + 0xec9ed]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4593: jne 0xa4504; add rsi, rcx; lea r11, [rip + 0xec9cd]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a45bf: jne 0xa4521; lea r11, [rip + 0xec9a4]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8d3: jne 0xac840; add rsi, rcx; lea r11, [rip + 0xe49a5]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8f3: jne 0xac864; add rsi, rcx; lea r11, [rip + 0xe4985]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac91f: jne 0xac881; lea r11, [rip + 0xe495c]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee23: jne 0xaed90; add rsi, rcx; lea r11, [rip + 0xe259d]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee43: jne 0xaedb4; add rsi, rcx; lea r11, [rip + 0xe257d]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000882db: jno 0x882dc; jmp qword ptr [rsi - 0x70]; 
0x000000000008dc93: jno 0x8dc8f; jmp qword ptr [rsi + 0x2e]; 
0x00000000000bdce7: jno 0xbdce0; jmp qword ptr [rsi + 0xf]; 
0x00000000000bdd5f: jno 0xbdd58; jmp qword ptr [rsi + 0x2e]; 
0x00000000000ca78b: jno 0xca799; add byte ptr [rdi], cl; mov dh, 0xd1; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x000000000014fe26: jnp 0x14fe30; mov rax, qword ptr [rbx]; add rsp, 8; pop rbx; pop rbp; jmp rax; 
0x000000000009ea31: jnp 0x9ea8e; std; jmp qword ptr [rsi + 0x2e]; 
0x00000000000d67f1: jnp 0xd67d9; cmc; jmp qword ptr [rsi + 0x2e]; 
0x000000000008564f: jns 0x85699; add esp, 0x38; pop rbx; pop rbp; jmp rax; 
0x000000000013a720: jo 0x13a76a; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x000000000013f297: jo 0x13f287; jmp qword ptr [rsi + 0xf]; 
0x0000000000141074: jo 0x141073; jmp qword ptr [rsi + 0xf]; 
0x0000000000141508: jo 0x14154a; mov rax, qword ptr [rdi + 8]; mov edx, dword ptr [rsi + 0x1c8]; add rsi, 0x38; jmp qword ptr [rax + 0x18]; 
0x000000000004f0b1: jo 0x4f0b3; add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x70], cl; jmp qword ptr [rsi + 0xf]; 
0x0000000000088361: jo 0x88362; jmp qword ptr [rsi + 0x66]; 
0x0000000000140620: jp 0x14061f; jmp qword ptr [rsi + 0x66]; 
0x0000000000148442: jp 0x148440; cld; jmp qword ptr [rsi + 0x2e]; 
0x00000000000ca784: jp 0xca7fd; lea rdi, [rip + 0xc7186]; movzx edx, cl; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x00000000000d8651: jp 0xd865f; add byte ptr [rbx - 0x4e74b], cl; jmp qword ptr [rsi - 0x77]; 
0x00000000000466e3: js 0x466e3; std; jmp qword ptr [rsi + 0xf]; 
0x000000000007858e: js 0x78573; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000007e0c2: js 0x7e0c3; jmp qword ptr [rsi + 0x2e]; 
0x00000000000a9876: js 0xa9886; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a98ce: js 0xa98de; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a98eb: js 0xa98fb; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9910: js 0xa9920; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9932: js 0xa9942; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000016e6e0: lea eax, [rcx + rcx*2]; lea rcx, [rdi + rdx - 0x60]; and rdi, 0xfffffffffffffff0; lea rdx, [rip + 0x40d]; add rdx, r8; jmp rdx; 
0x000000000006b7e4: lea eax, [rip + 0x123f56]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b6dd: lea eax, [rip + 0x123fdd]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b736: lea eax, [rip + 0x124004]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b78c: lea eax, [rip + 0x12402e]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b683: lea eax, [rip + 0x1240b7]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b03b: lea eax, [rip + 0x12487f]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006af99: lea eax, [rip + 0x124921]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006af12: lea eax, [rip + 0x124928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006aad8: lea eax, [rip + 0x124c62]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005dde7: lea eax, [rip + 0x131133]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d591: lea eax, [rip + 0x131909]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d5f2: lea eax, [rip + 0x131928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d657: lea eax, [rip + 0x131943]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d6ce: lea eax, [rip + 0x13194c]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d527: lea eax, [rip + 0x1319f3]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d4c0: lea eax, [rip + 0x131a5a]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d420: lea eax, [rip + 0x131afa]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d0d0: lea eax, [rip + 0x131fca]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000009f03d: lea eax, [rip + 0xf1ded]; mov edi, edx; movsxd rdi, dword ptr [r8 + rdi*4]; add rdi, r8; jmp rdi; 
0x000000000005deb1: lea eax, [rip - 0x18fa]; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000006c271: lea eax, [rip - 0x1a4a]; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000005f1dd: lea ebx, [rax + 0x48fffff9]; add eax, esi; jmp rax; 
0x00000000000af8da: lea ebx, [rip + 0xe1af0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7ef: lea ebx, [rip + 0xe1c6b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7da: lea ebx, [rip + 0xe1c80]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7bb: lea ebx, [rip + 0xe1c9f]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee76: lea ebx, [rip + 0xe2554]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee4d: lea ebx, [rip + 0xe257d]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee2d: lea ebx, [rip + 0xe259d]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee04: lea ebx, [rip + 0xe25c6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aeddf: lea ebx, [rip + 0xe25eb]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedc1: lea ebx, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed41: lea ebx, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aeda4: lea ebx, [rip + 0xe2626]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed74: lea ebx, [rip + 0xe2656]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec6f: lea ebx, [rip + 0xe26db]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec41: lea ebx, [rip + 0xe2709]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec18: lea ebx, [rip + 0xe2732]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ad0aa: lea ebx, [rip + 0xe41d8]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac926: lea ebx, [rip + 0xe495c]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8fd: lea ebx, [rip + 0xe4985]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8dd: lea ebx, [rip + 0xe49a5]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8b4: lea ebx, [rip + 0xe49ce]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac88f: lea ebx, [rip + 0xe49f3]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac871: lea ebx, [rip + 0xe4a11]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7f1: lea ebx, [rip + 0xe4a11]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7d6: lea ebx, [rip + 0xe4a2c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac854: lea ebx, [rip + 0xe4a2e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac824: lea ebx, [rip + 0xe4a5e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7a1: lea ebx, [rip + 0xe4a61]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac775: lea ebx, [rip + 0xe4a8d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac75f: lea ebx, [rip + 0xe4aa3]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac73d: lea ebx, [rip + 0xe4ac5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac718: lea ebx, [rip + 0xe4aea]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac6fb: lea ebx, [rip + 0xe4b07]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac694: lea ebx, [rip + 0xe4b6e]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a99a6: lea ebx, [rip + 0xe779c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9971: lea ebx, [rip + 0xe77d1]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9945: lea ebx, [rip + 0xe77fd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a992f: lea ebx, [rip + 0xe7813]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a990d: lea ebx, [rip + 0xe7835]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a98e8: lea ebx, [rip + 0xe785a]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a98cb: lea ebx, [rip + 0xe7877]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9873: lea ebx, [rip + 0xe78cf]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7776: lea ebx, [rip + 0xe990c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7741: lea ebx, [rip + 0xe9941]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7715: lea ebx, [rip + 0xe996d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76ff: lea ebx, [rip + 0xe9983]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76dd: lea ebx, [rip + 0xe99a5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76b8: lea ebx, [rip + 0xe99ca]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a769b: lea ebx, [rip + 0xe99e7]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7643: lea ebx, [rip + 0xe9a3f]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a519a: lea ebx, [rip + 0xebdd0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a50af: lea ebx, [rip + 0xebf4b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a509a: lea ebx, [rip + 0xebf60]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a507b: lea ebx, [rip + 0xebf7f]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a45c6: lea ebx, [rip + 0xec9a4]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a459d: lea ebx, [rip + 0xec9cd]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a457d: lea ebx, [rip + 0xec9ed]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4554: lea ebx, [rip + 0xeca16]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a452f: lea ebx, [rip + 0xeca3b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4511: lea ebx, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4491: lea ebx, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44f4: lea ebx, [rip + 0xeca76]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44c4: lea ebx, [rip + 0xecaa6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a43af: lea ebx, [rip + 0xecb3b]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4381: lea ebx, [rip + 0xecb69]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4358: lea ebx, [rip + 0xecb92]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3cd6: lea ebx, [rip + 0xed188]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3ca1: lea ebx, [rip + 0xed1bd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c75: lea ebx, [rip + 0xed1e9]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c5f: lea ebx, [rip + 0xed1ff]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c3d: lea ebx, [rip + 0xed221]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c18: lea ebx, [rip + 0xed246]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3bfb: lea ebx, [rip + 0xed263]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3ba3: lea ebx, [rip + 0xed2bb]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3bae: lea ecx, [rbx + rcx]; jmp rcx; 
0x000000000016e6e4: lea ecx, [rdi + rdx - 0x60]; and rdi, 0xfffffffffffffff0; lea rdx, [rip + 0x40d]; add rdx, r8; jmp rdx; 
0x00000000000ac777: lea ecx, [rdx + 0xe]; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000075318: lea ecx, [rip + 0x11b442]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000074c01: lea ecx, [rip + 0x11b859]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000074c5b: lea ecx, [rip + 0x11b8bb]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000006d5ab: lea ecx, [rip + 0x122677]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x000000000005f303: lea ecx, [rip + 0x1300ff]; movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x00000000000581b6: lea ecx, [rip + 0x13672c]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000057fd0: lea ecx, [rip + 0x1368aa]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000003598d: lea ecx, [rip + 0x1545cd]; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000014226a: lea ecx, [rip + 0x535d4]; mov esi, esi; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000013f8aa: lea ecx, [rip + 0x55bd0]; mov esi, esi; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000013c256: lea ecx, [rip + 0x581e8]; mov edx, eax; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000016e688: lea ecx, [rip + 0x72]; shl ecx, 6; add rcx, r9; jmp rcx; 
0x00000000000f3f36: lea ecx, [rip + 0x9f5e4]; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000016e6be: lea ecx, [rip + 0xa3c]; and ecx, 0xf; shl ecx, 6; add rcx, r9; jmp rcx; 
0x00000000000e8270: lea ecx, [rip + 0xaa81e]; mov r10d, r13d; movsxd rax, dword ptr [rcx + r10*4]; add rax, rcx; jmp rax; 
0x000000000009eec8: lea ecx, [rip + 0xf1f1a]; mov edi, ecx; movsxd rdi, dword ptr [r9 + rdi*4]; add rdi, r9; jmp rdi; 
0x000000000008c7d5: lea edi, [rdi + 0x10]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000014462f: lea edi, [rdx]; std; jmp qword ptr [rsi + 0x66]; 
0x000000000006b151: lea edi, [rip + 0x1247e9]; movzx eax, byte ptr [rsi + rax]; lea rsi, [rip - 0x935]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005a870: lea edi, [rip + 0x1345aa]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000039730: lea edi, [rip + 0x150faa]; mov r8d, r8d; movsxd rsi, dword ptr [rdi + r8*4]; add rsi, rdi; jmp rsi; 
0x00000000000df252: lea edi, [rip + 0xb34c8]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000d9aa8: lea edi, [rip + 0xb89fe]; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000ca788: lea edi, [rip + 0xc7186]; movzx edx, cl; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x000000000009ef9d: lea edi, [rip + 0xf1e69]; mov edx, edx; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x000000000006ac6f: lea edi, [rip - 0x448]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006af8e: lea edi, [rip - 0x767]; movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x124921]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b1b7: lea edi, [rip - 0x990]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000008d191: lea edx, [rip + 0x103a85]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000008c7ce: lea edx, [rip + 0x104338]; lea r15, [rdi + 0x10]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000850c5: lea edx, [rip + 0x10b851]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000277a5: lea edx, [rip + 0x153855]; mov eax, eax; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000016e6ed: lea edx, [rip + 0x40d]; add rdx, r8; jmp rdx; 
0x0000000000142b21: lea edx, [rip + 0x52d5d]; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000f42c1: lea edx, [rip + 0x9f2cd]; mov r15d, ecx; movsxd rax, dword ptr [rdx + r15*4]; add rax, rdx; jmp rax; 
0x00000000000ec9b0: lea edx, [rip + 0xa63aa]; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000eca02: lea edx, [rip + 0xa65b0]; mov edi, edi; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000e0026: lea edx, [rip + 0xb2714]; movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x00000000000e00fd: lea edx, [rip + 0xb2715]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000e011f: lea edx, [rip + 0xb284f]; movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x00000000000db0dd: lea edx, [rip + 0xb74b9]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d9460: lea edx, [rip + 0xb8fc6]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d67c7: lea edx, [rip + 0xbbadf]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d68be: lea edx, [rip + 0xbbb14]; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000d647f: lea edx, [rip + 0xbbd6f]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d634f: lea edx, [rip + 0xbbdc3]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d5f13: lea edx, [rip + 0xbc1ab]; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000ccad9: lea edx, [rip + 0xc520d]; mov eax, ecx; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000c873b: lea edx, [rip + 0xc914b]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000c7548: lea edx, [rip + 0xca106]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000b0a50: lea edx, [rip + 0xe0a8a]; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x000000000009a07f: lea edx, [rip + 0xf6d3b]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000687bb: lea edx, [rip - 0x3ed]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdx; jmp rax; 
0x000000000013a71f: lea esi, [rax + 0x48]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x0000000000144f2f: lea esi, [rcx]; std; jmp qword ptr [rsi + 0x66]; 
0x00000000000752be: lea esi, [rip + 0x11b3e0]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000006dd11: lea esi, [rip + 0x121fc1]; movsxd rax, dword ptr [rsi + rbx*4]; add rax, rsi; jmp rax; 
0x000000000006d1ee: lea esi, [rip + 0x122828]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000006aeb0: lea esi, [rip + 0x124a8a]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000005f8f3: lea esi, [rip + 0x12fbbf]; movzx edx, dl; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005eec4: lea esi, [rip + 0x130332]; movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000383a7: lea esi, [rip + 0x15218b]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000381fd: lea esi, [rip + 0x1521a9]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000383dc: lea esi, [rip + 0x1521da]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038232: lea esi, [rip + 0x1521f8]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038401: lea esi, [rip + 0x152239]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038257: lea esi, [rip + 0x152257]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038040: lea esi, [rip + 0x1522e2]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037aef: lea esi, [rip + 0x152623]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000379e1: lea esi, [rip + 0x152629]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b2b: lea esi, [rip + 0x15266b]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b67: lea esi, [rip + 0x1526b3]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b9c: lea esi, [rip + 0x152702]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000003745d: lea esi, [rip + 0x152b29]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000012c91c: lea esi, [rip + 0x67502]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000012c8c3: lea esi, [rip + 0x67547]; add rax, rsi; jmp rax; 
0x00000000000db6e6: lea esi, [rip + 0xb6f30]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000ca7b3: lea esi, [rip + 0xc7347]; movzx edx, cl; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x000000000005ca73: lea esi, [rip - 0x4bc]; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000006af07: lea esi, [rip - 0x6e0]; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x124928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b030: lea esi, [rip - 0x809]; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x12487f]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b097: lea esi, [rip - 0x870]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b101: lea esi, [rip - 0x8da]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b15c: lea esi, [rip - 0x935]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d1ab: lea esi, [rip - 0xbf4]; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d215: lea esi, [rip - 0xc5e]; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d283: lea esi, [rip - 0xccc]; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d2eb: lea esi, [rip - 0xd34]; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d3b3: lea esi, [rip - 0xdfc]; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x00000000000af8d9: lea r11, [rip + 0xe1af0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7ee: lea r11, [rip + 0xe1c6b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7d9: lea r11, [rip + 0xe1c80]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7ba: lea r11, [rip + 0xe1c9f]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee75: lea r11, [rip + 0xe2554]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee4c: lea r11, [rip + 0xe257d]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee2c: lea r11, [rip + 0xe259d]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee03: lea r11, [rip + 0xe25c6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedde: lea r11, [rip + 0xe25eb]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedc0: lea r11, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed40: lea r11, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aeda3: lea r11, [rip + 0xe2626]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed73: lea r11, [rip + 0xe2656]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec6e: lea r11, [rip + 0xe26db]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec40: lea r11, [rip + 0xe2709]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec17: lea r11, [rip + 0xe2732]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ad0a9: lea r11, [rip + 0xe41d8]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac925: lea r11, [rip + 0xe495c]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8fc: lea r11, [rip + 0xe4985]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8dc: lea r11, [rip + 0xe49a5]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8b3: lea r11, [rip + 0xe49ce]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac88e: lea r11, [rip + 0xe49f3]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac870: lea r11, [rip + 0xe4a11]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7f0: lea r11, [rip + 0xe4a11]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7d5: lea r11, [rip + 0xe4a2c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac853: lea r11, [rip + 0xe4a2e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac823: lea r11, [rip + 0xe4a5e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7a0: lea r11, [rip + 0xe4a61]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac774: lea r11, [rip + 0xe4a8d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac75e: lea r11, [rip + 0xe4aa3]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac73c: lea r11, [rip + 0xe4ac5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac717: lea r11, [rip + 0xe4aea]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac6fa: lea r11, [rip + 0xe4b07]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac693: lea r11, [rip + 0xe4b6e]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a99a5: lea r11, [rip + 0xe779c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9970: lea r11, [rip + 0xe77d1]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9944: lea r11, [rip + 0xe77fd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a992e: lea r11, [rip + 0xe7813]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a990c: lea r11, [rip + 0xe7835]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a98e7: lea r11, [rip + 0xe785a]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a98ca: lea r11, [rip + 0xe7877]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9872: lea r11, [rip + 0xe78cf]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7775: lea r11, [rip + 0xe990c]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7740: lea r11, [rip + 0xe9941]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7714: lea r11, [rip + 0xe996d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76fe: lea r11, [rip + 0xe9983]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76dc: lea r11, [rip + 0xe99a5]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76b7: lea r11, [rip + 0xe99ca]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a769a: lea r11, [rip + 0xe99e7]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7642: lea r11, [rip + 0xe9a3f]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a5199: lea r11, [rip + 0xebdd0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a50ae: lea r11, [rip + 0xebf4b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a5099: lea r11, [rip + 0xebf60]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a507a: lea r11, [rip + 0xebf7f]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a45c5: lea r11, [rip + 0xec9a4]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a459c: lea r11, [rip + 0xec9cd]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a457c: lea r11, [rip + 0xec9ed]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4553: lea r11, [rip + 0xeca16]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a452e: lea r11, [rip + 0xeca3b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4510: lea r11, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4490: lea r11, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44f3: lea r11, [rip + 0xeca76]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44c3: lea r11, [rip + 0xecaa6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a43ae: lea r11, [rip + 0xecb3b]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4380: lea r11, [rip + 0xecb69]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4357: lea r11, [rip + 0xecb92]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3cd5: lea r11, [rip + 0xed188]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3ca0: lea r11, [rip + 0xed1bd]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c74: lea r11, [rip + 0xed1e9]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c5e: lea r11, [rip + 0xed1ff]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c3c: lea r11, [rip + 0xed221]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c17: lea r11, [rip + 0xed246]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3bfa: lea r11, [rip + 0xed263]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3ba2: lea r11, [rip + 0xed2bb]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000008c7d4: lea r15, [rdi + 0x10]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000009f03c: lea r8, [rip + 0xf1ded]; mov edi, edx; movsxd rdi, dword ptr [r8 + rdi*4]; add rdi, r8; jmp rdi; 
0x000000000016e6df: lea r8d, [rcx + rcx*2]; lea rcx, [rdi + rdx - 0x60]; and rdi, 0xfffffffffffffff0; lea rdx, [rip + 0x40d]; add rdx, r8; jmp rdx; 
0x000000000016e687: lea r9, [rip + 0x72]; shl ecx, 6; add rcx, r9; jmp rcx; 
0x000000000016e6bd: lea r9, [rip + 0xa3c]; and ecx, 0xf; shl ecx, 6; add rcx, r9; jmp rcx; 
0x000000000009eec7: lea r9, [rip + 0xf1f1a]; mov edi, ecx; movsxd rdi, dword ptr [r9 + rdi*4]; add rdi, r9; jmp rdi; 
0x000000000006b7e3: lea rax, [rip + 0x123f56]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b6dc: lea rax, [rip + 0x123fdd]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b735: lea rax, [rip + 0x124004]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b78b: lea rax, [rip + 0x12402e]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b682: lea rax, [rip + 0x1240b7]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b03a: lea rax, [rip + 0x12487f]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006af98: lea rax, [rip + 0x124921]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006af11: lea rax, [rip + 0x124928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006aad7: lea rax, [rip + 0x124c62]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005dde6: lea rax, [rip + 0x131133]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d590: lea rax, [rip + 0x131909]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d5f1: lea rax, [rip + 0x131928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d656: lea rax, [rip + 0x131943]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d6cd: lea rax, [rip + 0x13194c]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d526: lea rax, [rip + 0x1319f3]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d4bf: lea rax, [rip + 0x131a5a]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d41f: lea rax, [rip + 0x131afa]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d0cf: lea rax, [rip + 0x131fca]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005deb0: lea rax, [rip - 0x18fa]; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000006c270: lea rax, [rip - 0x1a4a]; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x00000000000a3bad: lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000016e6e3: lea rcx, [rdi + rdx - 0x60]; and rdi, 0xfffffffffffffff0; lea rdx, [rip + 0x40d]; add rdx, r8; jmp rdx; 
0x0000000000075317: lea rcx, [rip + 0x11b442]; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000074c00: lea rcx, [rip + 0x11b859]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000074c5a: lea rcx, [rip + 0x11b8bb]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000006d5aa: lea rcx, [rip + 0x122677]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x000000000005f302: lea rcx, [rip + 0x1300ff]; movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x00000000000581b5: lea rcx, [rip + 0x13672c]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000057fcf: lea rcx, [rip + 0x1368aa]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000003598c: lea rcx, [rip + 0x1545cd]; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x0000000000142269: lea rcx, [rip + 0x535d4]; mov esi, esi; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000013f8a9: lea rcx, [rip + 0x55bd0]; mov esi, esi; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000013c255: lea rcx, [rip + 0x581e8]; mov edx, eax; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x00000000000f3f35: lea rcx, [rip + 0x9f5e4]; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x00000000000e826f: lea rcx, [rip + 0xaa81e]; mov r10d, r13d; movsxd rax, dword ptr [rcx + r10*4]; add rax, rcx; jmp rax; 
0x0000000000074bff: lea rcx, es:[rip + 0x11b859]; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000006b150: lea rdi, [rip + 0x1247e9]; movzx eax, byte ptr [rsi + rax]; lea rsi, [rip - 0x935]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005a86f: lea rdi, [rip + 0x1345aa]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000003972f: lea rdi, [rip + 0x150faa]; mov r8d, r8d; movsxd rsi, dword ptr [rdi + r8*4]; add rsi, rdi; jmp rsi; 
0x00000000000df251: lea rdi, [rip + 0xb34c8]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000d9aa7: lea rdi, [rip + 0xb89fe]; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000ca787: lea rdi, [rip + 0xc7186]; movzx edx, cl; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x000000000009ef9c: lea rdi, [rip + 0xf1e69]; mov edx, edx; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x000000000006ac6e: lea rdi, [rip - 0x448]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006af8d: lea rdi, [rip - 0x767]; movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x124921]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b1b6: lea rdi, [rip - 0x990]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000008d190: lea rdx, [rip + 0x103a85]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000008c7cd: lea rdx, [rip + 0x104338]; lea r15, [rdi + 0x10]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000850c4: lea rdx, [rip + 0x10b851]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000277a4: lea rdx, [rip + 0x153855]; mov eax, eax; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000016e6ec: lea rdx, [rip + 0x40d]; add rdx, r8; jmp rdx; 
0x0000000000142b20: lea rdx, [rip + 0x52d5d]; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000f42c0: lea rdx, [rip + 0x9f2cd]; mov r15d, ecx; movsxd rax, dword ptr [rdx + r15*4]; add rax, rdx; jmp rax; 
0x00000000000ec9af: lea rdx, [rip + 0xa63aa]; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000eca01: lea rdx, [rip + 0xa65b0]; mov edi, edi; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000e0025: lea rdx, [rip + 0xb2714]; movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x00000000000e00fc: lea rdx, [rip + 0xb2715]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000e011e: lea rdx, [rip + 0xb284f]; movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x00000000000db0dc: lea rdx, [rip + 0xb74b9]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d945f: lea rdx, [rip + 0xb8fc6]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d67c6: lea rdx, [rip + 0xbbadf]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d68bd: lea rdx, [rip + 0xbbb14]; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000d647e: lea rdx, [rip + 0xbbd6f]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d634e: lea rdx, [rip + 0xbbdc3]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000d5f12: lea rdx, [rip + 0xbc1ab]; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000ccad8: lea rdx, [rip + 0xc520d]; mov eax, ecx; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000c873a: lea rdx, [rip + 0xc914b]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000c7547: lea rdx, [rip + 0xca106]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000b0a4f: lea rdx, [rip + 0xe0a8a]; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x000000000009a07e: lea rdx, [rip + 0xf6d3b]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000687ba: lea rdx, [rip - 0x3ed]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdx; jmp rax; 
0x000000000013a71e: lea rsi, [rax + 0x48]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x00000000000752bd: lea rsi, [rip + 0x11b3e0]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000006dd10: lea rsi, [rip + 0x121fc1]; movsxd rax, dword ptr [rsi + rbx*4]; add rax, rsi; jmp rax; 
0x000000000006d1ed: lea rsi, [rip + 0x122828]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000006aeaf: lea rsi, [rip + 0x124a8a]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000005f8f2: lea rsi, [rip + 0x12fbbf]; movzx edx, dl; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005eec3: lea rsi, [rip + 0x130332]; movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000383a6: lea rsi, [rip + 0x15218b]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000381fc: lea rsi, [rip + 0x1521a9]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000383db: lea rsi, [rip + 0x1521da]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038231: lea rsi, [rip + 0x1521f8]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038400: lea rsi, [rip + 0x152239]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038256: lea rsi, [rip + 0x152257]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000003803f: lea rsi, [rip + 0x1522e2]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037aee: lea rsi, [rip + 0x152623]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000379e0: lea rsi, [rip + 0x152629]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b2a: lea rsi, [rip + 0x15266b]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b66: lea rsi, [rip + 0x1526b3]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b9b: lea rsi, [rip + 0x152702]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000003745c: lea rsi, [rip + 0x152b29]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000012c91b: lea rsi, [rip + 0x67502]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000012c8c2: lea rsi, [rip + 0x67547]; add rax, rsi; jmp rax; 
0x00000000000db6e5: lea rsi, [rip + 0xb6f30]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000ca7b2: lea rsi, [rip + 0xc7347]; movzx edx, cl; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x000000000005ca72: lea rsi, [rip - 0x4bc]; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000006af06: lea rsi, [rip - 0x6e0]; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x124928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b02f: lea rsi, [rip - 0x809]; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x12487f]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b096: lea rsi, [rip - 0x870]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b100: lea rsi, [rip - 0x8da]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b15b: lea rsi, [rip - 0x935]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d1aa: lea rsi, [rip - 0xbf4]; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d214: lea rsi, [rip - 0xc5e]; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d282: lea rsi, [rip - 0xccc]; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d2ea: lea rsi, [rip - 0xd34]; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d3b2: lea rsi, [rip - 0xdfc]; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x0000000000140e10: lodsb al, byte ptr [rsi]; jb 0x140e10; jmp qword ptr [rsi + 0x66]; 
0x0000000000148810: lodsb al, byte ptr [rsi]; clc; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000143910: lodsb al, byte ptr [rsi]; std; jmp qword ptr [rsi + 0x2e]; 
0x000000000014500f: lodsd eax, dword ptr [rsi]; xor ch, bh; jmp qword ptr [rsi + 0x66]; 
0x000000000014d3b3: lodsd eax, dword ptr [rsi]; cld; jmp qword ptr [rsi + 0x2e]; 
0x00000000000d02df: lodsd eax, dword ptr [rsi]; cld; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000139f4b: loope 0x139f4a; jmp qword ptr [rsi - 0x70]; 
0x0000000000143c8e: loope 0x143c78; sub al, 0x44; std; jmp qword ptr [rsi + 0x66]; 
0x000000000014e932: loope 0x14e933; jmp qword ptr [rsi + 0x2e]; 
0x0000000000164b58: loope 0x164b58; sub byte ptr [rdi + 0x7f], bh; jmp qword ptr [rdx - 0x1f]; 
0x0000000000165022: loope 0x165022; sub byte ptr [rdi + 0x7f], bh; jmp qword ptr [rdx - 0x1f]; 
0x0000000000166758: loope 0x166758; sub byte ptr [rdi + 0x7f], bh; jmp qword ptr [rdx - 0x1f]; 
0x0000000000167568: loope 0x167568; sub byte ptr [rdi + 0x7f], bh; jmp qword ptr [rdx - 0x1f]; 
0x0000000000168a22: loope 0x168a22; sub byte ptr [rdi + 0x7f], bh; jmp qword ptr [rdx - 0x1f]; 
0x00000000001698a2: loope 0x1698a2; sub byte ptr [rdi + 0x7f], bh; jmp qword ptr [rdx - 0x1f]; 
0x000000000016c221: loope 0x16c221; sub byte ptr [rdi + 0x4c], ch; xchg esi, eax; jmp qword ptr [rdx - 0xd]; 
0x000000000016e68f: loope 0x16e697; add rcx, r9; jmp rcx; 
0x000000000016e6c8: loope 0x16e6d0; add rcx, r9; jmp rcx; 
0x000000000016e6c5: loope 0x16e6d6; shl ecx, 6; add rcx, r9; jmp rcx; 
0x0000000000176da7: loope 0x176de7; jmp rcx; 
0x0000000000040f6f: loope 0x40f70; jmp qword ptr [rsi + 0xf]; 
0x0000000000077e4a: loope 0x77e4c; add bl, ch; mov cs, word ptr [rax - 0x77]; vpavgw xmm5, xmm2, xmm1; cli; jmp qword ptr [rsi + 0xf]; 
0x000000000007881f: loope 0x7881b; jmp qword ptr [rsi + 0x2e]; 
0x0000000000096627: loope 0x96628; jmp qword ptr [rsi + 0xf]; 
0x000000000009ae0e: loope 0x9ae0f; jmp qword ptr [rsi + 0x2e]; 
0x00000000000a3c6e: loope 0xa3c00; bsf rdx, rdx; lea r11, [rip + 0xed1e9]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a50a9: loope 0xa50f4; add eax, 0x10; lea r11, [rip + 0xebf4b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a770e: loope 0xa76a0; bsf rdx, rdx; lea r11, [rip + 0xe996d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac76e: loope 0xac700; bsf rdx, rdx; lea r11, [rip + 0xe4a8d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7e9: loope 0xaf834; add eax, 0x10; lea r11, [rip + 0xe1c6b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000f5608: loope 0xf5613; add byte ptr [rdi], cl; mov dh, 0xd2; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x00000000000fd5c8: loope 0xfd57e; jg 0xfd5cb; jmp qword ptr [rsi + 0xf]; 
0x000000000007531b: mov ah, 0x11; add byte ptr [rax + 0x63], cl; adc al, 0x91; add rdx, rcx; jmp rdx; 
0x000000000013af57: mov ah, 0xee; jmp qword ptr [rsi + 0xf]; 
0x000000000013a06e: mov ah, 0xff; jmp qword ptr [rsi + 0x66]; 
0x00000000000bd86b: mov ah, bh; jmp qword ptr [rsi - 0x70]; 
0x000000000013c98d: mov al, 0x23; add byte ptr [rax], al; pop rbp; jmp rcx; 
0x00000000000822d0: mov al, 0x4a; cli; jmp qword ptr [rsi + 0x66]; 
0x00000000000eca04: mov al, 0x65; or al, byte ptr [rax]; mov edi, edi; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x000000000012b31e: mov al, 0xef; jmp qword ptr [rsi + 0xf]; 
0x000000000014cfe3: mov al, 0xfc; jmp qword ptr [rsi + 0x2e]; 
0x000000000013d034: mov al, 0xfd; jmp qword ptr [rsi + 0xf]; 
0x000000000012c31d: mov al, 0xff; jmp qword ptr [rsi - 0x3f]; 
0x000000000007e906: mov al, byte ptr [rcx + rdx + 0x3d8d4800]; mov es, word ptr [rcx + rdx + 0x655ae800]; sti; jmp qword ptr [rsi + 0x2e]; 
0x00000000000d864e: mov bh, 0x15; xchg edx, eax; jp 0xd865f; add byte ptr [rbx - 0x4e74b], cl; jmp qword ptr [rsi - 0x77]; 
0x000000000006b685: mov bh, 0x40; adc al, byte ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x0000000000140415: mov bh, 0x84; sti; jmp qword ptr [rsi - 0x7d]; 
0x000000000005c0a3: mov bh, 0x9d; pop rsp; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x000000000006a315: mov bh, 0xb5; idiv rdi; jmp qword ptr [rsi - 0x77]; 
0x0000000000077b11: mov bh, 0xec; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000017a97f: mov bh, 0xf0; jmp qword ptr [rsi + 0xf]; 
0x000000000007e1ff: mov bh, dl; jmp qword ptr [rsi + 0x2e]; 
0x00000000000752c1: mov bl, 0x11; add byte ptr [rax + 0x63], cl; or al, 0x8e; add rcx, rsi; jmp rcx; 
0x0000000000037b69: mov bl, 0x26; adc eax, 0xc0b60f00; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000147c24: mov bl, 0xe8; xchg esi, eax; add al, 0xfd; jmp qword ptr [rsi + 0xf]; 
0x000000000012afa0: mov bl, 0xef; jmp qword ptr [rsi + 0xf]; 
0x00000000000dafa5: mov bl, 0xf4; jmp qword ptr [rsi + 0xf]; 
0x000000000013ccfb: mov bl, 0xfd; jmp qword ptr [rsi - 0x70]; 
0x000000000005c6f3: mov byte ptr [rsp + 0x34], 0x20; jmp rax; 
0x000000000005de10: mov byte ptr [rsp + 0x34], 0x20; mov dword ptr [rsp + 0x20], 1; jmp rax; 
0x000000000006a316: mov ch, 0x4c; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x0000000000068e82: mov ch, 0x58; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x000000000014cb2e: mov ch, 0xfc; jmp qword ptr [rsi + 0x2e]; 
0x00000000000598a0: mov ch, 0xfd; jmp qword ptr [rsi + 0x66]; 
0x000000000013a087: mov ch, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000122e5e: mov ch, 7; add al, ch; or ah, byte ptr [rax]; int1; jmp qword ptr [rsi + 0x2e]; 
0x000000000013f7e0: mov ch, bh; jmp qword ptr [rsi + 0x2e]; 
0x000000000013f8b5: mov cl, 0x48; add eax, ecx; jmp rax; 
0x000000000013cf54: mov cl, 0xfd; jmp qword ptr [rsi + 0xf]; 
0x00000000001336fd: mov cl, 6; add al, ch; imul edx, dword ptr [rdi], -0x10; jmp qword ptr [rsi + 0x2e]; 
0x00000000000535a4: mov cl, byte ptr [rcx - 0x14343]; inc dword ptr [rax - 0x80]; jmp qword ptr [rbp + 0xf]; 
0x000000000006aeb2: mov cl, byte ptr [rdx + 0x12]; add byte ptr [rax + 0x63], cl; add al, 0x86; add rax, rdi; jmp rax; 
0x00000000000417aa: mov cs, word ptr [rax + 1]; int1; jmp rcx; 
0x0000000000077e4e: mov cs, word ptr [rax - 0x77]; vpavgw xmm5, xmm2, xmm1; cli; jmp qword ptr [rsi + 0xf]; 
0x000000000006b7e0: mov dh, 0x14; adc byte ptr [rax - 0x73], cl; add eax, 0x123f56; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b6d9: mov dh, 0x14; adc byte ptr [rax - 0x73], cl; add eax, 0x123fdd; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b732: mov dh, 0x14; adc byte ptr [rax - 0x73], cl; add eax, 0x124004; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b788: mov dh, 0x14; adc byte ptr [rax - 0x73], cl; add eax, 0x12402e; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b67f: mov dh, 0x14; adc byte ptr [rax - 0x73], cl; add eax, 0x1240b7; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006aad4: mov dh, 0x14; adc byte ptr [rax - 0x73], cl; add eax, 0x124c62; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d653: mov dh, 0x14; add dword ptr [rax - 0x73], ecx; add eax, 0x131943; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d523: mov dh, 0x14; add dword ptr [rax - 0x73], ecx; add eax, 0x1319f3; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d41c: mov dh, 0x14; add dword ptr [rax - 0x73], ecx; add eax, 0x131afa; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x00000000000d3dd3: mov dh, 0x25; jmp qword ptr [rdi + 0x10]; 
0x000000000007f7e6: mov dh, 0x45; add cl, ch; sar dh, 0xff; jmp qword ptr [rsi - 0x70]; 
0x00000000000eaf66: mov dh, 0x4a; or byte ptr [rcx + 0x63], cl; or al, 0x89; add rcx, r9; jmp rcx; 
0x0000000000117ac6: mov dh, 0x4e; std; jmp qword ptr [rsi + 0xf]; 
0x00000000000ea96d: mov dh, 0x4f; xor byte ptr [rax + 0x63], cl; or al, 0x8e; add rcx, rsi; jmp rcx; 
0x00000000000d90b6: mov dh, 0xbd; cmc; jmp qword ptr [rsi + 0xf]; 
0x00000000000f5078: mov dh, 0xc0; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x0000000000074c08: mov dh, 0xc0; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000d9aaf: mov dh, 0xc0; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000074b58: mov dh, 0xc0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000037464: mov dh, 0xc0; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000014b906: mov dh, 0xc7; cld; jmp qword ptr [rsi + 0xf]; 
0x00000000000417a5: mov dh, 0xc9; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000013b006: mov dh, 0xd0; std; jmp qword ptr [rsi + 0xf]; 
0x00000000000ca78f: mov dh, 0xd1; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x00000000000ca7ba: mov dh, 0xd1; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x000000000005f30a: mov dh, 0xd2; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005f8fa: mov dh, 0xd2; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x00000000000f3c80: mov dh, 0xd2; movsxd rdx, dword ptr [r15 + rdx*4]; add rdx, r15; jmp rdx; 
0x00000000000f3f3d: mov dh, 0xd2; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x00000000000f560c: mov dh, 0xd2; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x00000000000e002e: mov dh, 0xe4; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x0000000000146d91: mov dh, 0xe8; sub dword ptr [rbx], edx; std; jmp qword ptr [rsi + 0xf]; 
0x000000000012ad1b: mov dh, 0xef; jmp qword ptr [rsi + 0xf]; 
0x00000000000bdf26: mov dh, 0xef; cli; jmp qword ptr [rsi + 0xf]; 
0x00000000000b146c: mov dh, 0xf3; mov rax, rbp; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000000d9844: mov dh, 0xf5; jmp qword ptr [rsi + 0xf]; 
0x000000000006a99a: mov dh, 1; add cl, ch; sar esi, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000134ce8: mov dh, 2; movsxd rax, dword ptr [r14 + rax*4]; add rax, r14; jmp rax; 
0x000000000006b1b3: mov dh, 4; adc byte ptr [rax - 0x73], cl; cmp eax, 0xfffff670; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006ac6b: mov dh, 4; adc byte ptr [rax - 0x73], cl; cmp eax, 0xfffffbb8; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006b0fd: mov dh, 4; adc byte ptr [rax - 0x73], cl; xor eax, 0xfffff726; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b093: mov dh, 4; adc byte ptr [rax - 0x73], cl; xor eax, 0xfffff790; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000687b7: mov dh, 4; add cl, byte ptr [rax - 0x73]; adc eax, 0xfffffc13; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdx; jmp rax; 
0x000000000007e1fe: mov dil, dl; jmp qword ptr [rsi + 0x2e]; 
0x00000000000d5f1e: mov dl, 0x48; add eax, edx; jmp rax; 
0x000000000008c593: mov dl, bh; jmp qword ptr [rsi + 0x2e]; 
0x0000000000111eff: mov ds, word ptr [rax + rax + 0x31450000]; jmp qword ptr [rsi + 0xf]; 
0x00000000000bd8ae: mov ds, word ptr [rbx]; cld; jmp qword ptr [rsi + 0x66]; 
0x00000000000d9aab: mov dword ptr [rbx], ecx; add byte ptr [rdi], cl; mov dh, 0xc0; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000eaf6c: mov dword ptr [rcx + rax - 0x37], ecx; jmp rcx; 
0x000000000014a72f: mov dword ptr [rcx], 0xfffd3ee9; jmp qword ptr [rsi + 0x2e]; 
0x000000000009cc97: mov dword ptr [rcx], 0xffff20e9; jmp qword ptr [rsi - 0x70]; 
0x0000000000085113: mov dword ptr [rcx], edx; cli; jmp qword ptr [rsi + 0xf]; 
0x00000000001403ec: mov dword ptr [rdi + 0x10], 2; add rdi, 0x10; jmp rcx; 
0x0000000000142aec: mov dword ptr [rdi + 0x58], 2; add rdi, 0x58; jmp rcx; 
0x00000000001421ec: mov dword ptr [rdi + 0x68], 2; add rdi, 0x68; jmp rcx; 
0x000000000013f81c: mov dword ptr [rdi + 0xc8], 2; add rdi, 0xc8; jmp rcx; 
0x000000000013c93c: mov dword ptr [rdi], 2; add rsp, 8; pop rbx; pop rbp; jmp rcx; 
0x000000000005de15: mov dword ptr [rsp + 0x20], 1; jmp rax; 
0x000000000006c2a0: mov dword ptr [rsp + 0x28], 1; jmp rax; 
0x000000000006a923: mov dword ptr [rsp + 0x30], 0x20; jmp rax; 
0x000000000005de00: mov dword ptr [rsp + 0x30], 1; jmp rax; 
0x000000000005deb7: mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000006a918: mov dword ptr [rsp + 0x40], 0; add rax, rsi; mov dword ptr [rsp + 0x30], 0x20; jmp rax; 
0x000000000006c2f0: mov dword ptr [rsp + 0x40], 1; jmp rax; 
0x000000000005c6e8: mov dword ptr [rsp + 0x48], 0; add rax, rcx; mov byte ptr [rsp + 0x34], 0x20; jmp rax; 
0x000000000005de20: mov dword ptr [rsp + 0x48], 1; jmp rax; 
0x000000000005de40: mov dword ptr [rsp + 0x50], 1; jmp rax; 
0x000000000006c2e0: mov dword ptr [rsp + 0x68], 1; jmp rax; 
0x000000000005dda0: mov dword ptr [rsp + 8], 1; jmp rax; 
0x000000000005ddb0: mov dword ptr [rsp + 8], 1; mov r10d, 1; jmp rax; 
0x000000000005d45d: mov dword ptr [rsp + 8], 1; xor r10d, r10d; jmp rax; 
0x00000000000b2959: mov eax, 0; add byte ptr [rax], al; add byte ptr [rax - 0x36517], al; jmp qword ptr [rsi + 0xf]; 
0x00000000000850c8: mov eax, 0x63480010; add al, 0x82; add rax, rdx; jmp rax; 
0x0000000000074c5e: mov eax, 0x63480011; add al, 0x81; add rax, rcx; jmp rax; 
0x0000000000123ea9: mov eax, 0x89480002; fistp word ptr [rbx - 0x17]; stosd dword ptr [rdi], eax; and al, 0xf0; jmp qword ptr [rsi + 0x66]; 
0x000000000017636d: mov eax, 0xe9fffff7; cli; idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000014bd6b: mov eax, 0xfcc34fe8; jmp qword ptr [rsi + 0x66]; 
0x000000000014267b: mov eax, 0xfd5a3fe8; jmp qword ptr [rsi + 0x66]; 
0x000000000014162c: mov eax, 0xfd6a8ee8; jmp qword ptr [rsi + 0x66]; 
0x000000000006c2d9: mov eax, 1; jmp rax; 
0x000000000013a830: mov eax, ds; std; jmp qword ptr [rsi + 0x66]; 
0x000000000002762f: mov eax, dword ptr [rax + 0x10]; mov rdi, rbx; pop rbx; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; jmp rax; 
0x000000000014745d: mov eax, dword ptr [rax + 0x18]; add rsp, 8; mov rdi, rbx; pop rbx; pop rbp; jmp rax; 
0x0000000000084cd0: mov eax, dword ptr [rax + 0x20]; add rsp, 0x20; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000000007c691: mov eax, dword ptr [rax + 0x20]; jmp rax; 
0x000000000002753f: mov eax, dword ptr [rax + 0x20]; mov rdi, rbx; pop rbx; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; jmp rax; 
0x000000000014f70f: mov eax, dword ptr [rax + 0x320]; jmp rax; 
0x000000000014f6d8: mov eax, dword ptr [rax + 0x368]; test rax, rax; je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x0000000000084bd8: mov eax, dword ptr [rax + 0x368]; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x0000000000084c08: mov eax, dword ptr [rax + 0x368]; test rax, rax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x00000000000851e6: mov eax, dword ptr [rax + 0x38]; add rsp, 0x38; jmp rax; 
0x000000000007c68a: mov eax, dword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000146ebf: mov eax, dword ptr [rax + 8]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000006d1e9: mov eax, dword ptr [rax + rax]; add byte ptr [rax - 0x73], cl; xor eax, 0x122828; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000007a7a6: mov eax, dword ptr [rbp + 0x20]; add rsp, 8; mov rdi, rbx; pop rbx; pop rbp; jmp rax; 
0x000000000007a63a: mov eax, dword ptr [rbp + 0x28]; add rsp, 8; mov rdi, rbx; pop rbx; pop rbp; jmp rax; 
0x000000000006d3d7: mov eax, dword ptr [rbp - 0x610]; add rax, rsi; jmp rax; 
0x000000000005f1d5: mov eax, dword ptr [rbp - 0x660]; mov rcx, qword ptr [rbp - 0x668]; add rax, rsi; jmp rax; 
0x0000000000082d3d: mov eax, dword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000082d5e: mov eax, dword ptr [rbx + 0x18]; mov esi, dword ptr [rsp + 0xc]; mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000000832c9: mov eax, dword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000000834db: mov eax, dword ptr [rbx + 0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000000014f59b: mov eax, dword ptr [rbx + 0x58]; add rsp, 0x40; pop rbx; jmp rax; 
0x000000000007c67f: mov eax, dword ptr [rbx + 0xa0]; mov rdi, rbx; pop rbx; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x00000000000850c1: mov eax, dword ptr [rbx + 8]; lea rdx, [rip + 0x10b851]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000014fe29: mov eax, dword ptr [rbx]; add rsp, 8; pop rbx; pop rbp; jmp rax; 
0x00000000000f6d74: mov eax, dword ptr [rcx]; movsxd rax, dword ptr [r13 + rax*4]; add rax, r13; jmp rax; 
0x000000000013a723: mov eax, dword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x0000000000147a51: mov eax, dword ptr [rdi + 8]; jmp qword ptr [rax + 0x40]; 
0x0000000000147a61: mov eax, dword ptr [rdi + 8]; jmp qword ptr [rax + 0x48]; 
0x0000000000146e51: mov eax, dword ptr [rdi + 8]; jmp qword ptr [rax + 8]; 
0x0000000000146e46: mov eax, dword ptr [rdi + 8]; jmp qword ptr [rax]; 
0x000000000014150b: mov eax, dword ptr [rdi + 8]; mov edx, dword ptr [rsi + 0x1c8]; add rsi, 0x38; jmp qword ptr [rax + 0x18]; 
0x0000000000146ebb: mov eax, dword ptr [rdi + 8]; mov rax, qword ptr [rax + 8]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000085916: mov eax, dword ptr [rdi]; mov rdi, rdx; jmp rax; 
0x0000000000084c58: mov eax, dword ptr [rdx + 0x368]; test rax, rax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x0000000000084c01: mov eax, dword ptr [rip + 0x14d291]; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x0000000000084bd1: mov eax, dword ptr [rip + 0x14d2c1]; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x000000000014f735: mov eax, dword ptr [rip + 0x8275d]; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000014f701: mov eax, dword ptr [rip + 0x82791]; mov rsi, rdi; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000014f6d1: mov eax, dword ptr [rip + 0x827c1]; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x00000000000e7bd7: mov eax, dword ptr [rsp + 8]; movzx eax, byte ptr [rax + 8]; mov rdx, rax; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x00000000000277ab: mov eax, eax; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000039737: mov eax, eax; movsxd rsi, dword ptr [rdi + r8*4]; add rsi, rdi; jmp rsi; 
0x0000000000102932: mov eax, ebp; pop rbx; mov esi, 2; pop rbp; pop r12; jmp rax; 
0x00000000000b146f: mov eax, ebp; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000000f48ab: mov eax, ecx; mov r9, qword ptr [rsp + 0x58]; mov r10d, dword ptr [rsp + 0x60]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000ccadf: mov eax, ecx; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000003be76: mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x00000000000d6352: mov ebp, 0x6348000b; add al, 0x9a; add rax, rdx; jmp rax; 
0x00000000000a519d: mov ebp, 0x634b000e; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000c0def: mov ebp, 0xe9000def; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x000000000005dd89: mov ebp, 1; jmp rax; 
0x000000000003be7c: mov ebp, ecx; jmp rdx; 
0x000000000013d7d2: mov ebp, esi; jmp qword ptr [rsi + 0x66]; 
0x00000000000d68c1: mov ebx, 0xf689000b; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x000000000013b224: mov ebx, 0xfdce96e8; jmp qword ptr [rsi + 0xf]; 
0x00000000000f31ac: mov ebx, 0xfffed7e9; jmp qword ptr [rsi + 0xf]; 
0x000000000006c1d2: mov ecx, 0x66fffff6; nop dword ptr cs:[rax + rax]; mov ecx, 1; xor ebp, ebp; jmp rax; 
0x00000000001521e6: mov ecx, 0x83d72948; jmp qword ptr [rax + 0x73]; 
0x0000000000089ec9: mov ecx, 0xe80010cf; sahf; scasd eax, dword ptr [rdi]; cli; jmp qword ptr [rsi + 0xf]; 
0x000000000017aa1d: mov ecx, 0xfb4e6de8; jmp qword ptr [rsi + 0x2e]; 
0x000000000013a11c: mov ecx, 0xfddf9ee8; jmp qword ptr [rsi + 0x66]; 
0x0000000000139c3c: mov ecx, 0xfde47ee8; jmp qword ptr [rsi + 0x66]; 
0x0000000000138c4c: mov ecx, 0xfdf46ee8; jmp qword ptr [rsi + 0x66]; 
0x000000000013892c: mov ecx, 0xfdf78ee8; jmp qword ptr [rsi + 0x66]; 
0x000000000013843c: mov ecx, 0xfdfc7ee8; jmp qword ptr [rsi + 0x66]; 
0x00000000001380fc: mov ecx, 0xfdffbee8; jmp qword ptr [rsi + 0x66]; 
0x00000000001363bc: mov ecx, 0xfe1cfee8; jmp qword ptr [rsi + 0x66]; 
0x0000000000135ddc: mov ecx, 0xfe22dee8; jmp qword ptr [rsi + 0x66]; 
0x000000000006c1f1: mov ecx, 1; jmp rax; 
0x000000000006c201: mov ecx, 1; mov r10d, 1; jmp rax; 
0x000000000006c1e0: mov ecx, 1; xor ebp, ebp; jmp rax; 
0x000000000006b7f9: mov ecx, 1; xor r10d, r10d; jmp rax; 
0x000000000006d3c9: mov ecx, dword ptr [rbp - 0x600]; mov rcx, qword ptr [rbp - 0x608]; mov r8d, dword ptr [rbp - 0x610]; add rax, rsi; jmp rax; 
0x000000000006d3d0: mov ecx, dword ptr [rbp - 0x608]; mov r8d, dword ptr [rbp - 0x610]; add rax, rsi; jmp rax; 
0x000000000005f1dc: mov ecx, dword ptr [rbp - 0x668]; add rax, rsi; jmp rax; 
0x00000000000f48ae: mov ecx, dword ptr [rsp + 0x58]; mov r10d, dword ptr [rsp + 0x60]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000001476b0: mov ecx, ebp; mov edx, 0xffffffff; pop r13; xor eax, eax; pop r14; jmp rcx; 
0x000000000013c985: mov ecx, ebx; xor eax, eax; pop rbx; add rdi, 0x23b0; pop rbp; jmp rcx; 
0x000000000013a980: mov ecx, ebx; xor eax, eax; pop rbx; pop rbp; jmp rcx; 
0x00000000001403c5: mov ecx, esi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x00000000001403e5: mov ecx, esi; xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0x10], 2; add rdi, 0x10; jmp rcx; 
0x0000000000142ae5: mov ecx, esi; xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0x58], 2; add rdi, 0x58; jmp rcx; 
0x00000000001421e5: mov ecx, esi; xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0x68], 2; add rdi, 0x68; jmp rcx; 
0x000000000013f815: mov ecx, esi; xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0xc8], 2; add rdi, 0xc8; jmp rcx; 
0x0000000000077ba4: mov ecx, esp; mov edx, ebp; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000077ba3: mov ecx, r12d; mov edx, ebp; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000000383d7: mov edi, 0x48fffedf; lea esi, [rip + 0x1521da]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000a507e: mov edi, 0x634b000e; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000762fb: mov edi, 0xe0; jmp rax; 
0x000000000005f8f5: mov edi, 0xf0012fb; mov dh, 0xd2; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x000000000013dd8b: mov edi, 0xfda32fe8; jmp qword ptr [rsi + 0x66]; 
0x00000000000d4090: mov edi, 0xfffe49e9; jmp qword ptr [rsi + 0x2e]; 
0x000000000005de31: mov edi, 1; jmp rax; 
0x000000000014fe25: mov edi, dword ptr [rbx + 8]; mov rax, qword ptr [rbx]; add rsp, 8; pop rbx; pop rbp; jmp rax; 
0x000000000003be73: mov edi, dword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x00000000001403c1: mov edi, dword ptr [rdi + 0x40]; mov rcx, rsi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x0000000000145de1: mov edi, dword ptr [rdi + 0x48]; mov rcx, rsi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x00000000000762fa: mov edi, dword ptr [rdi + 0xe0]; jmp rax; 
0x00000000000832fb: mov edi, dword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000000082d66: mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000014f70b: mov edi, dword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000013c08d: mov edi, ebp; pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x0000000000102965: mov edi, ebx; mov rax, rbp; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000000007c686: mov edi, ebx; pop rbx; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000007a642: mov edi, ebx; pop rbx; pop rbp; jmp rax; 
0x000000000007a1de: mov edi, ebx; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000000809aa: mov edi, ebx; pop rbx; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000027543: mov edi, ebx; pop rbx; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; jmp rax; 
0x00000000000f42c8: mov edi, ecx; movsxd rax, dword ptr [rdx + r15*4]; add rax, rdx; jmp rax; 
0x000000000009eece: mov edi, ecx; movsxd rdi, dword ptr [r9 + rdi*4]; add rdi, r9; jmp rdi; 
0x00000000000eca08: mov edi, edi; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x0000000000085919: mov edi, edx; jmp rax; 
0x000000000009f043: mov edi, edx; movsxd rdi, dword ptr [r8 + rdi*4]; add rdi, r8; jmp rdi; 
0x0000000000141504: mov edi, esi; mov rsi, qword ptr [rax + 0x40]; mov rax, qword ptr [rdi + 8]; mov edx, dword ptr [rsi + 0x1c8]; add rsi, 0x38; jmp qword ptr [rax + 0x18]; 
0x00000000000379dc: mov edx, 0x48fffee9; lea esi, [rip + 0x152629]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000d67ca: mov edx, 0x6348000b; add al, 0x9a; add rax, rdx; jmp rax; 
0x000000000014767b: mov edx, 0xffffffff; pop r13; xor eax, eax; pop r14; jmp rcx; 
0x000000000005ddb9: mov edx, 1; jmp rax; 
0x000000000013a71b: mov edx, dword ptr [rax + 0x5c]; lea rsi, [rax + 0x48]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x0000000000085912: mov edx, dword ptr [rdi + 8]; mov rax, qword ptr [rdi]; mov rdi, rdx; jmp rax; 
0x0000000000084c51: mov edx, dword ptr [rip + 0x14d241]; mov rax, qword ptr [rdx + 0x368]; test rax, rax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x000000000014150e: mov edx, dword ptr [rsi + 0x1c8]; add rsi, 0x38; jmp qword ptr [rax + 0x18]; 
0x00000000000f48b3: mov edx, dword ptr [rsp + 0x60]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000e7be0: mov edx, eax; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x000000000013c25c: mov edx, eax; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000003f5e9: mov edx, eax; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; cmp esi, 0x2f; jmp rdx; 
0x00000000000ccb09: mov edx, eax; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x00000000000e8277: mov edx, ebp; movsxd rax, dword ptr [rcx + r10*4]; add rax, rcx; jmp rax; 
0x0000000000077ba6: mov edx, ebp; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000151bc2: mov edx, edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000009efa3: mov edx, edx; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x000000000007e90d: mov es, word ptr [rcx + rdx + 0x655ae800]; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000049af2: mov esi, 0x8d480175; imul eax, dword ptr [rdx], 0xfffe40e9; jmp qword ptr [rsi - 0x70]; 
0x00000000000eaf62: mov esi, 0xb60ffff3; or byte ptr [rcx + 0x63], cl; or al, 0x89; add rcx, r9; jmp rcx; 
0x000000000013d501: mov esi, 0xfdabb9e8; jmp qword ptr [rsi + 0xf]; 
0x000000000013b5fc: mov esi, 0xfdcabee8; jmp qword ptr [rsi + 0x66]; 
0x000000000005dd94: mov esi, 1; jmp rax; 
0x0000000000102935: mov esi, 2; pop rbp; pop r12; jmp rax; 
0x0000000000141507: mov esi, dword ptr [rax + 0x40]; mov rax, qword ptr [rdi + 8]; mov edx, dword ptr [rsi + 0x1c8]; add rsi, 0x38; jmp qword ptr [rax + 0x18]; 
0x000000000003be6f: mov esi, dword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x0000000000082cd1: mov esi, dword ptr [rsi]; cli; jmp qword ptr [rsi + 0xf]; 
0x00000000000832f6: mov esi, dword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000000082d61: mov esi, dword ptr [rsp + 0xc]; mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000013a97d: mov esi, ebp; mov rcx, rbx; xor eax, eax; pop rbx; pop rbp; jmp rcx; 
0x000000000007a1db: mov esi, ebp; mov rdi, rbx; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000000f6d70: mov esi, ecx; ja 0xf6df0; mov eax, dword ptr [rcx]; movsxd rax, dword ptr [r13 + rax*4]; add rax, r13; jmp rax; 
0x000000000014f708: mov esi, edi; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x00000000001403ca: mov esi, edx; add rdi, 0x10; jmp rcx; 
0x00000000001403ea: mov esi, edx; mov dword ptr [rdi + 0x10], 2; add rdi, 0x10; jmp rcx; 
0x0000000000142aea: mov esi, edx; mov dword ptr [rdi + 0x58], 2; add rdi, 0x58; jmp rcx; 
0x00000000001421ea: mov esi, edx; mov dword ptr [rdi + 0x68], 2; add rdi, 0x68; jmp rcx; 
0x000000000013f81a: mov esi, edx; mov dword ptr [rdi + 0xc8], 2; add rdi, 0xc8; jmp rcx; 
0x000000000013f8b0: mov esi, esi; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x00000000000d5f19: mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x000000000014c1cf: mov esi, gs; jmp qword ptr [rsi + 0x66]; 
0x00000000000a437e: mov esp, 0x1d8d4cd2; imul ecx, ebx, 0x6349000e; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac772: mov esp, 0x1d8d4cd2; lea ecx, [rdx + 0xe]; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76b5: mov esp, 0x1d8d4cd2; retf 0xe99; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c15: mov esp, 0x1d8d4cd2; ror byte ptr [rsi], cl; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000007b0df: mov esp, 0x89e80011; popfq; sti; jmp qword ptr [rsi + 0xf]; 
0x00000000000a518e: mov esp, 0xc2394cd2; jb 0xa4490; lea r11, [rip + 0xebdd0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4523: mov esp, 0xc2394cd2; jb 0xa4490; lea r11, [rip + 0xeca3b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4509: mov esp, 0xc2394cd2; jb 0xa4490; lea r11, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44bc: mov esp, 0xc2394cd2; jb 0xa4490; lea r11, [rip + 0xecaa6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac883: mov esp, 0xc2394cd2; jb 0xac7f0; lea r11, [rip + 0xe49f3]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac869: mov esp, 0xc2394cd2; jb 0xac7f0; lea r11, [rip + 0xe4a11]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac81c: mov esp, 0xc2394cd2; jb 0xac7f0; lea r11, [rip + 0xe4a5e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af8ce: mov esp, 0xc2394cd2; jb 0xaed40; lea r11, [rip + 0xe1af0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedd3: mov esp, 0xc2394cd2; jb 0xaed40; lea r11, [rip + 0xe25eb]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedb9: mov esp, 0xc2394cd2; jb 0xaed40; lea r11, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed6c: mov esp, 0xc2394cd2; jb 0xaed40; lea r11, [rip + 0xe2656]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000117ab8: mov esp, 0xfff132e8; jmp qword ptr [rsi - 0x70]; 
0x0000000000116fe8: mov esp, 0xfffc02e8; jmp qword ptr [rsi - 0x70]; 
0x0000000000122031: mov esp, dword ptr [rax - 1]; jmp qword ptr [rsi + 0x66]; 
0x00000000000383a9: mov esp, dword ptr [rcx]; adc eax, 0xc0b60f00; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000003be79: mov esp, eax; mov rbp, r9; jmp rdx; 
0x00000000000ff5d6: mov gs, word ptr [rbp - 0xe]; jmp qword ptr [rsi + 0xf]; 
0x000000000014162e: mov gs, word ptr [rdx - 3]; jmp qword ptr [rsi + 0x66]; 
0x000000000005ddb8: mov r10d, 1; jmp rax; 
0x00000000000f48b2: mov r10d, dword ptr [rsp + 0x60]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000e8276: mov r10d, r13d; movsxd rax, dword ptr [rcx + r10*4]; add rax, rcx; jmp rax; 
0x0000000000122e5d: mov r13b, 7; add al, ch; or ah, byte ptr [rax]; int1; jmp qword ptr [rsi + 0x2e]; 
0x000000000005dd88: mov r13d, 1; jmp rax; 
0x000000000003be6e: mov r14, qword ptr [rdi + 0x20]; mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x00000000000f6d6f: mov r14, rcx; ja 0xf6df0; mov eax, dword ptr [rcx]; movsxd rax, dword ptr [r13 + rax*4]; add rax, r13; jmp rax; 
0x000000000005dd93: mov r14d, 1; jmp rax; 
0x000000000003be72: mov r15, qword ptr [rdi + 0x28]; mov eax, esi; mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000005de30: mov r15d, 1; jmp rax; 
0x00000000000f42c7: mov r15d, ecx; movsxd rax, dword ptr [rdx + r15*4]; add rax, rdx; jmp rax; 
0x000000000005f1d4: mov r8, qword ptr [rbp - 0x660]; mov rcx, qword ptr [rbp - 0x668]; add rax, rsi; jmp rax; 
0x000000000006c2d8: mov r8d, 1; jmp rax; 
0x000000000006d3d6: mov r8d, dword ptr [rbp - 0x610]; add rax, rsi; jmp rax; 
0x0000000000039736: mov r8d, r8d; movsxd rsi, dword ptr [rdi + r8*4]; add rsi, rdi; jmp rsi; 
0x000000000006d3c8: mov r9, qword ptr [rbp - 0x600]; mov rcx, qword ptr [rbp - 0x608]; mov r8d, dword ptr [rbp - 0x610]; add rax, rsi; jmp rax; 
0x00000000000f48ad: mov r9, qword ptr [rsp + 0x58]; mov r10d, dword ptr [rsp + 0x60]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000006c1f0: mov r9d, 1; jmp rax; 
0x000000000006c200: mov r9d, 1; mov r10d, 1; jmp rax; 
0x000000000006b7f8: mov r9d, 1; xor r10d, r10d; jmp rax; 
0x000000000002762e: mov rax, qword ptr [rax + 0x10]; mov rdi, rbx; pop rbx; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; jmp rax; 
0x000000000014745c: mov rax, qword ptr [rax + 0x18]; add rsp, 8; mov rdi, rbx; pop rbx; pop rbp; jmp rax; 
0x0000000000084ccf: mov rax, qword ptr [rax + 0x20]; add rsp, 0x20; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000000007c690: mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000002753e: mov rax, qword ptr [rax + 0x20]; mov rdi, rbx; pop rbx; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; jmp rax; 
0x000000000014f70e: mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000014f6d7: mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x0000000000084bd7: mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x0000000000084c07: mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x00000000000851e5: mov rax, qword ptr [rax + 0x38]; add rsp, 0x38; jmp rax; 
0x000000000007c689: mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000146ebe: mov rax, qword ptr [rax + 8]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000007a7a5: mov rax, qword ptr [rbp + 0x20]; add rsp, 8; mov rdi, rbx; pop rbx; pop rbp; jmp rax; 
0x000000000007a639: mov rax, qword ptr [rbp + 0x28]; add rsp, 8; mov rdi, rbx; pop rbx; pop rbp; jmp rax; 
0x0000000000082d3c: mov rax, qword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000082d5d: mov rax, qword ptr [rbx + 0x18]; mov esi, dword ptr [rsp + 0xc]; mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000000832c8: mov rax, qword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000000834da: mov rax, qword ptr [rbx + 0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000000014f59a: mov rax, qword ptr [rbx + 0x58]; add rsp, 0x40; pop rbx; jmp rax; 
0x000000000007c67e: mov rax, qword ptr [rbx + 0xa0]; mov rdi, rbx; pop rbx; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000014fe28: mov rax, qword ptr [rbx]; add rsp, 8; pop rbx; pop rbp; jmp rax; 
0x000000000013a722: mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x0000000000147a50: mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x40]; 
0x0000000000147a60: mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x48]; 
0x0000000000146e50: mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 8]; 
0x0000000000146e45: mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax]; 
0x000000000014150a: mov rax, qword ptr [rdi + 8]; mov edx, dword ptr [rsi + 0x1c8]; add rsi, 0x38; jmp qword ptr [rax + 0x18]; 
0x0000000000146eba: mov rax, qword ptr [rdi + 8]; mov rax, qword ptr [rax + 8]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000085915: mov rax, qword ptr [rdi]; mov rdi, rdx; jmp rax; 
0x0000000000084c57: mov rax, qword ptr [rdx + 0x368]; test rax, rax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x0000000000084c00: mov rax, qword ptr [rip + 0x14d291]; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x0000000000084bd0: mov rax, qword ptr [rip + 0x14d2c1]; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x000000000014f734: mov rax, qword ptr [rip + 0x8275d]; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000014f700: mov rax, qword ptr [rip + 0x82791]; mov rsi, rdi; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000014f6d0: mov rax, qword ptr [rip + 0x827c1]; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x00000000000e7bd6: mov rax, qword ptr [rsp + 8]; movzx eax, byte ptr [rax + 8]; mov rdx, rax; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x0000000000102931: mov rax, rbp; pop rbx; mov esi, 2; pop rbp; pop r12; jmp rax; 
0x00000000000b146e: mov rax, rbp; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000000003be7b: mov rbp, r9; jmp rdx; 
0x000000000006d3cf: mov rcx, qword ptr [rbp - 0x608]; mov r8d, dword ptr [rbp - 0x610]; add rax, rsi; jmp rax; 
0x000000000005f1db: mov rcx, qword ptr [rbp - 0x668]; add rax, rsi; jmp rax; 
0x00000000001476af: mov rcx, r13; mov edx, 0xffffffff; pop r13; xor eax, eax; pop r14; jmp rcx; 
0x000000000013c984: mov rcx, rbx; xor eax, eax; pop rbx; add rdi, 0x23b0; pop rbp; jmp rcx; 
0x000000000013a97f: mov rcx, rbx; xor eax, eax; pop rbx; pop rbp; jmp rcx; 
0x00000000001403c4: mov rcx, rsi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x00000000001403e4: mov rcx, rsi; xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0x10], 2; add rdi, 0x10; jmp rcx; 
0x0000000000142ae4: mov rcx, rsi; xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0x58], 2; add rdi, 0x58; jmp rcx; 
0x00000000001421e4: mov rcx, rsi; xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0x68], 2; add rdi, 0x68; jmp rcx; 
0x000000000013f814: mov rcx, rsi; xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0xc8], 2; add rdi, 0xc8; jmp rcx; 
0x000000000014fe24: mov rdi, qword ptr [rbx + 8]; mov rax, qword ptr [rbx]; add rsp, 8; pop rbx; pop rbp; jmp rax; 
0x00000000001403c0: mov rdi, qword ptr [rdi + 0x40]; mov rcx, rsi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x0000000000145de0: mov rdi, qword ptr [rdi + 0x48]; mov rcx, rsi; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x00000000000762f9: mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x00000000000832fa: mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000000082d65: mov rdi, qword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000014f70a: mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000013c08c: mov rdi, rbp; pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x0000000000102964: mov rdi, rbx; mov rax, rbp; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000000007c685: mov rdi, rbx; pop rbx; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000007a641: mov rdi, rbx; pop rbx; pop rbp; jmp rax; 
0x000000000007a1dd: mov rdi, rbx; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000000809a9: mov rdi, rbx; pop rbx; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000027542: mov rdi, rbx; pop rbx; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; jmp rax; 
0x0000000000085918: mov rdi, rdx; jmp rax; 
0x0000000000141503: mov rdi, rsi; mov rsi, qword ptr [rax + 0x40]; mov rax, qword ptr [rdi + 8]; mov edx, dword ptr [rsi + 0x1c8]; add rsi, 0x38; jmp qword ptr [rax + 0x18]; 
0x0000000000085911: mov rdx, qword ptr [rdi + 8]; mov rax, qword ptr [rdi]; mov rdi, rdx; jmp rax; 
0x0000000000084c50: mov rdx, qword ptr [rip + 0x14d241]; mov rax, qword ptr [rdx + 0x368]; test rax, rax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x00000000000e7bdf: mov rdx, rax; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x0000000000141506: mov rsi, qword ptr [rax + 0x40]; mov rax, qword ptr [rdi + 8]; mov edx, dword ptr [rsi + 0x1c8]; add rsi, 0x38; jmp qword ptr [rax + 0x18]; 
0x00000000000832f5: mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000000013a97c: mov rsi, rbp; mov rcx, rbx; xor eax, eax; pop rbx; pop rbp; jmp rcx; 
0x000000000014f707: mov rsi, rdi; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x00000000001403c9: mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x00000000001403e9: mov rsi, rdx; mov dword ptr [rdi + 0x10], 2; add rdi, 0x10; jmp rcx; 
0x0000000000142ae9: mov rsi, rdx; mov dword ptr [rdi + 0x58], 2; add rdi, 0x58; jmp rcx; 
0x00000000001421e9: mov rsi, rdx; mov dword ptr [rdi + 0x68], 2; add rdi, 0x68; jmp rcx; 
0x000000000013f819: mov rsi, rdx; mov dword ptr [rdi + 0xc8], 2; add rdi, 0xc8; jmp rcx; 
0x000000000003be78: mov rsp, r8; mov rbp, r9; jmp rdx; 
0x000000000012ad1a: mov sil, 0xef; jmp qword ptr [rsi + 0xf]; 
0x000000000007531a: mov spl, 0x11; add byte ptr [rax + 0x63], cl; adc al, 0x91; add rdx, rcx; jmp rdx; 
0x0000000000143e30: mov word ptr [rdx - 3], es; jmp qword ptr [rsi + 0x66]; 
0x000000000007c681: movabs al, byte ptr [0x485bdf8948000000]; mov eax, dword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x0000000000102963: movabs al, byte ptr [0x5d5be88948df8948]; pop r12; jmp rax; 
0x000000000016e6e7: movabs al, byte ptr [0xd158d48f0e78348]; add al, 0; add byte ptr [rcx + rax - 0x3e], cl; jmp rdx; 
0x00000000001456da: movabs byte ptr [0x29dbe8cfebfff8e6], al; std; jmp qword ptr [rsi + 0x66]; 
0x00000000000d647a: movabs byte ptr [0xbd6f158d48000002], al; or eax, dword ptr [rax]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000337ba: movabs byte ptr [0xe95bdf8948ffff2b], al; cdq; sub edi, edi; jmp qword ptr [rsi + 0xf]; 
0x00000000000ac761: movabs dword ptr [0x49930c6349000e4a], eax; lea ecx, [rbx + rcx]; jmp rcx; 
0x00000000000a50b1: movabs r15, 0x8d49830c634b000e; or al, 0xb; jmp rcx; 
0x000000000017aa11: movabs r9, 0x60c6c1d8b48ffea; add bl, ch; mov ecx, 0xfb4e6de8; jmp qword ptr [rsi + 0x2e]; 
0x00000000000af7d1: movdqa xmmword ptr [rdi], xmm0; add rdi, 0x10; lea r11, [rip + 0xe1c80]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a5091: movdqa xmmword ptr [rdi], xmm0; add rdi, 0x10; lea r11, [rip + 0xebf60]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a5072: movdqa xmmword ptr [rdi], xmm0; add rdi, 0x10; lea r11, [rip + 0xebf7f]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7d2: movq qword ptr [rdi], mm0; add rdi, 0x10; lea r11, [rip + 0xe1c80]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a5092: movq qword ptr [rdi], mm0; add rdi, 0x10; lea r11, [rip + 0xebf60]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a5073: movq qword ptr [rdi], mm0; add rdi, 0x10; lea r11, [rip + 0xebf7f]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000001140c2: movsd dword ptr [rdi], dword ptr [rsi]; bnd jmp qword ptr [rsi + 0x66]; 
0x00000000000bf9da: movsd dword ptr [rdi], dword ptr [rsi]; idiv edi; jmp qword ptr [rsi - 0x70]; 
0x0000000000117b87: movsd dword ptr [rdi], dword ptr [rsi]; stc; jmp qword ptr [rsi + 0xf]; 
0x000000000013db3e: movsd dword ptr [rdi], dword ptr [rsi]; std; jmp qword ptr [rsi + 0x66]; 
0x000000000005f1c9: movsxd r10, dword ptr [rbp - 0x650]; movsxd rax, dword ptr [rsi + rdx*4]; mov r8, qword ptr [rbp - 0x660]; mov rcx, qword ptr [rbp - 0x668]; add rax, rsi; jmp rax; 
0x00000000000f6d76: movsxd rax, dword ptr [r13 + rax*4]; add rax, r13; jmp rax; 
0x0000000000134cea: movsxd rax, dword ptr [r14 + rax*4]; add rax, r14; jmp rax; 
0x00000000000ea965: movsxd rax, dword ptr [r15 + 0x38]; ja 0xea980; movzx ecx, byte ptr [r15 + 0x30]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000005d0d6: movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d597: movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d426: movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x00000000000e7be2: movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x00000000000e8279: movsxd rax, dword ptr [rcx + r10*4]; add rax, rcx; jmp rax; 
0x0000000000057fd6: movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000005ca7f: movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000006d5b1: movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x0000000000035993: movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000013f8b2: movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x00000000000d9ab1: movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000687c1: movsxd rax, dword ptr [rdi + rax*4]; add rax, rdx; jmp rax; 
0x000000000005a876: movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000e0030: movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x00000000000f42ca: movsxd rax, dword ptr [rdx + r15*4]; add rax, rdx; jmp rax; 
0x00000000000277ad: movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000d9466: movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d6355: movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000b0a56: movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000d5f1b: movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x000000000012c8bb: movsxd rax, dword ptr [rip + 0x6754e]; lea rsi, [rip + 0x67547]; add rax, rsi; jmp rax; 
0x000000000006ac75: movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000037466: movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006dd17: movsxd rax, dword ptr [rsi + rbx*4]; add rax, rsi; jmp rax; 
0x000000000006d3c4: movsxd rax, dword ptr [rsi + rbx*4]; mov r9, qword ptr [rbp - 0x600]; mov rcx, qword ptr [rbp - 0x608]; mov r8d, dword ptr [rbp - 0x610]; add rax, rsi; jmp rax; 
0x000000000005f8fc: movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005f1d0: movsxd rax, dword ptr [rsi + rdx*4]; mov r8, qword ptr [rbp - 0x660]; mov rcx, qword ptr [rbp - 0x668]; add rax, rsi; jmp rax; 
0x00000000000a44ca: movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3ba9: movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000eaf69: movsxd rcx, dword ptr [r9 + rcx*4]; add rcx, r9; jmp rcx; 
0x000000000005a2c7: movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x00000000000417a7: movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x0000000000033161: movsxd rcx, dword ptr [rsi + rdi*4]; add rcx, rsi; jmp rcx; 
0x000000000009f045: movsxd rdi, dword ptr [r8 + rdi*4]; add rdi, r8; jmp rdi; 
0x000000000009eed0: movsxd rdi, dword ptr [r9 + rdi*4]; add rdi, r9; jmp rdi; 
0x00000000000f3c82: movsxd rdx, dword ptr [r15 + rdx*4]; add rdx, r15; jmp rdx; 
0x000000000007522a: movsxd rdx, dword ptr [rcx + r10*4]; add rdx, rcx; jmp rdx; 
0x000000000007531e: movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000003f5eb: movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; cmp esi, 0x2f; jmp rdx; 
0x000000000009efa5: movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x00000000000ca7bc: movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x0000000000039739: movsxd rsi, dword ptr [rdi + r8*4]; add rsi, rdi; jmp rsi; 
0x00000000000f5077: movzx eax, al; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x0000000000074c07: movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000d9aae: movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000074b57: movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000037463: movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000e7bdb: movzx eax, byte ptr [rax + 8]; mov rdx, rax; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x000000000006ac6a: movzx eax, byte ptr [rax + rdx]; lea rdi, [rip - 0x448]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006b1b2: movzx eax, byte ptr [rax + rdx]; lea rdi, [rip - 0x990]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006b092: movzx eax, byte ptr [rax + rdx]; lea rsi, [rip - 0x870]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b0fc: movzx eax, byte ptr [rax + rdx]; lea rsi, [rip - 0x8da]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005a86b: movzx eax, byte ptr [rdi + rax]; lea rdi, [rip + 0x1345aa]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005ca7b: movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x00000000000687b6: movzx eax, byte ptr [rdx + rax]; lea rdx, [rip - 0x3ed]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdx; jmp rax; 
0x0000000000134ce7: movzx eax, byte ptr [rdx]; movsxd rax, dword ptr [r14 + rax*4]; add rax, r14; jmp rax; 
0x000000000006aeab: movzx eax, byte ptr [rsi + rax]; lea rsi, [rip + 0x124a8a]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000006b157: movzx eax, byte ptr [rsi + rax]; lea rsi, [rip - 0x935]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000ea96b: movzx ecx, byte ptr [r15 + 0x30]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000ea96c: movzx ecx, byte ptr [rdi + 0x30]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000eaf65: movzx ecx, byte ptr [rdx + 8]; movsxd rcx, dword ptr [r9 + rcx*4]; add rcx, r9; jmp rcx; 
0x00000000000417a4: movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000006b7df: movzx edx, byte ptr [rax + rdx]; lea rax, [rip + 0x123f56]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b6d8: movzx edx, byte ptr [rax + rdx]; lea rax, [rip + 0x123fdd]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b731: movzx edx, byte ptr [rax + rdx]; lea rax, [rip + 0x124004]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b787: movzx edx, byte ptr [rax + rdx]; lea rax, [rip + 0x12402e]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000006b67e: movzx edx, byte ptr [rax + rdx]; lea rax, [rip + 0x1240b7]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006aad3: movzx edx, byte ptr [rax + rdx]; lea rax, [rip + 0x124c62]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d652: movzx edx, byte ptr [rcx + rax]; lea rax, [rip + 0x131943]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d522: movzx edx, byte ptr [rcx + rax]; lea rax, [rip + 0x1319f3]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d41b: movzx edx, byte ptr [rcx + rax]; lea rax, [rip + 0x131afa]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006b036: movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x12487f]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006af0d: movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x124928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d5ed: movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x131928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d4bb: movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x131a5a]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d0cb: movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x131fca]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000006af94: movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x124921]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005dde2: movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x131133]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d58c: movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x131909]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d6c9: movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x13194c]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x00000000000ca78e: movzx edx, cl; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x00000000000ca7b9: movzx edx, cl; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x000000000005f309: movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005f8f9: movzx edx, dl; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x00000000000f3c7f: movzx edx, dl; movsxd rdx, dword ptr [r15 + rdx*4]; add rdx, r15; jmp rdx; 
0x00000000000f3f3c: movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x00000000000f560b: movzx edx, dl; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x00000000000b146b: movzx esi, bl; mov rax, rbp; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000000e002d: movzx esp, ah; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x00000000000e002c: movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x000000000008482c: mul byte ptr [rcx + rdx]; add al, ch; cmp eax, dword ptr [rsi]; sti; jmp qword ptr [rsi + 0x66]; 
0x0000000000146e3b: nop dword ptr [rax + rax]; cmp eax, 1; jne 0x146e31; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax]; 
0x00000000000aed3b: nop dword ptr [rax + rax]; lea r11, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a448b: nop dword ptr [rax + rax]; lea r11, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000005deab: nop dword ptr [rax + rax]; lea rax, [rip - 0x18fa]; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000006c268: nop dword ptr [rax + rax]; lea rax, [rip - 0x1a4a]; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000006c2eb: nop dword ptr [rax + rax]; mov dword ptr [rsp + 0x40], 1; jmp rax; 
0x000000000005dd9b: nop dword ptr [rax + rax]; mov dword ptr [rsp + 8], 1; jmp rax; 
0x000000000005ddab: nop dword ptr [rax + rax]; mov dword ptr [rsp + 8], 1; mov r10d, 1; jmp rax; 
0x000000000006c25b: nop dword ptr [rax + rax]; mov ebp, 1; jmp rax; 
0x000000000006c1d8: nop dword ptr [rax + rax]; mov ecx, 1; xor ebp, ebp; jmp rax; 
0x000000000005dd83: nop dword ptr [rax + rax]; mov r13d, 1; jmp rax; 
0x000000000005de2b: nop dword ptr [rax + rax]; mov r15d, 1; jmp rax; 
0x000000000006c2d3: nop dword ptr [rax + rax]; mov r8d, 1; jmp rax; 
0x000000000006b7f3: nop dword ptr [rax + rax]; mov r9d, 1; xor r10d, r10d; jmp rax; 
0x0000000000147a58: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x48]; 
0x0000000000146e4b: nop dword ptr [rax + rax]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 8]; 
0x0000000000084bcb: nop dword ptr [rax + rax]; mov rax, qword ptr [rip + 0x14d2c1]; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x000000000006c299: nop dword ptr [rax]; mov dword ptr [rsp + 0x28], 1; jmp rax; 
0x000000000006c1e9: nop dword ptr [rax]; mov r9d, 1; jmp rax; 
0x000000000014f6cc: nop dword ptr [rax]; mov rax, qword ptr [rip + 0x827c1]; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x000000000006c1d7: nop dword ptr cs:[rax + rax]; mov ecx, 1; xor ebp, ebp; jmp rax; 
0x00000000000aed3a: nop word ptr [rax + rax]; lea r11, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a448a: nop word ptr [rax + rax]; lea r11, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000006c267: nop word ptr [rax + rax]; lea rax, [rip - 0x1a4a]; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000006c2ea: nop word ptr [rax + rax]; mov dword ptr [rsp + 0x40], 1; jmp rax; 
0x000000000005ddaa: nop word ptr [rax + rax]; mov dword ptr [rsp + 8], 1; mov r10d, 1; jmp rax; 
0x000000000005de2a: nop word ptr [rax + rax]; mov r15d, 1; jmp rax; 
0x000000000006c2d2: nop word ptr [rax + rax]; mov r8d, 1; jmp rax; 
0x0000000000147a57: nop word ptr [rax + rax]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x48]; 
0x0000000000084bca: nop word ptr [rax + rax]; mov rax, qword ptr [rip + 0x14d2c1]; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x000000000006c1d6: nop word ptr cs:[rax + rax]; mov ecx, 1; xor ebp, ebp; jmp rax; 
0x00000000000ebfd6: not byte ptr [rsi]; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000122e62: or ah, byte ptr [rax]; int1; jmp qword ptr [rsi + 0x2e]; 
0x00000000000e5b25: or ah, dh; jmp qword ptr [rsi + 0xf]; 
0x00000000000535b2: or al, 0; add byte ptr [rax - 0x14343], al; jmp qword ptr [rsi + 0xf]; 
0x000000000013b21e: or al, 0; add byte ptr [rax], al; add bl, ch; mov ebx, 0xfdce96e8; jmp qword ptr [rsi + 0xf]; 
0x00000000000ccadd: or al, 0; mov eax, ecx; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000ccb07: or al, 0; mov edx, eax; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x00000000000c754c: or al, 0; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000ca78c: or al, 0; movzx edx, cl; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x00000000000ca7b7: or al, 0; movzx edx, cl; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x0000000000082d64: or al, 0x48; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000000a44cc: or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000eaf6b: or al, 0x89; add rcx, r9; jmp rcx; 
0x000000000005a2c9: or al, 0x8a; add rcx, rdx; jmp rcx; 
0x00000000000417a9: or al, 0x8e; add rcx, rsi; jmp rcx; 
0x00000000000a3bab: or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3baf: or al, 0xb; jmp rcx; 
0x0000000000033163: or al, 0xbe; add rcx, rsi; jmp rcx; 
0x0000000000054608: or al, 0xe9; test eax, 0xc7fffff6; test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x0000000000115c60: or al, 0xf2; int1; jmp qword ptr [rsi + 0x2e]; 
0x00000000001473e4: or al, 0xfd; jmp qword ptr [rsi + 0xf]; 
0x000000000017aa19: or al, 6; add bl, ch; mov ecx, 0xfb4e6de8; jmp qword ptr [rsi + 0x2e]; 
0x00000000000eca06: or al, byte ptr [rax]; mov edi, edi; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000e8274: or al, byte ptr [rax]; mov r10d, r13d; movsxd rax, dword ptr [rcx + r10*4]; add rax, rcx; jmp rax; 
0x00000000000ec9b4: or al, byte ptr [rax]; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x0000000000032052: or al, byte ptr [rbx - 1]; jmp qword ptr [rsi + 0x2e]; 
0x00000000000eca05: or al, byte ptr gs:[rax]; mov edi, edi; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x00000000000fb9db: or al, ch; jg 0xfb988; bnd jmp qword ptr [rsi - 0x7d]; 
0x00000000001277e0: or bh, bh; jmp qword ptr [rsi + 0x66]; 
0x000000000009a077: or byte ptr [r11 + 0x627709f8], al; lea rdx, [rip + 0xf6d3b]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000082e4a: or byte ptr [r8 + 0x3b], cl; adc byte ptr [r15], cl; sbb dword ptr [rbp - 1], -1; jmp qword ptr [rsi + 0x2e]; 
0x00000000000850c2: or byte ptr [r8 - 0x73], cl; adc eax, 0x10b851; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000fd5c5: or byte ptr [r9 - 0x804b1f], r8b; jmp qword ptr [rsi + 0xf]; 
0x0000000000082e4b: or byte ptr [rax + 0x3b], cl; adc byte ptr [r15], cl; sbb dword ptr [rbp - 1], -1; jmp qword ptr [rsi + 0x2e]; 
0x00000000000850c3: or byte ptr [rax - 0x73], cl; adc eax, 0x10b851; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000337b5: or byte ptr [rax - 0x75], cl; cmp ebp, eax; movabs byte ptr [0xe95bdf8948ffff2b], al; cdq; sub edi, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000007a640: or byte ptr [rax - 0x77], cl; fistp word ptr [rbx + 0x5d]; jmp rax; 
0x000000000013c08b: or byte ptr [rax - 0x77], cl; out dx, eax; pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x000000000014f6d5: or byte ptr [rax], al; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x000000000014f739: or byte ptr [rax], al; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000014f705: or byte ptr [rax], al; mov rsi, rdi; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x00000000000a450f: or byte ptr [rbp + rcx*4 + 0x1d], 0x59; retf 0xe; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000752b7: or byte ptr [rbx + 0x1f772ef9], al; lea rsi, [rip + 0x11b3e0]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000014fe2e: or byte ptr [rbx + 0x5d], bl; jmp rax; 
0x000000000013c945: or byte ptr [rbx + 0x5d], bl; jmp rcx; 
0x000000000009a078: or byte ptr [rbx + 0x627709f8], al; lea rdx, [rip + 0xf6d3b]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000003204f: or byte ptr [rbx - 0x17], bl; or al, byte ptr [rbx - 1]; jmp qword ptr [rsi + 0x2e]; 
0x00000000000eaf68: or byte ptr [rcx + 0x63], cl; or al, 0x89; add rcx, r9; jmp rcx; 
0x00000000000fd5c6: or byte ptr [rcx - 0x804b1f], al; jmp qword ptr [rsi + 0xf]; 
0x000000000005ddb3: or byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rcx - 0x46], al; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x00000000001085f6: or byte ptr [rcx], cl; add al, ch; jb 0x1085c4; bnd jmp qword ptr [rsi - 0x70]; 
0x000000000009f039: or byte ptr [rdi + 0x17], dh; lea r8, [rip + 0xf1ded]; mov edi, edx; movsxd rdi, dword ptr [r8 + rdi*4]; add rdi, r8; jmp rdi; 
0x000000000009eec4: or byte ptr [rdi + 0x1c], dh; lea r9, [rip + 0xf1f1a]; mov edi, ecx; movsxd rdi, dword ptr [r9 + rdi*4]; add rdi, r9; jmp rdi; 
0x000000000009ef99: or byte ptr [rdi + 0x1c], dh; lea rdi, [rip + 0xf1e69]; mov edx, edx; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x0000000000147824: or ch, bh; jmp qword ptr [rsi + 0xf]; 
0x00000000000b0a53: or cl, byte ptr [rsi]; add byte ptr [rax + 0x63], cl; add al, 0xba; add rax, rdx; jmp rax; 
0x00000000000bf9d8: or cl, ch; movsd dword ptr [rdi], dword ptr [rsi]; idiv edi; jmp qword ptr [rsi - 0x70]; 
0x0000000000035989: or dh, byte ptr [rdi + 0x27]; lea rcx, [rip + 0x1545cd]; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x00000000000e7be5: or dword ptr [rax + 1], 0xffffffd8; jmp rax; 
0x00000000000762f8: or dword ptr [rax - 0x75], ecx; mov edi, 0xe0; jmp rax; 
0x00000000000f42c5: or dword ptr [rax], eax; mov r15d, ecx; movsxd rax, dword ptr [rdx + r15*4]; add rax, rdx; jmp rax; 
0x00000000000f3f3a: or dword ptr [rax], eax; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x00000000000f5609: or dword ptr [rax], eax; movzx edx, dl; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x000000000005d593: or dword ptr [rcx], ebx; adc eax, dword ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000009a07b: or dword ptr [rdi + 0x62], esi; lea rdx, [rip + 0xf6d3b]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000075319: or eax, 0x11b442; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x0000000000074c02: or eax, 0x11b859; movzx eax, al; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000074c5c: or eax, 0x11b8bb; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000006d5ac: or eax, 0x122677; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x000000000005f304: or eax, 0x1300ff; movzx edx, dl; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x00000000000581b7: or eax, 0x13672c; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x0000000000057fd1: or eax, 0x1368aa; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000003598e: or eax, 0x1545cd; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x00000000000bd8ab: or eax, 0x1b8ee800; cld; jmp qword ptr [rsi + 0x66]; 
0x00000000000bdd54: or eax, 0x3d8d4800; sub edx, dword ptr [rsi + 0xee8000d]; jno 0xbdd58; jmp qword ptr [rsi + 0x2e]; 
0x000000000016e6ef: or eax, 0x4c000004; add edx, eax; jmp rdx; 
0x000000000014226b: or eax, 0x535d4; mov esi, esi; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000013f8ab: or eax, 0x55bd0; mov esi, esi; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000013c257: or eax, 0x581e8; mov edx, eax; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000016e689: or eax, 0x72; shl ecx, 6; add rcx, r9; jmp rcx; 
0x0000000000062c6a: or eax, 0x85c60000; sar cl, 0xff; jmp qword ptr [rbp + 0x48]; 
0x00000000000e826c: or eax, 0x8d480000; or eax, 0xaa81e; mov r10d, r13d; movsxd rax, dword ptr [rcx + r10*4]; add rax, rcx; jmp rax; 
0x00000000000f3f37: or eax, 0x9f5e4; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000016e6bf: or eax, 0xa3c; and ecx, 0xf; shl ecx, 6; add rcx, r9; jmp rcx; 
0x00000000000e8271: or eax, 0xaa81e; mov r10d, r13d; movsxd rax, dword ptr [rcx + r10*4]; add rax, rcx; jmp rax; 
0x000000000009eec9: or eax, 0xf1f1a; mov edi, ecx; movsxd rdi, dword ptr [r9 + rdi*4]; add rdi, r9; jmp rdi; 
0x00000000000466e0: or eax, 0xfe78e900; std; jmp qword ptr [rsi + 0xf]; 
0x00000000000d5f17: or eax, dword ptr [rax]; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000df256: or eax, dword ptr [rax]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000d9464: or eax, dword ptr [rax]; movsxd rax, dword ptr [rdx + rbp*4]; add rax, rdx; jmp rax; 
0x00000000000d6353: or eax, dword ptr [rax]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000db6ea: or eax, dword ptr [rax]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000d9aac: or eax, dword ptr [rax]; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x00000000000e0101: or eax, dword ptr [rax]; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000e002a: or eax, dword ptr [rax]; movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x000000000008d144: or ebp, ecx; idiv dil; jmp qword ptr [rsi + 0xf]; 
0x0000000000040f6c: or ebp, ecx; loope 0x40f70; jmp qword ptr [rsi + 0xf]; 
0x0000000000117ac4: or ebp, ecx; mov dh, 0x4e; std; jmp qword ptr [rsi + 0xf]; 
0x00000000001173d4: or ebp, ecx; out 0x9a, al; stc; jmp qword ptr [rsi + 0xf]; 
0x0000000000117b84: or ebp, ecx; out 0xa5, al; stc; jmp qword ptr [rsi + 0xf]; 
0x00000000001033b4: or ebp, ecx; push rsi; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x00000000001175d4: or ebp, ecx; push rsi; popfq; stc; jmp qword ptr [rsi + 0xf]; 
0x0000000000075b8f: or ebx, edi; jmp qword ptr [rsi + 0x2e]; 
0x0000000000140d51: or edx, dword ptr [rsi - 0x12]; jmp qword ptr [rsi + 0x66]; 
0x00000000000f42ef: or esi, esp; jmp qword ptr [rsi + 0xf]; 
0x00000000000e5b24: or spl, sil; jmp qword ptr [rsi + 0xf]; 
0x00000000000c41c7: out 0x31, al; jmp qword ptr [rsi + 0x48]; 
0x00000000001173d6: out 0x9a, al; stc; jmp qword ptr [rsi + 0xf]; 
0x0000000000117b86: out 0xa5, al; stc; jmp qword ptr [rsi + 0xf]; 
0x000000000015bc05: out 0xaf, eax; sti; jmp qword ptr [rsi + 0x66]; 
0x00000000000d90b2: out 0xb, al; add al, ch; mov dh, 0xbd; cmc; jmp qword ptr [rsi + 0xf]; 
0x0000000000128596: out 0xe8, eax; fucomp st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000014fdc4: out 0xee, al; jmp qword ptr [rsi + 0xf]; 
0x000000000016e6ea: out 0xf0, eax; lea rdx, [rip + 0x40d]; add rdx, r8; jmp rdx; 
0x00000000000d67f2: out 0xf5, al; jmp qword ptr [rsi + 0x2e]; 
0x00000000001399af: out 0xfd, eax; jmp qword ptr [rsi + 0x66]; 
0x00000000001298f2: out 0xfe, eax; jmp qword ptr [rsi + 0x2e]; 
0x000000000005e003: out 0xff, al; jmp qword ptr [rsi + 0x2e]; 
0x000000000005e537: out 0xff, al; jmp qword ptr [rsi + 0xf]; 
0x000000000005deb4: out 0xff, eax; inc edi; and al, 0x38; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x0000000000050ea5: out 0xff, eax; jmp qword ptr [rsi + 0xf]; 
0x000000000005adcd: out dx, al; add dword ptr [rax - 0x8a743], eax; jmp qword ptr [rax]; 
0x000000000013d7d3: out dx, al; jmp qword ptr [rsi + 0x66]; 
0x0000000000136a2c: out dx, al; jmp qword ptr [rsi + 0xf]; 
0x000000000013c48c: out dx, al; jmp qword ptr [rsi - 0x70]; 
0x000000000013a97e: out dx, al; mov rcx, rbx; xor eax, eax; pop rbx; pop rbp; jmp rcx; 
0x000000000007a1dc: out dx, al; mov rdi, rbx; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000001390ce: out dx, al; out dx, eax; std; jmp qword ptr [rsi + 0x66]; 
0x000000000010ef6e: out dx, al; cld; jmp qword ptr [rsi + 0xf]; 
0x00000000000f73de: out dx, eax; bnd jmp qword ptr [rsi + 0x2e]; 
0x000000000012858d: out dx, eax; dec dword ptr [rax - 0x77]; fidiv dword ptr [rcx]; test byte ptr [rcx + rcx*4 - 0x19], -0x18; fucomp st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000013532f: out dx, eax; jmp qword ptr [rsi + 0x2e]; 
0x000000000013514f: out dx, eax; jmp qword ptr [rsi + 0x66]; 
0x000000000012859a: out dx, eax; jmp qword ptr [rsi + 0xf]; 
0x0000000000141ddc: out dx, eax; jmp qword ptr [rsi - 0x70]; 
0x000000000013c08e: out dx, eax; pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x00000000000bdf27: out dx, eax; cli; jmp qword ptr [rsi + 0xf]; 
0x00000000000fb41d: out dx, eax; std; jmp qword ptr [rsi + 0x45]; 
0x00000000001390cf: out dx, eax; std; jmp qword ptr [rsi + 0x66]; 
0x00000000000fd5c2: outsb dx, byte ptr [rsi]; ror byte ptr [rbx - 0x1e7ef7b9], 0xb4; jg 0xfd5cb; jmp qword ptr [rsi + 0xf]; 
0x00000000000417a0: outsb dx, byte ptr [rsi]; sldt word ptr [rax]; movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000007feaf: outsb dx, byte ptr [rsi]; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000138c4e: outsb dx, byte ptr [rsi]; hlt; std; jmp qword ptr [rsi + 0x66]; 
0x00000000000a80ae: outsd dx, dword ptr [rsi]; fsub st(1), st(0); imul edi, edi, -1; jmp qword ptr [rsi + 0x66]; 
0x000000000004990c: outsd dx, dword ptr [rsi]; jmp qword ptr [rsi - 0x70]; 
0x00000000000d6481: outsd dx, dword ptr [rsi]; mov ebp, 0x6348000b; add al, 0x9a; add rax, rdx; jmp rax; 
0x00000000000db6e9: outsd dx, dword ptr [rsi]; or eax, dword ptr [rax]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000016d144: outsd dx, dword ptr [rsi]; pop rcx; jmp qword ptr [rdx - 0x2f]; 
0x000000000013838d: outsd dx, dword ptr [rsi]; sar edi, 1; jmp qword ptr [rsi + 0x66]; 
0x000000000003be6c: outsd dx, dword ptr [rsi]; sbb byte ptr [rbx + rcx*4 + 0x77], cl; and byte ptr [rbx + rcx*4 + 0x7f], cl; sub byte ptr [rcx - 0x3b76b310], cl; mov rbp, r9; jmp rdx; 
0x000000000016c224: outsd dx, dword ptr [rsi]; xchg rsi, rax; jmp qword ptr [rdx - 0xd]; 
0x000000000013874d: outsd dx, dword ptr [rsi]; stc; std; jmp qword ptr [rsi + 0x66]; 
0x00000000001411a7: outsd dx, dword ptr [rsi]; std; jmp qword ptr [rsi + 0xf]; 
0x0000000000070ace: paddd mm7, mm7; jmp qword ptr [rsi + 0xf]; 
0x00000000000e5b1b: pcmpeqw mm1, qword ptr [rdx + 0x3c8bf]; add al, ch; or spl, sil; jmp qword ptr [rsi + 0xf]; 
0x0000000000027603: pop r12; jmp rax; 
0x0000000000147679: pop r12; mov edx, 0xffffffff; pop r13; xor eax, eax; pop r14; jmp rcx; 
0x0000000000077ba9: pop r12; pop r13; jmp rax; 
0x00000000000275af: pop r12; pop r13; pop r14; jmp rax; 
0x000000000002a37d: pop r12; pop r13; pop r14; pop r15; jmp rax; 
0x0000000000077bab: pop r13; jmp rax; 
0x00000000000275b1: pop r13; pop r14; jmp rax; 
0x000000000002a37f: pop r13; pop r14; pop r15; jmp rax; 
0x0000000000147680: pop r13; xor eax, eax; pop r14; jmp rcx; 
0x00000000000275b3: pop r14; jmp rax; 
0x0000000000147684: pop r14; jmp rcx; 
0x000000000002a381: pop r14; pop r15; jmp rax; 
0x000000000002a383: pop r15; jmp rax; 
0x0000000000142aed: pop r8; add al, byte ptr [rax]; add byte ptr [rax], al; add rdi, 0x58; jmp rcx; 
0x000000000014f59c: pop r8; add rsp, 0x40; pop rbx; jmp rax; 
0x0000000000142aee: pop rax; add al, byte ptr [rax]; add byte ptr [rax], al; add rdi, 0x58; jmp rcx; 
0x000000000014f59d: pop rax; add rsp, 0x40; pop rbx; jmp rax; 
0x0000000000101682: pop rax; bnd jmp qword ptr [rsi + 0x66]; 
0x000000000005acbd: pop rax; idiv edi; jmp qword ptr [rax]; 
0x000000000002e19e: pop rax; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000142af6: pop rax; jmp rcx; 
0x00000000001336fc: pop rax; mov cl, 6; add al, ch; imul edx, dword ptr [rdi], -0x10; jmp qword ptr [rsi + 0x2e]; 
0x00000000000f48b1: pop rax; mov r10d, dword ptr [rsp + 0x60]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000050ea4: pop rax; out 0xff, eax; jmp qword ptr [rsi + 0xf]; 
0x00000000000fbaf2: pop rbp; add al, ch; test al, 0xf2; jmp qword ptr [rsi - 0x7d]; 
0x0000000000077bac: pop rbp; jmp rax; 
0x000000000013a985: pop rbp; jmp rcx; 
0x000000000013c092: pop rbp; jmp rdx; 
0x0000000000027602: pop rbp; pop r12; jmp rax; 
0x0000000000077ba8: pop rbp; pop r12; pop r13; jmp rax; 
0x000000000002a37c: pop rbp; pop r12; pop r13; pop r14; pop r15; jmp rax; 
0x00000000000275b2: pop rbp; pop r14; jmp rax; 
0x000000000002a380: pop rbp; pop r14; pop r15; jmp rax; 
0x0000000000142b23: pop rbp; sub eax, 0xf6890005; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x0000000000147681: pop rbp; xor eax, eax; pop r14; jmp rcx; 
0x000000000013c989: pop rbx; add rdi, 0x23b0; pop rbp; jmp rcx; 
0x00000000001013ce: pop rbx; bnd jmp qword ptr [rsi + 0x66]; 
0x0000000000082d44: pop rbx; jmp rax; 
0x0000000000102934: pop rbx; mov esi, 2; pop rbp; pop r12; jmp rax; 
0x000000000007c688: pop rbx; mov rax, qword ptr [rax + 0xe0]; mov rax, qword ptr [rax + 0x20]; jmp rax; 
0x000000000007a644: pop rbx; pop rbp; jmp rax; 
0x000000000013a984: pop rbx; pop rbp; jmp rcx; 
0x0000000000027601: pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000000077d76: pop rbx; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000000027545: pop rbx; ror rax, 0x11; xor rax, qword ptr fs:[0x30]; jmp rax; 
0x000000000013c08f: pop rbx; xor eax, eax; pop rbp; jmp rdx; 
0x000000000009ea22: pop rbx; std; jmp qword ptr [rsi + 0x2e]; 
0x00000000000681f3: pop rcx; add al, 0; add byte ptr [rax + 0x63], cl; or al, 0x8a; add rcx, rdx; jmp rcx; 
0x000000000008537e: pop rcx; add rsp, 0x30; pop rbx; jmp rax; 
0x0000000000132d13: pop rcx; and eax, esi; jmp qword ptr [rsi + 0xf]; 
0x00000000000612da: pop rcx; idiv edi; jmp qword ptr [rsi - 0x70]; 
0x000000000016d145: pop rcx; jmp qword ptr [rdx - 0x2f]; 
0x000000000016cb18: pop rcx; jmp qword ptr [rdx - 0xf]; 
0x00000000000a4513: pop rcx; retf 0xe; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4493: pop rcx; retf 0xe; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000116a43: pop rcx; hlt; jmp qword ptr [rsi + 0x2e]; 
0x0000000000119c5d: pop rdi; in al, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x000000000002a384: pop rdi; jmp rax; 
0x00000000000fb9da: pop rdi; or al, ch; jg 0xfb988; bnd jmp qword ptr [rsi - 0x7d]; 
0x0000000000088f2d: pop rdi; sti; jmp qword ptr [rsi + 0xf]; 
0x00000000000a98ea: pop rdx; js 0xa98fb; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000005d4c2: pop rdx; sbb dl, byte ptr [rbx]; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rcx; jmp rax; 
0x000000000014e91c: pop rdx; clc; call qword ptr [rax - 0x1de417]; jmp qword ptr [rsi + 0x2e]; 
0x000000000014267e: pop rdx; std; jmp qword ptr [rsi + 0x66]; 
0x000000000007e912: pop rdx; sti; jmp qword ptr [rsi + 0x2e]; 
0x00000000000275b4: pop rsi; jmp rax; 
0x0000000000147685: pop rsi; jmp rcx; 
0x000000000017a97e: pop rsi; mov bh, 0xf0; jmp qword ptr [rsi + 0xf]; 
0x0000000000130556: pop rsi; out dx, eax; jmp qword ptr [rsi + 0xf]; 
0x000000000002a382: pop rsi; pop r15; jmp rax; 
0x000000000005c0a5: pop rsp; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x0000000000027604: pop rsp; jmp rax; 
0x000000000013a71d: pop rsp; lea rsi, [rax + 0x48]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x000000000014767a: pop rsp; mov edx, 0xffffffff; pop r13; xor eax, eax; pop r14; jmp rcx; 
0x0000000000077baa: pop rsp; pop r13; jmp rax; 
0x00000000000275b0: pop rsp; pop r13; pop r14; jmp rax; 
0x000000000002a37e: pop rsp; pop r13; pop r14; pop r15; jmp rax; 
0x00000000001013cd: pop rsp; pop rbx; bnd jmp qword ptr [rsi + 0x66]; 
0x00000000001185ad: psubq mm7, mm7; jmp qword ptr [rsi + 0x2e]; 
0x0000000000137ced: psubusb mm7, mm7; jmp qword ptr [rsi + 0x66]; 
0x0000000000081efc: push -0x17ffeeb2; imul ebp, dword ptr [rdi], -5; jmp qword ptr [rsi + 0x66]; 
0x000000000013318f: push -0x2617fffa; sbb al, 0xf0; jmp qword ptr [rsi + 0xf]; 
0x000000000013d8e1: push -0xe617; jmp qword ptr [rsi + 0xf]; 
0x000000000014162f: push -3; jmp qword ptr [rsi + 0x66]; 
0x00000000000d6bd7: push -4; jmp qword ptr [rsi + 0xf]; 
0x000000000004f0ac: push 0x2444c748; jo 0x4f0b3; add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x70], cl; jmp qword ptr [rsi + 0xf]; 
0x000000000014f6da: push 0x48000003; test eax, eax; je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x0000000000084bda: push 0x48000003; test eax, eax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x0000000000084c0a: push 0x48000003; test eax, eax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x0000000000084c5a: push 0x48000003; test eax, eax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x0000000000057fd3: push 0x63480013; add al, 0x81; add rax, rcx; jmp rax; 
0x0000000000050d07: push 0x78e90012; in eax, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000006c2e3: push 1; jmp rax; 
0x00000000001421ee: push 2; add rdi, 0x68; jmp rcx; 
0x00000000001033b2: push qword ptr [rbx + rcx - 0x17]; push rsi; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x000000000005de43: push rax; add dword ptr [rax], eax; add byte ptr [rax], al; jmp rax; 
0x00000000000f3c78: push rax; fiadd word ptr [rax + 0x11771dfa]; movzx edx, dl; movsxd rdx, dword ptr [r15 + rdx*4]; add rdx, r15; jmp rdx; 
0x00000000000fb0a9: push rax; jmp qword ptr [rsi - 0x7d]; 
0x000000000007881e: push rax; loope 0x7881b; jmp qword ptr [rsi + 0x2e]; 
0x000000000013a71c: push rax; pop rsp; lea rsi, [rax + 0x48]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x000000000004f0ab: push rax; push 0x2444c748; jo 0x4f0b3; add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x70], cl; jmp qword ptr [rsi + 0xf]; 
0x000000000005bf16: push rbp; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000100a69: push rbx; jbe 0x100a6d; add byte ptr [rax - 0x77], cl; vpmulhw xmm4, xmm2, xmmword ptr [rbx - 0xe]; jmp qword ptr [rsi + 0x2e]; 
0x00000000000ccad7: push rbx; lea rdx, [rip + 0xc520d]; mov eax, ecx; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000ccb06: push rbx; or al, 0; mov edx, eax; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x000000000013b5f9: push rbx; sbb bl, ch; mov esi, 0xfdcabee8; jmp qword ptr [rsi + 0x66]; 
0x00000000000c5cfc: push rcx; jmp qword ptr [rsi - 0x70]; 
0x00000000000850c7: push rcx; mov eax, 0x63480010; add al, 0x82; add rax, rdx; jmp rax; 
0x00000000000851e4: push rcx; mov rax, qword ptr [rax + 0x38]; add rsp, 0x38; jmp rax; 
0x00000000000790ee: push rcx; fsqrt; jmp qword ptr [rsi + 0x2e]; 
0x0000000000038259: push rdi; and dl, byte ptr [rip - 0x3f49f100]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000de605: push rdi; jge 0xde5fc; dec dword ptr [rax - 0x77]; fistp word ptr [rbx - 0x17]; jge 0xde605; jmp qword ptr [rsi + 0x66]; 
0x000000000011089c: push rdi; int1; jmp qword ptr [rsi + 0x48]; 
0x00000000000ccadc: push rdx; or al, 0; mov eax, ecx; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000ba7b6: push rsi; fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x00000000000f3e62: push rsi; idiv bh; jmp qword ptr [rsi + 0x2e]; 
0x00000000001033b6: push rsi; idiv bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000140d52: push rsi; out dx, al; jmp qword ptr [rsi + 0x66]; 
0x000000000014fdbe: push rsi; sub cl, byte ptr [rax]; add al, ch; sub esi, esp; out dx, al; jmp qword ptr [rsi + 0xf]; 
0x00000000001175d6: push rsi; popfq; stc; jmp qword ptr [rsi + 0xf]; 
0x0000000000029048: push rsp; adc dword ptr [rdi], edx; add byte ptr [rcx], dh; div byte ptr [rcx]; jmp qword ptr [rsi + 0xf]; 
0x00000000000f48b4: push rsp; and al, 0x60; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000aee78: push rsp; and eax, 0x634b000e; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000084c53: rcl byte ptr [r8 + rax], cl; mov rax, qword ptr [rdx + 0x368]; test rax, rax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x0000000000084bd4: rcl byte ptr [rax + rax], cl; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x0000000000084c04: rcl byte ptr [rax + rax], cl; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x0000000000084c54: rcl byte ptr [rax + rax], cl; mov rax, qword ptr [rdx + 0x368]; test rax, rax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x00000000000af7ec: rcl byte ptr [rax], 0x4c; lea ebx, [rip + 0xe1c6b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a50ac: rcl byte ptr [rax], 0x4c; lea ebx, [rip + 0xebf4b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000077d75: rcr byte ptr [rbx + 0x5d], cl; pop r12; pop r13; jmp rax; 
0x000000000013f8ac: rcr byte ptr [rbx + 5], 1; add byte ptr [rcx + 0x46348f6], cl; mov cl, 0x48; add eax, ecx; jmp rax; 
0x000000000006dd13: rcr dword ptr [rdi], 0x12; add byte ptr [rax + 0x63], cl; add al, 0x9e; add rax, rsi; jmp rax; 
0x000000000005d0d2: retf 0x131f; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rcx; jmp rax; 
0x00000000000aec6d: retf 0x8d4c; sbb eax, 0xe26db; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac75d: retf 0x8d4c; sbb eax, 0xe4aa3; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a992d: retf 0x8d4c; sbb eax, 0xe7813; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76fd: retf 0x8d4c; sbb eax, 0xe9983; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a43ad: retf 0x8d4c; sbb eax, 0xecb3b; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c5d: retf 0x8d4c; sbb eax, 0xed1ff; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44c7: retf 0xe; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4494: retf 0xe; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76ba: retf 0xe99; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ba7a2: retf 0xf7a6; jmp qword ptr [rsi + 0x2e]; 
0x00000000000d8e93: retf 0xfff4; jmp qword ptr [rsi + 0xf]; 
0x0000000000060752: retf 0xfff6; jmp qword ptr [rsi + 0x2e]; 
0x0000000000178d6a: retf 0xfff8; jmp qword ptr [rsi - 0x70]; 
0x000000000014de22: retf 0xfffc; jmp qword ptr [rsi + 0x2e]; 
0x0000000000036e22: retf 0xffff; jmp qword ptr [rsi + 0x2e]; 
0x0000000000147a4e: rol bl, 1; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x40]; 
0x000000000011d1cf: rol byte ptr [rax - 0x80], 1; jmp qword ptr [rax]; 
0x0000000000160425: rol byte ptr [rcx + rbp - 0x40], 0xe9; imul edi, ebp, -1; jmp qword ptr [rsi - 0x70]; 
0x0000000000057fcb: rol dword ptr [rax], 0; add byte ptr [rax - 0x73], cl; or eax, 0x1368aa; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000b0a4b: rol dword ptr [rax], 1; add byte ptr [rax], al; lea rdx, [rip + 0xe0a8a]; movsxd rax, dword ptr [rdx + rdi*4]; add rax, rdx; jmp rax; 
0x000000000013b0ea: ror bh, cl; std; jmp qword ptr [rsi - 0x70]; 
0x00000000000f5079: ror byte ptr [rax + 0x63], 4; or dword ptr [rax + 1], 0xffffffd8; jmp rax; 
0x00000000000d9ab0: ror byte ptr [rax + 0x63], 4; xchg dword ptr [rax + 1], ecx; clc; jmp rax; 
0x00000000000f3f3e: ror byte ptr [rax + 0x63], cl; adc al, 0x91; add rdx, rcx; jmp rdx; 
0x00000000000f560d: ror byte ptr [rax + 0x63], cl; adc al, 0x96; add rdx, rsi; jmp rdx; 
0x000000000009efa4: ror byte ptr [rax + 0x63], cl; adc al, 0x97; add rdx, rdi; jmp rdx; 
0x000000000005f30b: ror byte ptr [rax + 0x63], cl; add al, 0x91; add rax, rcx; jmp rax; 
0x000000000005f8fb: ror byte ptr [rax + 0x63], cl; add al, 0x96; add rax, rsi; jmp rax; 
0x00000000001403c8: ror byte ptr [rax - 0x77], 0xd6; add rdi, 0x10; jmp rcx; 
0x00000000001403e8: ror byte ptr [rax - 0x77], 0xd6; mov dword ptr [rdi + 0x10], 2; add rdi, 0x10; jmp rcx; 
0x0000000000142ae8: ror byte ptr [rax - 0x77], 0xd6; mov dword ptr [rdi + 0x58], 2; add rdi, 0x58; jmp rcx; 
0x00000000001421e8: ror byte ptr [rax - 0x77], 0xd6; mov dword ptr [rdi + 0x68], 2; add rdi, 0x68; jmp rcx; 
0x000000000013f818: ror byte ptr [rax - 0x77], 0xd6; mov dword ptr [rdi + 0xc8], 2; add rdi, 0xc8; jmp rcx; 
0x00000000000a437f: ror byte ptr [rbp + rcx*4 + 0x1d], cl; imul ecx, ebx, 0x6349000e; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac773: ror byte ptr [rbp + rcx*4 + 0x1d], cl; lea ecx, [rdx + 0xe]; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76b6: ror byte ptr [rbp + rcx*4 + 0x1d], cl; retf 0xe99; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c16: ror byte ptr [rbp + rcx*4 + 0x1d], cl; ror byte ptr [rsi], cl; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000fd5c3: ror byte ptr [rbx - 0x1e7ef7b9], 0xb4; jg 0xfd5cb; jmp qword ptr [rsi + 0xf]; 
0x00000000000f3c81: ror byte ptr [rcx + 0x63], cl; adc al, 0x97; add rdx, r15; jmp rdx; 
0x00000000000a518f: ror byte ptr [rcx + rdi - 0x3e], cl; jb 0xa4490; lea r11, [rip + 0xebdd0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4524: ror byte ptr [rcx + rdi - 0x3e], cl; jb 0xa4490; lea r11, [rip + 0xeca3b]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a450a: ror byte ptr [rcx + rdi - 0x3e], cl; jb 0xa4490; lea r11, [rip + 0xeca59]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44bd: ror byte ptr [rcx + rdi - 0x3e], cl; jb 0xa4490; lea r11, [rip + 0xecaa6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac884: ror byte ptr [rcx + rdi - 0x3e], cl; jb 0xac7f0; lea r11, [rip + 0xe49f3]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac86a: ror byte ptr [rcx + rdi - 0x3e], cl; jb 0xac7f0; lea r11, [rip + 0xe4a11]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac81d: ror byte ptr [rcx + rdi - 0x3e], cl; jb 0xac7f0; lea r11, [rip + 0xe4a5e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af8cf: ror byte ptr [rcx + rdi - 0x3e], cl; jb 0xaed40; lea r11, [rip + 0xe1af0]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedd4: ror byte ptr [rcx + rdi - 0x3e], cl; jb 0xaed40; lea r11, [rip + 0xe25eb]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedba: ror byte ptr [rcx + rdi - 0x3e], cl; jb 0xaed40; lea r11, [rip + 0xe2609]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed6d: ror byte ptr [rcx + rdi - 0x3e], cl; jb 0xaed40; lea r11, [rip + 0xe2656]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000e0aef: ror byte ptr [rdi], 0x84; imul edi, edi, -1; jmp qword ptr [rsi + 0xf]; 
0x00000000000a3ba6: ror byte ptr [rsi], cl; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000082d36: ror dword ptr [rax + 0x39], 1; sal dword ptr [rbx + 0x14], 0x48; mov eax, dword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000000ca7bb: ror dword ptr [rax + 0x63], 1; adc al, 0x96; add rdx, rsi; jmp rdx; 
0x00000000000ca790: ror dword ptr [rax + 0x63], 1; adc al, 0x97; add rdx, rdi; jmp rdx; 
0x00000000000d5f16: ror dword ptr [rbx], 0; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000000a3c62: ror dword ptr [rsi], 1; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000027547: ror eax, 0x11; xor rax, qword ptr fs:[0x30]; jmp rax; 
0x0000000000027546: ror rax, 0x11; xor rax, qword ptr fs:[0x30]; jmp rax; 
0x00000000000f779a: sal bh, 0xc2; jmp rsi; 
0x0000000000040f6a: sal byte ptr [rbp + 0xb], 0xe9; loope 0x40f70; jmp qword ptr [rsi + 0xf]; 
0x000000000013a718: sal byte ptr [rbp + rdx - 0x75], 0x50; pop rsp; lea rsi, [rax + 0x48]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x00000000000832c5: sal byte ptr [rbx + 0x10], 0x48; mov eax, dword ptr [rbx + 0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000000834d7: sal byte ptr [rbx + 0x16], 0x48; mov eax, dword ptr [rbx + 0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000000762f6: sal byte ptr [rcx + rcx + 0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x00000000000763b6: sal byte ptr [rdi + rcx + 0x48], 0x8b; mov edi, 0xe0; jmp rax; 
0x00000000000846fb: sal byte ptr [rdx + rax*8 + 0x4d], 0x85; jmp qword ptr [rsi + 0xf]; 
0x0000000000082d39: sal dword ptr [rbx + 0x14], 0x48; mov eax, dword ptr [rbx + 0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000000048b52: sal dword ptr [rcx], 1; shr cl, cl; fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x00000000000ba7b2: sal dword ptr [rcx], 1; shr cl, cl; push rsi; fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x00000000000a9973: sal dword ptr [rdi + 0xe], 1; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000d6df0: sar al, 0xff; dec dword ptr [rcx - 0x7076b]; jmp qword ptr [rsi + 0xf]; 
0x00000000000d6fa3: sar al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000013b5f7: sar bh, 0x53; sbb bl, ch; mov esi, 0xfdcabee8; jmp qword ptr [rsi + 0x66]; 
0x000000000016f65d: sar bh, 0xff; jmp qword ptr [rsi + 0x66]; 
0x0000000000029041: sar bh, 1; jmp qword ptr [rsi + 0xf]; 
0x0000000000065fe1: sar bh, cl; jmp qword ptr [rsi + 0xf]; 
0x00000000000a519c: sar byte ptr [rbp + 0x634b000e], 1; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000141dda: sar byte ptr [rdx], cl; out dx, eax; jmp qword ptr [rsi - 0x70]; 
0x000000000016d127: sar ch, 0xff; jmp qword ptr [rdx - 0xf]; 
0x000000000013b007: sar ch, 1; jmp qword ptr [rsi + 0xf]; 
0x0000000000062c6f: sar cl, 0xff; jmp qword ptr [rbp + 0x48]; 
0x0000000000063273: sar cl, 0xff; jmp qword ptr [rbp - 0x3a]; 
0x00000000001104ee: sar dh, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000007f7ea: sar dh, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000009dbbe: sar ebp, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000013838e: sar edi, 1; jmp qword ptr [rsi + 0x66]; 
0x00000000001631ae: sar esi, 0xff; jmp qword ptr [rsi + 0x66]; 
0x000000000006a99e: sar esi, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000160e31: sar esp, 0xff; jmp qword ptr [rsi + 0x66]; 
0x0000000000160053: sar esp, 0xff; jmp qword ptr [rsi + 0xf]; 
0x0000000000143da0: sbb al, 0x43; std; jmp qword ptr [rsi + 0x66]; 
0x000000000009ef9b: sbb al, 0x48; lea edi, [rip + 0xf1e69]; mov edx, edx; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x000000000014f733: sbb al, 0x48; mov eax, dword ptr [rip + 0x8275d]; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x000000000009eec6: sbb al, 0x4c; lea ecx, [rip + 0xf1f1a]; mov edi, ecx; movsxd rdi, dword ptr [r9 + rdi*4]; add rdi, r9; jmp rdi; 
0x00000000000af7be: sbb al, 0xe; add byte ptr [rbx + 0x63], cl; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000133194: sbb al, 0xf0; jmp qword ptr [rsi + 0xf]; 
0x00000000001363bf: sbb al, 0xfe; jmp qword ptr [rsi + 0x66]; 
0x000000000013b5fa: sbb bl, ch; mov esi, 0xfdcabee8; jmp qword ptr [rsi + 0x66]; 
0x0000000000082d5f: sbb byte ptr [r11 + 0x480c2474], cl; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000000d6bcf: sbb byte ptr [rax - 0x7b], cl; div byte ptr [rcx + rbx - 0x17]; imul byte ptr [rdx - 4]; jmp qword ptr [rsi + 0xf]; 
0x00000000000ebfcf: sbb byte ptr [rax - 0x7b], cl; div byte ptr [rcx + rbx - 0x17]; not byte ptr [rsi]; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000082d60: sbb byte ptr [rbx + 0x480c2474], cl; mov edi, dword ptr [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000000003be6d: sbb byte ptr [rbx + rcx*4 + 0x77], cl; and byte ptr [rbx + rcx*4 + 0x7f], cl; sub byte ptr [rcx - 0x3b76b310], cl; mov rbp, r9; jmp rdx; 
0x000000000007a1da: sbb byte ptr [rcx - 0x2076b712], cl; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000000af7dc: sbb byte ptr [rsi + rcx], 0; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af8dd: sbb cl, byte ptr [rsi]; add byte ptr [rbx + 0x63], cl; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000001333d4: sbb dh, al; jmp qword ptr [rsi + 0xf]; 
0x000000000005d4c3: sbb dl, byte ptr [rbx]; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rcx; jmp rax; 
0x000000000005d423: sbb dl, byte ptr [rbx]; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rsi; jmp rax; 
0x000000000005d659: sbb dword ptr [r11], edx; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rsi; jmp rax; 
0x0000000000082e51: sbb dword ptr [rbp - 1], -1; jmp qword ptr [rsi + 0x2e]; 
0x000000000005d5f5: sbb dword ptr [rbx], edx; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rcx; jmp rax; 
0x000000000005d594: sbb dword ptr [rbx], edx; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rdi; jmp rax; 
0x000000000005d52a: sbb dword ptr [rbx], edx; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rsi; jmp rax; 
0x00000000000a7701: sbb dword ptr [rcx + 0x6349000e], 0xc; xchg ebx, eax; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000f5076: sbb dword ptr [rdi], ecx; mov dh, 0xc0; movsxd rax, dword ptr [rbx + rax*4]; add rax, rbx; jmp rax; 
0x00000000000466df: sbb dword ptr [rip - 0x1871700], ecx; std; jmp qword ptr [rsi + 0xf]; 
0x00000000000f3c7c: sbb eax, 0xb60f1177; ror byte ptr [rcx + 0x63], cl; adc al, 0x97; add rdx, r15; jmp rdx; 
0x000000000009f040: sbb eax, 0xd789000f; movsxd rdi, dword ptr [r8 + rdi*4]; add rdi, r8; jmp rdi; 
0x00000000000af8db: sbb eax, 0xe1af0; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7f0: sbb eax, 0xe1c6b; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7db: sbb eax, 0xe1c80; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000af7bc: sbb eax, 0xe1c9f; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee77: sbb eax, 0xe2554; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee4e: sbb eax, 0xe257d; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee2e: sbb eax, 0xe259d; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aee05: sbb eax, 0xe25c6; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aede0: sbb eax, 0xe25eb; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aedc2: sbb eax, 0xe2609; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed42: sbb eax, 0xe2609; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aeda5: sbb eax, 0xe2626; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aed75: sbb eax, 0xe2656; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec70: sbb eax, 0xe26db; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec42: sbb eax, 0xe2709; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec19: sbb eax, 0xe2732; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ad0ab: sbb eax, 0xe41d8; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac927: sbb eax, 0xe495c; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8fe: sbb eax, 0xe4985; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8de: sbb eax, 0xe49a5; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8b5: sbb eax, 0xe49ce; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac890: sbb eax, 0xe49f3; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac872: sbb eax, 0xe4a11; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7f2: sbb eax, 0xe4a11; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7d7: sbb eax, 0xe4a2c; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac855: sbb eax, 0xe4a2e; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac825: sbb eax, 0xe4a5e; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac7a2: sbb eax, 0xe4a61; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac776: sbb eax, 0xe4a8d; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac760: sbb eax, 0xe4aa3; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac73e: sbb eax, 0xe4ac5; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac719: sbb eax, 0xe4aea; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac6fc: sbb eax, 0xe4b07; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac695: sbb eax, 0xe4b6e; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a99a7: sbb eax, 0xe779c; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9972: sbb eax, 0xe77d1; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9946: sbb eax, 0xe77fd; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9930: sbb eax, 0xe7813; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a990e: sbb eax, 0xe7835; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a98e9: sbb eax, 0xe785a; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a98cc: sbb eax, 0xe7877; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a9874: sbb eax, 0xe78cf; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7777: sbb eax, 0xe990c; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7742: sbb eax, 0xe9941; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7716: sbb eax, 0xe996d; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7700: sbb eax, 0xe9983; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76de: sbb eax, 0xe99a5; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76b9: sbb eax, 0xe99ca; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a769c: sbb eax, 0xe99e7; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a7644: sbb eax, 0xe9a3f; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a519b: sbb eax, 0xebdd0; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a50b0: sbb eax, 0xebf4b; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a509b: sbb eax, 0xebf60; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a507c: sbb eax, 0xebf7f; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a45c7: sbb eax, 0xec9a4; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a459e: sbb eax, 0xec9cd; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a457e: sbb eax, 0xec9ed; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4555: sbb eax, 0xeca16; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4530: sbb eax, 0xeca3b; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4512: sbb eax, 0xeca59; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4492: sbb eax, 0xeca59; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44f5: sbb eax, 0xeca76; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44c5: sbb eax, 0xecaa6; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a43b0: sbb eax, 0xecb3b; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4382: sbb eax, 0xecb69; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4359: sbb eax, 0xecb92; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3cd7: sbb eax, 0xed188; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3ca2: sbb eax, 0xed1bd; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c76: sbb eax, 0xed1e9; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c60: sbb eax, 0xed1ff; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c3e: sbb eax, 0xed221; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c19: sbb eax, 0xed246; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3bfc: sbb eax, 0xed263; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3ba4: sbb eax, 0xed2bb; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000dae80: sbb eax, 0xfff5bae9; jmp qword ptr [rsi + 0x2e]; 
0x00000000000f3f34: sbb ecx, dword ptr [rax - 0x73]; or eax, 0x9f5e4; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000009cc94: sbb ecx, dword ptr [rax - 0x7d]; mov dword ptr [rcx], 0xffff20e9; jmp qword ptr [rsi - 0x70]; 
0x00000000000d6bd4: sbb ecx, ebp; imul byte ptr [rdx - 4]; jmp qword ptr [rsi + 0xf]; 
0x00000000000ebfd4: sbb ecx, ebp; not byte ptr [rsi]; sti; jmp qword ptr [rsi + 0xf]; 
0x00000000000bd8af: sbb edi, esp; jmp qword ptr [rsi + 0x66]; 
0x00000000001332b4: sbb esi, eax; jmp qword ptr [rsi + 0xf]; 
0x000000000005d6d0: sbb qword ptr [rbx], r10; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rdi; jmp rax; 
0x0000000000065fe0: scasb al, byte ptr [rdi]; sar bh, cl; jmp qword ptr [rsi + 0xf]; 
0x000000000008b2f5: scasd eax, dword ptr [rdi]; add al, 0x11; add al, ch; jb 0x8b297; cli; jmp qword ptr [rsi - 0x70]; 
0x000000000005d726: scasd eax, dword ptr [rdi]; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x000000000012b36c: scasd eax, dword ptr [rdi]; out dx, eax; jmp qword ptr [rsi + 0xf]; 
0x000000000007bb51: scasd eax, dword ptr [rdi]; cli; jmp qword ptr [rsi + 0x66]; 
0x0000000000089ecf: scasd eax, dword ptr [rdi]; cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000141a0d: scasd eax, dword ptr [rdi]; std; jmp qword ptr [rsi + 0x66]; 
0x000000000015bc06: scasd eax, dword ptr [rdi]; sti; jmp qword ptr [rsi + 0x66]; 
0x000000000016e68e: shl ecx, 6; add rcx, r9; jmp rcx; 
0x000000000002903e: shr al, 0x1c; sar bh, 1; jmp qword ptr [rsi + 0xf]; 
0x00000000000dafa2: shr al, 0x28; mov bl, 0xf4; jmp qword ptr [rsi + 0xf]; 
0x00000000000d9332: shr al, 0xd8; int 0xf4; jmp qword ptr [rsi + 0xf]; 
0x000000000004077e: shr al, cl; insb byte ptr [rdi], dx; fdiv st(7), st(0); jmp qword ptr [rsi + 0x2e]; 
0x0000000000048b54: shr cl, cl; fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x00000000000ba7b4: shr cl, cl; push rsi; fdivp st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000013d59c: shr eax, 0x1e; stosd dword ptr [rdi], eax; std; jmp qword ptr [rsi + 0x66]; 
0x000000000014462d: shr eax, cl; lea edi, [rdx]; std; jmp qword ptr [rsi + 0x66]; 
0x0000000000117ab6: shr ebx, 1; mov esp, 0xfff132e8; jmp qword ptr [rsi - 0x70]; 
0x000000000010ef69: sldt word ptr [rax]; add al, ch; out dx, al; cld; jmp qword ptr [rsi + 0xf]; 
0x00000000000417a1: sldt word ptr [rax]; movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000005a872: stosb byte ptr [rdi], al; adc r8d, dword ptr [r8]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000d9469: stosb byte ptr [rdi], al; add rax, rdx; jmp rax; 
0x0000000000057fd2: stosb byte ptr [rdi], al; push 0x63480013; add al, 0x81; add rax, rcx; jmp rax; 
0x0000000000039732: stosb byte ptr [rdi], al; unpckhps xmm0, xmmword ptr [rax]; mov r8d, r8d; movsxd rsi, dword ptr [rdi + r8*4]; add rsi, rdi; jmp rsi; 
0x000000000009b837: stosb byte ptr [rdi], al; clc; jmp qword ptr [rsi + 0xf]; 
0x000000000009131b: stosb byte ptr [rdi], al; cli; jmp qword ptr [rsi - 0x70]; 
0x000000000009ae4b: stosb byte ptr [rdi], al; stc; jmp qword ptr [rsi - 0x70]; 
0x0000000000123eb1: stosd dword ptr [rdi], eax; and al, 0xf0; jmp qword ptr [rsi + 0x66]; 
0x00000000000d5f15: stosd dword ptr [rdi], eax; ror dword ptr [rbx], 0; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x000000000014d53f: stosd dword ptr [rdi], eax; cld; jmp qword ptr [rsi + 0x66]; 
0x000000000007b71b: stosd dword ptr [rdi], eax; cli; jmp qword ptr [rsi + 0x49]; 
0x000000000013d59f: stosd dword ptr [rdi], eax; std; jmp qword ptr [rsi + 0x66]; 
0x000000000013d504: stosd dword ptr [rdi], eax; std; jmp qword ptr [rsi + 0xf]; 
0x000000000009a083: str word ptr [rax + 0x63]; add al, 0x82; add rax, rdx; jmp rax; 
0x000000000009efa1: str word ptr [rcx + 0x146348d2]; xchg edi, eax; add rdx, rdi; jmp rdx; 
0x0000000000143c90: sub al, 0x44; std; jmp qword ptr [rsi + 0x66]; 
0x00000000000581b8: sub al, 0x67; adc eax, dword ptr [rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000008b840: sub al, 0x96; cli; jmp qword ptr [rsi + 0x66]; 
0x0000000000145490: sub al, 0xfd; jmp qword ptr [rsi + 0x66]; 
0x0000000000049be0: sub al, 1; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; imul eax, dword ptr [rdx], 0xfffd50e9; jmp qword ptr [rsi - 0x70]; 
0x00000000000c3eb4: sub al, 9; add byte ptr [rcx - 0x7f], al; jmp qword ptr [rax]; 
0x0000000000145681: sub bh, ch; jmp qword ptr [rsi + 0x66]; 
0x00000000000beb2d: sub bh, cl; jmp qword ptr [rsi + 0x3d]; 
0x00000000000e0121: sub byte ptr [r11], r9b; add byte ptr [rbp + 0xf], al; mov dh, 0xe4; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x000000000009dbb8: sub byte ptr [rax - 0x7d], cl; in eax, dx; add ecx, ebp; sar ebp, 0xff; jmp qword ptr [rsi + 0xf]; 
0x00000000000f01c6: sub byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx - 0x6f773], cl; jmp qword ptr [rsi + 0xf]; 
0x00000000000851df: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x85236; mov rax, qword ptr [rax + 0x38]; add rsp, 0x38; jmp rax; 
0x0000000000085379: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x853d8; add rsp, 0x30; pop rbx; jmp rax; 
0x00000000000854b8: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x8550b; add rsp, 0x30; pop rbx; jmp rax; 
0x000000000006d1f0: sub byte ptr [rax], ch; adc al, byte ptr [rax]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000e0122: sub byte ptr [rbx], cl; add byte ptr [rbp + 0xf], al; mov dh, 0xe4; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x000000000006af14: sub byte ptr [rcx + 0x12], cl; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rsi; jmp rax; 
0x000000000003be75: sub byte ptr [rcx - 0x3b76b310], cl; mov rbp, r9; jmp rdx; 
0x000000000005d5f4: sub byte ptr [rcx], bl; adc eax, dword ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000016c223: sub byte ptr [rdi + 0x4c], ch; xchg esi, eax; jmp qword ptr [rdx - 0xd]; 
0x0000000000164b5a: sub byte ptr [rdi + 0x7f], bh; jmp qword ptr [rdx - 0x1f]; 
0x000000000006d1f1: sub byte ptr [rdx], dl; add byte ptr [rax + 0x63], cl; or al, 0x8e; add rcx, rsi; jmp rcx; 
0x000000000014fdbf: sub cl, byte ptr [rax]; add al, ch; sub esi, esp; out dx, al; jmp qword ptr [rsi + 0xf]; 
0x0000000000081b35: sub cl, byte ptr [rdi]; mov dh, 0xc0; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x000000000014cfdb: sub dword ptr [rax + rdi*8 - 1], 0xdae8c7eb; mov al, 0xfc; jmp qword ptr [rsi + 0x2e]; 
0x00000000000d9aa6: sub dword ptr [rax - 0x73], ecx; cmp eax, 0xb89fe; movzx eax, al; movsxd rax, dword ptr [rdi + rax*4]; add rax, rdi; jmp rax; 
0x0000000000115c5b: sub dword ptr [rbp + 0xce80008], eax; int1; jmp qword ptr [rsi + 0x2e]; 
0x000000000003745f: sub dword ptr [rbx], ebp; adc eax, 0xc0b60f00; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000146d93: sub dword ptr [rbx], edx; std; jmp qword ptr [rsi + 0xf]; 
0x0000000000074b54: sub dword ptr [rdi + 0x31], esi; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000075227: sub dword ptr [rdi + 0xe], esi; movsxd rdx, dword ptr [rcx + r10*4]; add rdx, rcx; jmp rdx; 
0x00000000000379e3: sub dword ptr [rsi], esp; adc eax, 0xc0b60f00; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000aec39: sub eax, 0x10; bsf rdx, rdx; lea r11, [rip + 0xe2709]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4379: sub eax, 0x10; bsf rdx, rdx; lea r11, [rip + 0xecb69]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000d6477: sub eax, 0x2a2870f; add byte ptr [rax], al; lea rdx, [rip + 0xbbd6f]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x000000000014f596: sub eax, 0x48000001; mov eax, dword ptr [rbx + 0x58]; add rsp, 0x40; pop rbx; jmp rax; 
0x0000000000110896: sub eax, 0xe8ee8948; xchg ecx, eax; push rdi; int1; jmp qword ptr [rsi + 0x48]; 
0x0000000000142b24: sub eax, 0xf6890005; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x00000000001456e2: sub ebp, edi; jmp qword ptr [rsi + 0x66]; 
0x000000000006d5a3: sub ecx, dword ptr [rdi]; xchg dword ptr [rsi + 0x48000007], ebp; lea ecx, [rip + 0x122677]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x0000000000031931: sub ecx, dword ptr [rdx - 1]; jmp qword ptr [rsi + 0x41]; 
0x000000000010177b: sub edi, ebp; jmp qword ptr [rsi - 0x70]; 
0x00000000000337bb: sub edi, edi; dec dword ptr [rax - 0x77]; fistp word ptr [rbx - 0x17]; cdq; sub edi, edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000125520: sub edi, edi; jmp qword ptr [rsi + 0x2e]; 
0x00000000000337c4: sub edi, edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000083762: sub edi, edx; jmp qword ptr [rsi + 0xf]; 
0x0000000000075221: sub edx, 0x20; cmp r10d, 0x29; ja 0x75238; movsxd rdx, dword ptr [rcx + r10*4]; add rdx, rcx; jmp rdx; 
0x0000000000037460: sub edx, dword ptr [rip - 0x3f49f100]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000bdd59: sub edx, dword ptr [rsi + 0xee8000d]; jno 0xbdd58; jmp qword ptr [rsi + 0x2e]; 
0x00000000000aec6c: sub edx, ecx; lea r11, [rip + 0xe26db]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac75c: sub edx, ecx; lea r11, [rip + 0xe4aa3]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a992c: sub edx, ecx; lea r11, [rip + 0xe7813]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76fc: sub edx, ecx; lea r11, [rip + 0xe9983]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a43ac: sub edx, ecx; lea r11, [rip + 0xecb3b]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c5c: sub edx, ecx; lea r11, [rip + 0xed1ff]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000092504: sub edx, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000014fdc3: sub esi, esp; out dx, al; jmp qword ptr [rsi + 0xf]; 
0x0000000000075220: sub r10d, 0x20; cmp r10d, 0x29; ja 0x75238; movsxd rdx, dword ptr [rcx + r10*4]; add rdx, rcx; jmp rdx; 
0x00000000000aec38: sub r8, 0x10; bsf rdx, rdx; lea r11, [rip + 0xe2709]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a4378: sub r8, 0x10; bsf rdx, rdx; lea r11, [rip + 0xecb69]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000aec6b: sub rdx, rcx; lea r11, [rip + 0xe26db]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac75b: sub rdx, rcx; lea r11, [rip + 0xe4aa3]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a992b: sub rdx, rcx; lea r11, [rip + 0xe7813]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a76fb: sub rdx, rcx; lea r11, [rip + 0xe9983]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a43ab: sub rdx, rcx; lea r11, [rip + 0xecb3b]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c5b: sub rdx, rcx; lea r11, [rip + 0xed1ff]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000014fbc7: test ah, bh; jmp qword ptr [rsi + 0xf]; 
0x00000000000fbaf6: test al, 0xf2; jmp qword ptr [rsi - 0x7d]; 
0x000000000009b82b: test al, 0xf8; jmp qword ptr [rsi - 0x70]; 
0x0000000000140416: test bl, bh; jmp qword ptr [rsi - 0x7d]; 
0x000000000013f8b1: test byte ptr [rax + 0x63], 4; mov cl, 0x48; add eax, ecx; jmp rax; 
0x00000000000d5f1a: test byte ptr [rax + 0x63], 4; mov dl, 0x48; add eax, edx; jmp rax; 
0x00000000000daf9b: test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0x28; mov bl, 0xf4; jmp qword ptr [rsi + 0xf]; 
0x00000000000d932b: test byte ptr [rax + rbx*4], ah; add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0xd8; int 0xf4; jmp qword ptr [rsi + 0xf]; 
0x00000000000f7793: test byte ptr [rax + rbx*4], ah; add dword ptr [rax], eax; add byte ptr [rcx], dh; sal bh, 0xc2; jmp rsi; 
0x0000000000141625: test byte ptr [rax + rcx*8], ah; add dword ptr [rax], eax; add bl, ch; mov eax, 0xfd6a8ee8; jmp qword ptr [rsi + 0x66]; 
0x000000000006c26a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip - 0x1a4a]; mov dword ptr [rsp + 0x38], 1; jmp rax; 
0x000000000006c1da: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov ecx, 1; xor ebp, ebp; jmp rax; 
0x0000000000147a5a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x48]; 
0x0000000000050e9f: test byte ptr [rcx + rbp - 0x28], 0xe9; pop rax; out 0xff, eax; jmp qword ptr [rsi + 0xf]; 
0x0000000000128593: test byte ptr [rcx + rcx*4 - 0x19], -0x18; fucomp st(7); jmp qword ptr [rsi + 0xf]; 
0x000000000007e90e: test byte ptr [rcx], dl; add al, ch; pop rdx; sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000004fb12: test byte ptr [rdi + rsi*8 - 1], ch; jmp qword ptr [rsi + 0xf]; 
0x0000000000138bb6: test cl, -1; jmp qword ptr [rsi + 0xf]; 
0x000000000005f1d6: test dword ptr [rax + 0x48fffff9], esp; mov ecx, dword ptr [rbp - 0x668]; add rax, rsi; jmp rax; 
0x000000000017636c: test dword ptr [rax - 0x16000009], edi; cli; idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x000000000009b825: test dword ptr [rax - 0x77], 0xa882e9c6; clc; jmp qword ptr [rsi - 0x70]; 
0x000000000013a715: test dword ptr [rax - 0x7b], 0x8b1574c0; push rax; pop rsp; lea rsi, [rax + 0x48]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x00000000000f6d79: test dword ptr [rax], eax; add rax, r13; jmp rax; 
0x0000000000115c5c: test dword ptr [rax], ecx; add al, ch; or al, 0xf2; int1; jmp qword ptr [rsi + 0x2e]; 
0x00000000000f6d78: test dword ptr [rax], r8d; add rax, r13; jmp rax; 
0x0000000000147678: test dword ptr [rcx + 0x5c], 0xffffffba; inc dword ptr [rcx + 0x5d]; xor eax, eax; pop r14; jmp rcx; 
0x00000000000ac8ff: test dword ptr [rcx + 0xe], ecx; add byte ptr [rbx + 0x63], cl; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000145421: test dword ptr [rdi + rdi*8 - 1], ecx; jmp qword ptr [rsi + 0x2e]; 
0x000000000005460f: test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x000000000005e700: test dword ptr [rdi - 0x1600000c], ebp; in al, 0xff; jmp qword ptr [rsi + 0xf]; 
0x000000000008d193: test dword ptr [rdx], edi; adc byte ptr [rax], al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000014f595: test dword ptr [rip + 0x48000001], ebp; mov eax, dword ptr [rbx + 0x58]; add rsp, 0x40; pop rbx; jmp rax; 
0x0000000000062c69: test dword ptr [rip - 0x7a3a0000], ecx; sar cl, 0xff; jmp qword ptr [rbp + 0x48]; 
0x0000000000176ae6: test eax, 0x3ec80148; jmp rax; 
0x000000000005460a: test eax, 0xc7fffff6; test dword ptr [rdi + rdi*8 - 1], esp; jmp qword ptr [rsi]; 
0x00000000000381ff: test eax, 0xf001521; mov dh, 0xc0; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000013874b: test eax, 0xfdf96fe8; jmp qword ptr [rsi + 0x66]; 
0x00000000000b05a8: test eax, 0xfffd3be9; jmp qword ptr [rsi - 0x70]; 
0x000000000013a717: test eax, eax; je 0x13a730; mov edx, dword ptr [rax + 0x5c]; lea rsi, [rax + 0x48]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x000000000014f6df: test eax, eax; je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x00000000000762f5: test eax, eax; je 0x76302; mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x00000000000763b5: test eax, eax; je 0x763c8; mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x0000000000084bdf: test eax, eax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x0000000000084c0f: test eax, eax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x0000000000084c5f: test eax, eax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x0000000000085a03: test eax, eax; je 0x85a18; mov rdx, qword ptr [rdi + 8]; mov rax, qword ptr [rdi]; mov rdi, rdx; jmp rax; 
0x0000000000068d01: test eax, ebp; idiv bh; inc esi; test edi, edi; idiv bh; jmp qword ptr [rax]; 
0x000000000010b639: test eax, esi; idiv edi; jmp qword ptr [rdi + 0x6d]; 
0x0000000000068c74: test edi, edi; idiv bh; jmp qword ptr [rax]; 
0x00000000000a45bd: test edx, edx; jne 0xa4521; lea r11, [rip + 0xec9a4]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac91d: test edx, edx; jne 0xac881; lea r11, [rip + 0xe495c]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000008590d: test esi, esi; je 0x85920; mov rdx, qword ptr [rdi + 8]; mov rax, qword ptr [rdi]; mov rdi, rdx; jmp rax; 
0x000000000013a716: test rax, rax; je 0x13a730; mov edx, dword ptr [rax + 0x5c]; lea rsi, [rax + 0x48]; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax + 0x18]; 
0x000000000014f6de: test rax, rax; je 0x14f6f0; jmp qword ptr [rax + 0x60]; 
0x00000000000762f4: test rax, rax; je 0x76302; mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x00000000000763b4: test rax, rax; je 0x763c8; mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x0000000000084bde: test rax, rax; je 0x84bf0; jmp qword ptr [rax + 0x28]; 
0x0000000000084c0e: test rax, rax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x0000000000084c5e: test rax, rax; je 0x84c70; jmp qword ptr [rax + 8]; 
0x00000000000a45bc: test rdx, rdx; jne 0xa4521; lea r11, [rip + 0xec9a4]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac91c: test rdx, rdx; jne 0xac881; lea r11, [rip + 0xe495c]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000039733: unpckhps xmm0, xmmword ptr [rax]; mov r8d, r8d; movsxd rsi, dword ptr [rdi + r8*4]; add rsi, rdi; jmp rsi; 
0x0000000000075b8c: vpaddb xmm1, xmm2, xmmword ptr [rcx]; sti; jmp qword ptr [rsi + 0x2e]; 
0x0000000000077f7c: vpaddsb xmm5, xmm2, xmm0; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000075ee1: vpand xmm0, xmm2, xmmword ptr [rsi]; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000077e51: vpavgw xmm5, xmm2, xmm1; cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000100a6f: vpmulhw xmm4, xmm2, xmmword ptr [rbx - 0xe]; jmp qword ptr [rsi + 0x2e]; 
0x0000000000076a1c: vpsubusw xmm7, xmm2, xmm4; cli; jmp qword ptr [rsi + 0x2e]; 
0x00000000000786dc: vsubpd xmm4, xmm2, xmm2; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000006ac78: xchg byte ptr [rax + 1], cl; clc; jmp rax; 
0x00000000000ca78a: xchg byte ptr [rcx + 0xc], dh; add byte ptr [rdi], cl; mov dh, 0xd1; movsxd rdx, dword ptr [rdi + rdx*4]; add rdx, rdi; jmp rdx; 
0x0000000000134ced: xchg byte ptr [rcx + rax - 0x10], cl; jmp rax; 
0x00000000000bdce6: xchg byte ptr [rcx - 9], dh; jmp qword ptr [rsi + 0xf]; 
0x000000000016e5a6: xchg dl, bh; jmp qword ptr [rsi + 0x66]; 
0x00000000000d9ab4: xchg dword ptr [rax + 1], ecx; clc; jmp rax; 
0x000000000006d1e8: xchg dword ptr [rbx + 0x48000004], ecx; lea esi, [rip + 0x122828]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000681f2: xchg dword ptr [rcx + 4], ebx; add byte ptr [rax], al; movsxd rcx, dword ptr [rdx + rcx*4]; add rcx, rdx; jmp rcx; 
0x000000000005a2c2: xchg dword ptr [rcx], edi; add al, 0; add byte ptr [rax + 0x63], cl; or al, 0x8a; add rcx, rdx; jmp rcx; 
0x00000000000383d6: xchg dword ptr [rdi + 0x48fffedf], edi; lea esi, [rip + 0x1521da]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000c78dc: xchg dword ptr [rdi + rdi*8 - 1], ebx; jmp qword ptr [rsi - 0x7f]; 
0x00000000000d6479: xchg dword ptr [rdx + 0x48000002], esp; lea edx, [rip + 0xbbd6f]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x00000000000383fb: xchg dword ptr [rdx + 0x48fffedf], ebx; lea esi, [rip + 0x152239]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000379db: xchg dword ptr [rdx + 0x48fffee9], edi; lea esi, [rip + 0x152629]; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006d5a5: xchg dword ptr [rsi + 0x48000007], ebp; lea ecx, [rip + 0x122677]; movsxd rax, dword ptr [rcx + rbx*4]; add rax, rcx; jmp rax; 
0x000000000004179f: xchg dword ptr [rsi + 0xf], ebp; add byte ptr [rax], al; movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000003315c: xchg dword ptr [rsi], edx; add al, byte ptr [rax]; add byte ptr [rax + 0x63], cl; or al, 0xbe; add rcx, rsi; jmp rcx; 
0x0000000000116be2: xchg ebp, eax; add esi, ecx; jmp qword ptr [rsi + 0x2e]; 
0x00000000000a3bac: xchg ebx, eax; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000535b1: xchg ebx, eax; or al, 0; add byte ptr [rax - 0x14343], al; jmp qword ptr [rsi + 0xf]; 
0x0000000000035996: xchg ecx, eax; add rax, rcx; jmp rax; 
0x000000000007522d: xchg ecx, eax; add rdx, rcx; jmp rdx; 
0x00000000000e6e13: xchg ecx, eax; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x00000000000c873e: xchg ecx, eax; or al, 0; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000011089b: xchg ecx, eax; push rdi; int1; jmp qword ptr [rsi + 0x48]; 
0x0000000000084c03: xchg ecx, eax; rcl byte ptr [rax + rax], cl; mov rax, qword ptr [rax + 0x368]; test rax, rax; je 0x84c20; jmp qword ptr [rax + 0x30]; 
0x000000000016d126: xchg ecx, eax; sar ch, 0xff; jmp qword ptr [rdx - 0xf]; 
0x000000000007d9af: xchg ecx, eax; cli; jmp qword ptr [rsi + 0x2e]; 
0x00000000000f3c85: xchg edi, eax; add rdx, r15; jmp rdx; 
0x000000000003f5ee: xchg edi, eax; add rdx, rdi; cmp esi, 0x2f; jmp rdx; 
0x000000000009efa8: xchg edi, eax; add rdx, rdi; jmp rdx; 
0x000000000013b0e5: xchg edi, eax; xor eax, 0xd2e8fff0; iretd; std; jmp qword ptr [rsi - 0x70]; 
0x000000000016d4d6: xchg edi, eax; cli; jmp qword ptr [rsi + 0x66]; 
0x00000000000f73dd: xchg edi, ebp; bnd jmp qword ptr [rsi + 0x2e]; 
0x00000000000d8650: xchg edx, eax; jp 0xd865f; add byte ptr [rbx - 0x4e74b], cl; jmp qword ptr [rsi - 0x77]; 
0x000000000013d0b4: xchg edx, eax; out dx, al; jmp qword ptr [rsi + 0xf]; 
0x0000000000147c26: xchg esi, eax; add al, 0xfd; jmp qword ptr [rsi + 0xf]; 
0x000000000005f8ff: xchg esi, eax; add rax, rsi; jmp rax; 
0x00000000000ca7bf: xchg esi, eax; add rdx, rsi; jmp rdx; 
0x000000000016c226: xchg esi, eax; jmp qword ptr [rdx - 0xd]; 
0x000000000005f1d3: xchg esi, eax; mov r8, qword ptr [rbp - 0x660]; mov rcx, qword ptr [rbp - 0x668]; add rax, rsi; jmp rax; 
0x00000000000bdd53: xchg esi, eax; or eax, 0x3d8d4800; sub edx, dword ptr [rsi + 0xee8000d]; jno 0xbdd58; jmp qword ptr [rsi + 0x2e]; 
0x000000000007d9ae: xchg esi, eax; xchg ecx, eax; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000007d450: xchg esi, eax; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000008b841: xchg esi, eax; cli; jmp qword ptr [rsi + 0x66]; 
0x0000000000043ed6: xchg esi, eax; ud0; jmp qword ptr [rsi + 0xf]; 
0x0000000000096a64: xchg esi, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000016e5a5: xchg r10b, r15b; jmp qword ptr [rsi + 0x66]; 
0x00000000000c873d: xchg r9, rax; or al, 0; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000016c225: xchg rsi, rax; jmp qword ptr [rdx - 0xd]; 
0x000000000005d9a2: xor ah, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x00000000000cfeaa: xor ah, byte ptr [rdx - 5]; jmp qword ptr [rsi - 0x70]; 
0x000000000005c6f6: xor al, 0x20; jmp rax; 
0x000000000005de13: xor al, 0x20; mov dword ptr [rsp + 0x20], 1; jmp rax; 
0x000000000003973b: xor al, 0x87; add rsi, rdi; jmp rsi; 
0x00000000000df255: xor al, 0xb; add byte ptr [rax + 0x63], cl; add al, 0x87; add rax, rdi; jmp rax; 
0x000000000005eec6: xor al, byte ptr [rbx]; adc eax, dword ptr [rax]; movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000ffac2: xor bh, al; jmp qword ptr [rsi + 0x66]; 
0x00000000000be890: xor bh, bh; jmp qword ptr [rsi + 0x2e]; 
0x0000000000094130: xor bh, bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000136a2a: xor bh, cl; out dx, al; jmp qword ptr [rsi + 0xf]; 
0x0000000000163bd6: xor bl, bh; jmp qword ptr [rsi + 0x66]; 
0x0000000000145070: xor bpl, r15b; jmp qword ptr [rsi + 0x66]; 
0x0000000000142674: xor byte ptr [r10], r8b; add byte ptr [rax], al; add bl, ch; mov eax, 0xfd5a3fe8; jmp qword ptr [rsi + 0x66]; 
0x00000000000ea96e: xor byte ptr [r8 + 0x63], r9b; or al, 0x8e; add rcx, rsi; jmp rcx; 
0x00000000000ea96f: xor byte ptr [rax + 0x63], cl; or al, 0x8e; add rcx, rsi; jmp rcx; 
0x000000000002754f: xor byte ptr [rax], al; add byte ptr [rax], al; jmp rax; 
0x00000000000275ab: xor byte ptr [rax], al; add byte ptr [rax], al; pop r12; pop r13; pop r14; jmp rax; 
0x00000000000275fd: xor byte ptr [rax], al; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000000762f0: xor byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x76302; mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x00000000000763b0: xor byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x763c8; mov rdi, qword ptr [rdi + 0xe0]; jmp rax; 
0x0000000000074c54: xor byte ptr [rbx + 0x767737f8], al; lea rcx, [rip + 0x11b8bb]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rcx; jmp rax; 
0x00000000000db6e8: xor byte ptr [rdi + 0xb], ch; add byte ptr [rax + 0x63], cl; add al, 0x86; add rax, rsi; jmp rax; 
0x0000000000142675: xor byte ptr [rdx], al; add byte ptr [rax], al; add bl, ch; mov eax, 0xfd5a3fe8; jmp qword ptr [rsi + 0x66]; 
0x0000000000145010: xor ch, bh; jmp qword ptr [rsi + 0x66]; 
0x00000000000d68bc: xor dword ptr [rax - 0x73], ecx; adc eax, 0xbbb14; mov esi, esi; movsxd rax, dword ptr [rdx + rsi*4]; add rax, rdx; jmp rax; 
0x0000000000074b56: xor dword ptr [rdi], ecx; mov dh, 0xc0; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000752bf: xor eax, 0x11b3e0; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000006dd12: xor eax, 0x121fc1; movsxd rax, dword ptr [rsi + rbx*4]; add rax, rsi; jmp rax; 
0x000000000006d1ef: xor eax, 0x122828; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000006aeb1: xor eax, 0x124a8a; movsxd rax, dword ptr [rsi + rax*4]; add rax, rdi; jmp rax; 
0x000000000005f8f4: xor eax, 0x12fbbf; movzx edx, dl; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005eec5: xor eax, 0x130332; movzx ecx, cl; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000383a8: xor eax, 0x15218b; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000381fe: xor eax, 0x1521a9; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000383dd: xor eax, 0x1521da; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038233: xor eax, 0x1521f8; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038402: xor eax, 0x152239; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038258: xor eax, 0x152257; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000038041: xor eax, 0x1522e2; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037af0: xor eax, 0x152623; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000379e2: xor eax, 0x152629; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b2c: xor eax, 0x15266b; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b68: xor eax, 0x1526b3; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x0000000000037b9d: xor eax, 0x152702; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000003745e: xor eax, 0x152b29; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000012c91d: xor eax, 0x67502; movzx eax, al; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000012c8c4: xor eax, 0x67547; add rax, rsi; jmp rax; 
0x00000000000e0022: xor eax, 0x8d486377; adc eax, 0xb2714; movzx r12d, r12b; movsxd rax, dword ptr [rdx + r12*4]; add rax, rdx; jmp rax; 
0x00000000000db6e7: xor eax, 0xb6f30; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x00000000000ca7b4: xor eax, 0xc7347; movzx edx, cl; movsxd rdx, dword ptr [rsi + rdx*4]; add rdx, rsi; jmp rdx; 
0x000000000013b0e6: xor eax, 0xd2e8fff0; iretd; std; jmp qword ptr [rsi - 0x70]; 
0x000000000008815b: xor eax, 0xdde80011; jb 0x88161; jmp qword ptr [rsi + 0x66]; 
0x000000000014226d: xor eax, 0xf6890005; movsxd rax, dword ptr [rcx + rsi*4]; add rax, rcx; jmp rax; 
0x000000000005d3b4: xor eax, 0xfffff204; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d2ec: xor eax, 0xfffff2cc; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d284: xor eax, 0xfffff334; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d216: xor eax, 0xfffff3a2; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d1ac: xor eax, 0xfffff40c; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b15d: xor eax, 0xfffff6cb; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b102: xor eax, 0xfffff726; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b098: xor eax, 0xfffff790; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000006b031: xor eax, 0xfffff7f7; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x12487f]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000006af08: xor eax, 0xfffff920; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x124928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005ca74: xor eax, 0xfffffb44; cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000002754c: xor eax, dword ptr [0x30]; jmp rax; 
0x00000000001403c7: xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x00000000001403e7: xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0x10], 2; add rdi, 0x10; jmp rcx; 
0x0000000000142ae7: xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0x58], 2; add rdi, 0x58; jmp rcx; 
0x00000000001421e7: xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0x68], 2; add rdi, 0x68; jmp rcx; 
0x000000000013f817: xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0xc8], 2; add rdi, 0xc8; jmp rcx; 
0x0000000000147682: xor eax, eax; pop r14; jmp rcx; 
0x000000000013c090: xor eax, eax; pop rbp; jmp rdx; 
0x000000000013c987: xor eax, eax; pop rbx; add rdi, 0x23b0; pop rbp; jmp rcx; 
0x000000000013a982: xor eax, eax; pop rbx; pop rbp; jmp rcx; 
0x000000000006c1e5: xor ebp, ebp; jmp rax; 
0x000000000005dd91: xor ebp, ebp; mov r14d, 1; jmp rax; 
0x000000000006b72f: xor ebp, ebp; movzx edx, byte ptr [rax + rdx]; lea rax, [rip + 0x124004]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x0000000000178990: xor ebp, ecx; cmp bl, 0xff; jmp qword ptr [rsi + 0x2e]; 
0x0000000000144f30: xor ebp, edi; jmp qword ptr [rsi + 0x66]; 
0x0000000000145796: xor ebx, edi; jmp qword ptr [rsi - 0x7d]; 
0x00000000000be827: xor edi, edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000082f63: xor edi, edx; jmp qword ptr [rsi + 0xf]; 
0x000000000008835b: xor edx, dword ptr [r9]; add al, ch; fdiv qword ptr [rax - 1]; jmp qword ptr [rsi + 0x66]; 
0x000000000005dde9: xor edx, dword ptr [rcx]; adc eax, dword ptr [rax]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000008835c: xor edx, dword ptr [rcx]; add al, ch; fdiv qword ptr [rax - 1]; jmp qword ptr [rsi + 0x66]; 
0x000000000005d466: xor edx, edx; jmp rax; 
0x000000000008350b: xor edx, edx; mov rsi, qword ptr [rsp + 0x10]; mov rdi, qword ptr [rsp + 8]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000000834e2: xor edx, edx; pop rbx; jmp rax; 
0x0000000000077d74: xor edx, edx; pop rbx; pop rbp; pop r12; pop r13; jmp rax; 
0x000000000005d465: xor r10d, r10d; jmp rax; 
0x000000000005dd90: xor r13d, r13d; mov r14d, 1; jmp rax; 
0x00000000000be826: xor r15d, edi; jmp qword ptr [rsi + 0xf]; 
0x000000000002754b: xor rax, qword ptr [0x30]; jmp rax; 
0x000000000002754a: xor rax, qword ptr fs:[0x30]; jmp rax; 
0x000000000017a0ea: cdq; add eax, 0x77fee900; clc; jmp qword ptr [rsi + 0xf]; 
0x000000000006d5b4: cdq; add rax, rcx; jmp rax; 
0x0000000000134823: cdq; cmp dh, bh; jmp qword ptr [rsi + 0xf]; 
0x0000000000147823: cdq; or ch, bh; jmp qword ptr [rsi + 0xf]; 
0x00000000001333d3: cdq; sbb dh, al; jmp qword ptr [rsi + 0xf]; 
0x00000000000337c3: cdq; sub edi, edi; jmp qword ptr [rsi + 0xf]; 
0x0000000000148323: cdq; std; cld; jmp qword ptr [rsi + 0xf]; 
0x000000000005a869: cdqe; movzx eax, byte ptr [rdi + rax]; lea rdi, [rip + 0x1345aa]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005ca79: cdqe; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d650: cdqe; movzx edx, byte ptr [rcx + rax]; lea rax, [rip + 0x131943]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d520: cdqe; movzx edx, byte ptr [rcx + rax]; lea rax, [rip + 0x1319f3]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d419: cdqe; movzx edx, byte ptr [rcx + rax]; lea rax, [rip + 0x131afa]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d5eb: cdqe; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x131928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d4b9: cdqe; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x131a5a]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d0c9: cdqe; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x131fca]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005dde0: cdqe; movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x131133]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d58a: cdqe; movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x131909]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d6c7: cdqe; movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x13194c]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x0000000000146e41: clc; add dword ptr [rbp - 0x14], esi; mov rax, qword ptr [rdi + 8]; jmp qword ptr [rax]; 
0x0000000000038234: clc; and dword ptr [rip - 0x3f49f100], edx; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000014e91d: clc; call qword ptr [rax - 0x1de417]; jmp qword ptr [rsi + 0x2e]; 
0x00000000000db6e1: clc; cmp esi, dword ptr [rdi + 0x23]; lea rsi, [rip + 0xb6f30]; movsxd rax, dword ptr [rsi + rax*4]; add rax, rsi; jmp rax; 
0x000000000008d18c: clc; ja 0x8d1d8; lea rdx, [rip + 0x103a85]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x00000000000b1e84: clc; jmp qword ptr [rsi + 0x2e]; 
0x00000000000ffac3: clc; jmp qword ptr [rsi + 0x66]; 
0x000000000009b838: clc; jmp qword ptr [rsi + 0xf]; 
0x000000000009b82c: clc; jmp qword ptr [rsi - 0x70]; 
0x000000000005d59d: clc; jmp rax; 
0x000000000009a07a: clc; or dword ptr [rdi + 0x62], esi; lea rdx, [rip + 0xf6d3b]; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x0000000000148811: clc; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000076ed1: clc; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000141a70: cld; cmp ecx, edi; dec dword ptr [rcx - 0x1437b]; jmp qword ptr [rsi + 0xf]; 
0x0000000000165b4f: cld; jmp qword ptr [rdx + 1]; 
0x00000000000d02c1: cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000067961: cld; jmp qword ptr [rsi + 0x66]; 
0x00000000000d6bd8: cld; jmp qword ptr [rsi + 0xf]; 
0x00000000000bd86c: cld; jmp qword ptr [rsi - 0x70]; 
0x0000000000075b8e: cld; or ebx, edi; jmp qword ptr [rsi + 0x2e]; 
0x00000000000d02e0: cld; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000076a1f: cld; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000013843f: cld; std; jmp qword ptr [rsi + 0x66]; 
0x000000000008f142: cli; add bh, bh; jmp qword ptr [rsi + 0x2e]; 
0x000000000003f5f1: cli; cmp esi, 0x2f; jmp rdx; 
0x0000000000176372: cli; idiv edi; jmp qword ptr [rsi + 0x2e]; 
0x0000000000076690: cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000008453f: cli; jmp qword ptr [rsi + 0x48]; 
0x000000000007b71c: cli; jmp qword ptr [rsi + 0x49]; 
0x000000000007bb52: cli; jmp qword ptr [rsi + 0x66]; 
0x00000000000768a5: cli; jmp qword ptr [rsi + 0xf]; 
0x000000000008b2fc: cli; jmp qword ptr [rsi - 0x70]; 
0x000000000009efab: cli; jmp rdx; 
0x0000000000035988: cli; or dh, byte ptr [rdi + 0x27]; lea rcx, [rip + 0x1545cd]; movsxd rax, dword ptr [rcx + rdx*4]; add rax, rcx; jmp rax; 
0x00000000000e5b1a: cli; pcmpeqw mm1, qword ptr [rdx + 0x3c8bf]; add al, ch; or spl, sil; jmp qword ptr [rsi + 0xf]; 
0x000000000005d422: cli; sbb dl, byte ptr [rbx]; add byte ptr [rax + 0x63], cl; add al, 0x90; add rax, rsi; jmp rax; 
0x00000000000f3c7b: cli; sbb eax, 0xb60f1177; ror byte ptr [rcx + 0x63], cl; adc al, 0x97; add rdx, r15; jmp rdx; 
0x0000000000075226: cli; sub dword ptr [rdi + 0xe], esi; movsxd rdx, dword ptr [rcx + r10*4]; add rdx, rcx; jmp rdx; 
0x0000000000082f62: cli; xor edi, edx; jmp qword ptr [rsi + 0xf]; 
0x00000000001482c2: cli; std; cld; jmp qword ptr [rsi + 0x2e]; 
0x00000000000d67f3: cmc; jmp qword ptr [rsi + 0x2e]; 
0x00000000000d4497: cmc; jmp qword ptr [rsi + 0xf]; 
0x00000000000f3f39: cmc; or dword ptr [rax], eax; movzx edx, dl; movsxd rdx, dword ptr [rcx + rdx*4]; add rdx, rcx; jmp rdx; 
0x000000000007618e: cwde; add al, 0xfb; jmp qword ptr [rsi + 0x2e]; 
0x00000000000daf9d: cwde; add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0x28; mov bl, 0xf4; jmp qword ptr [rsi + 0xf]; 
0x00000000000d932d: cwde; add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0xd8; int 0xf4; jmp qword ptr [rsi + 0xf]; 
0x00000000000f7795: cwde; add dword ptr [rax], eax; add byte ptr [rcx], dh; sal bh, 0xc2; jmp rsi; 
0x000000000005a86a: cwde; movzx eax, byte ptr [rdi + rax]; lea rdi, [rip + 0x1345aa]; movsxd rax, dword ptr [rdi + rax*4]; add rax, rsi; jmp rax; 
0x000000000005ca7a: cwde; movzx eax, byte ptr [rdi + rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rsi; jmp rax; 
0x000000000005d651: cwde; movzx edx, byte ptr [rcx + rax]; lea rax, [rip + 0x131943]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d521: cwde; movzx edx, byte ptr [rcx + rax]; lea rax, [rip + 0x1319f3]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d41a: cwde; movzx edx, byte ptr [rcx + rax]; lea rax, [rip + 0x131afa]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rsi; jmp rax; 
0x000000000005d5ec: cwde; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x131928]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d4ba: cwde; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x131a5a]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005d0ca: cwde; movzx edx, byte ptr [rdi + rax]; lea rax, [rip + 0x131fca]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rcx; jmp rax; 
0x000000000005dde1: cwde; movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x131133]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d58b: cwde; movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x131909]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000005d6c8: cwde; movzx edx, byte ptr [rsi + rax]; lea rax, [rip + 0x13194c]; movsxd rax, dword ptr [rax + rdx*4]; add rax, rdi; jmp rax; 
0x000000000014e851: cwde; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000129826: fcos; jmp qword ptr [rsi + 0x48]; 
0x0000000000076a1e: frndint; cli; jmp qword ptr [rsi + 0x2e]; 
0x000000000013a704: fscale; jmp qword ptr [rsi + 0xf]; 
0x00000000000790ef: fsqrt; jmp qword ptr [rsi + 0x2e]; 
0x00000000000de607: hlt; dec dword ptr [rax - 0x77]; fistp word ptr [rbx - 0x17]; jge 0xde605; jmp qword ptr [rsi + 0x66]; 
0x0000000000116a44: hlt; jmp qword ptr [rsi + 0x2e]; 
0x00000000000de610: hlt; jmp qword ptr [rsi + 0x66]; 
0x00000000000d9336: hlt; jmp qword ptr [rsi + 0xf]; 
0x000000000014fe7c: hlt; jmp qword ptr [rsi - 0x70]; 
0x0000000000148c04: hlt; cld; jmp qword ptr [rsi + 0xf]; 
0x0000000000138c4f: hlt; std; jmp qword ptr [rsi + 0x66]; 
0x000000000016d141: int1; dec byte ptr [rax + 0x6f]; pop rcx; jmp qword ptr [rdx - 0x2f]; 
0x0000000000115c62: int1; jmp qword ptr [rsi + 0x2e]; 
0x000000000011089d: int1; jmp qword ptr [rsi + 0x48]; 
0x0000000000116f45: int1; jmp qword ptr [rsi + 0xf]; 
0x0000000000033167: int1; jmp rcx; 
0x00000000000ce893: int1; out 0xff, al; jmp qword ptr [rsi + 0xf]; 
0x000000000012b36b: int1; scasd eax, dword ptr [rdi]; out dx, eax; jmp qword ptr [rsi + 0xf]; 
0x00000000001403c6: int1; xor eax, eax; mov rsi, rdx; add rdi, 0x10; jmp rcx; 
0x00000000001403e6: int1; xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0x10], 2; add rdi, 0x10; jmp rcx; 
0x0000000000142ae6: int1; xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0x58], 2; add rdi, 0x58; jmp rcx; 
0x00000000001421e6: int1; xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0x68], 2; add rdi, 0x68; jmp rcx; 
0x000000000013f816: int1; xor eax, eax; mov rsi, rdx; mov dword ptr [rdi + 0xc8], 2; add rdi, 0xc8; jmp rcx; 
0x00000000000aedff: iretd; add rsi, rcx; lea r11, [rip + 0xe25c6]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac8af: iretd; add rsi, rcx; lea r11, [rip + 0xe49ce]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a454f: iretd; add rsi, rcx; lea r11, [rip + 0xeca16]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000001447ed: iretd; cmp ch, bh; jmp qword ptr [rsi + 0x66]; 
0x0000000000135d2d: iretd; idiv edi; jmp qword ptr [rsi + 0x66]; 
0x000000000009eed6: iretd; jmp rdi; 
0x00000000000a9875: iretd; js 0xa9886; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000f42c9: iretd; movsxd rax, dword ptr [rdx + r15*4]; add rax, rdx; jmp rax; 
0x000000000009eecf: iretd; movsxd rdi, dword ptr [r9 + rdi*4]; add rdi, r9; jmp rdi; 
0x000000000013b0eb: iretd; std; jmp qword ptr [rsi - 0x70]; 
0x00000000000af7bd: lahf; sbb al, 0xe; add byte ptr [rbx + 0x63], cl; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x0000000000117ba7: lahf; stc; jmp qword ptr [rsi + 0xf]; 
0x0000000000132da3: leave; and al, dh; jmp qword ptr [rsi + 0xf]; 
0x00000000001014a3: leave; idiv edi; jmp qword ptr [rsi + 0xf]; 
0x00000000000eaf6f: leave; jmp rcx; 
0x00000000000417a6: leave; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x000000000005d0d9: nop; add rax, rcx; jmp rax; 
0x000000000005d59a: nop; add rax, rdi; jmp rax; 
0x000000000005d429: nop; add rax, rsi; jmp rax; 
0x00000000000ac76f: nop; bsf rdx, rdx; lea r11, [rip + 0xe4a8d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a770f: nop; bsf rdx, rdx; lea r11, [rip + 0xe996d]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a3c6f: nop; bsf rdx, rdx; lea r11, [rip + 0xed1e9]; movsxd rcx, dword ptr [r11 + rdx*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000006b099: nop; idiv edi; dec dword ptr [rax + 0x63]; add al, 0x87; add rax, rsi; jmp rax; 
0x000000000005de1f: nop; mov dword ptr [rsp + 0x48], 1; jmp rax; 
0x000000000014f6ff: nop; mov rax, qword ptr [rip + 0x82791]; mov rsi, rdi; mov rdi, qword ptr [rsp]; mov rax, qword ptr [rax + 0x320]; jmp rax; 
0x00000000000c86d2: nop; or al, 0; movzx eax, al; movsxd rax, dword ptr [rdx + rax*4]; add rax, rdx; jmp rax; 
0x000000000014f0b3: nop; cld; jmp qword ptr [rsi + 0x2e]; 
0x00000000000aee2f: popfq; and eax, 0x634b000e; or al, 0x83; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000014061f: popfq; jp 0x14061f; jmp qword ptr [rsi + 0x66]; 
0x00000000000aeda2: popfq; lea r11, [rip + 0xe2626]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000ac852: popfq; lea r11, [rip + 0xe4a2e]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x00000000000a44f2: popfq; lea r11, [rip + 0xeca76]; movsxd rcx, dword ptr [r11 + r8*4]; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000005c0a4: popfq; pop rsp; idiv edi; jmp qword ptr [rsi - 0x77]; 
0x000000000012551f: popfq; sub edi, edi; jmp qword ptr [rsi + 0x2e]; 
0x00000000001175d7: popfq; stc; jmp qword ptr [rsi + 0xf]; 
0x000000000007b0e4: popfq; sti; jmp qword ptr [rsi + 0xf]; 
0x0000000000111f00: pushfq; add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; jmp qword ptr [rsi + 0xf]; 
0x0000000000149420: pushfq; in al, dx; cld; jmp qword ptr [rsi + 0x2e]; 
0x00000000000a99a8: pushfq; ja 0xa99b9; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000006b15e: retf; idiv bh; dec dword ptr [rax + 0x63]; add al, 0x87; add rax, rsi; jmp rax; 
0x00000000001298f1: retf; out 0xfe, eax; jmp qword ptr [rsi + 0x2e]; 
0x000000000006dd1a: sahf; add rax, rsi; jmp rax; 
0x00000000001147c4: sahf; bnd jmp qword ptr [rsi + 0xf]; 
0x000000000014c1ce: sahf; mov esi, gs; jmp qword ptr [rsi + 0x66]; 
0x000000000006d3c7: sahf; mov r9, qword ptr [rbp - 0x600]; mov rcx, qword ptr [rbp - 0x608]; mov r8d, dword ptr [rbp - 0x610]; add rax, rsi; jmp rax; 
0x000000000013c48b: sahf; out dx, al; jmp qword ptr [rsi - 0x70]; 
0x000000000007feae: sahf; outsb dx, byte ptr [rsi]; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000089ece: sahf; scasd eax, dword ptr [rdi]; cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000117b52: sahf; stc; jmp qword ptr [rsi + 0x2e]; 
0x000000000008b83b: stc; call qword ptr [rax]; add al, ch; sub al, 0x96; cli; jmp qword ptr [rsi + 0x66]; 
0x0000000000141a72: stc; dec dword ptr [rcx - 0x1437b]; jmp qword ptr [rsi + 0xf]; 
0x000000000006d1e5: stc; ja 0x6d678; lea rsi, [rip + 0x122828]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x00000000000752b9: stc; ja 0x752dc; lea rsi, [rip + 0x11b3e0]; movsxd rcx, dword ptr [rsi + rcx*4]; add rcx, rsi; jmp rcx; 
0x0000000000117b53: stc; jmp qword ptr [rsi + 0x2e]; 
0x00000000000beb2e: stc; jmp qword ptr [rsi + 0x3d]; 
0x0000000000091453: stc; jmp qword ptr [rsi + 0x66]; 
0x000000000009f655: stc; jmp qword ptr [rsi + 0xf]; 
0x000000000009ae4c: stc; jmp qword ptr [rsi - 0x70]; 
0x0000000000136a2b: stc; out dx, al; jmp qword ptr [rsi + 0xf]; 
0x000000000013874e: stc; std; jmp qword ptr [rsi + 0x66]; 
0x00000000000a9947: std; ja 0xa9958; add byte ptr [rcx + 0x63], cl; or al, 0x93; lea rcx, [r11 + rcx]; jmp rcx; 
0x000000000009ea23: std; jmp qword ptr [rsi + 0x2e]; 
0x00000000000fb41f: std; jmp qword ptr [rsi + 0x45]; 
0x00000000000598a1: std; jmp qword ptr [rsi + 0x66]; 
0x00000000000466e5: std; jmp qword ptr [rsi + 0xf]; 
0x000000000010177c: std; jmp qword ptr [rsi - 0x70]; 
0x000000000013514e: std; out dx, eax; jmp qword ptr [rsi + 0x66]; 
0x00000000001482c3: std; cld; jmp qword ptr [rsi + 0x2e]; 
0x0000000000148390: std; cld; jmp qword ptr [rsi + 0x66]; 
0x0000000000148324: std; cld; jmp qword ptr [rsi + 0xf]; 
0x000000000005f8f6: sti; adc al, byte ptr [rax]; movzx edx, dl; movsxd rax, dword ptr [rsi + rdx*4]; add rax, rsi; jmp rax; 
0x00000000000d67be: sti; ja 0xd6720; lea rdx, [rip + 0xbbadf]; movsxd rax, dword ptr [rdx + rbx*4]; add rax, rdx; jmp rax; 
0x0000000000075b90: sti; jmp qword ptr [rsi + 0x2e]; 
0x000000000007eadf: sti; jmp qword ptr [rsi + 0x66]; 
0x0000000000075ee5: sti; jmp qword ptr [rsi + 0xf]; 
0x00000000000cfeac: sti; jmp qword ptr [rsi - 0x70]; 
0x0000000000140417: sti; jmp qword ptr [rsi - 0x7d]; 
0x000000000013532e: sti; out dx, eax; jmp qword ptr [rsi + 0x2e]; 
0x0000000000083761: sti; sub edi, edx; jmp qword ptr [rsi + 0xf]; 
0x0000000000076c27: sti; cli; jmp qword ptr [rsi + 0xf]; 
0x0000000000043ed7: ud0; jmp qword ptr [rsi + 0xf]; 
0x000000000014e574: wait; cld; jmp qword ptr [rsi + 0xf]; 
0x000000000008b2fb: wait; cli; jmp qword ptr [rsi - 0x70]; 
0x000000000006c39a: xlatb; in eax, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000008591a: xlatb; jmp rax; 
0x000000000009f044: xlatb; movsxd rdi, dword ptr [r8 + rdi*4]; add rdi, r8; jmp rdi; 
0x000000000014fd87: xlatb; out dx, al; jmp qword ptr [rsi + 0xf]; 
0x00000000000793a2: xlatb; cli; jmp qword ptr [rsi + 0x2e]; 
0x0000000000129825: xlatb; fcos; jmp qword ptr [rsi + 0x48]; 

